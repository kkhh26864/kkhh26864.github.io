<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>如何将应用发布到LINE？</title>
    <link href="/2024/12/06/%E5%B0%86%E5%BA%94%E7%94%A8%E5%8F%91%E5%B8%83%E5%88%B0LINE%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <url>/2024/12/06/%E5%B0%86%E5%BA%94%E7%94%A8%E5%8F%91%E5%B8%83%E5%88%B0LINE%E7%9A%84%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p>以下是将前端项目发布到LINE的主要步骤：</p><ol><li><p>首先需要在 LINE Developers Console 创建一个 Provider 和 Channel：<br><a href="https://developers.line.biz/console/">https://developers.line.biz/console/</a></p></li><li><p>创建 LIFF (LINE Front-end Framework) 应用：</p><ul><li>登录 LINE Developers Console</li><li>选择你的 Provider</li><li>创建一个新的 Channel (类型选择 “LIFF”)</li><li>在 LIFF 页面点击 “Add LIFF app”</li><li>填写以下信息：<ul><li>Size: Full&#x2F;Tall&#x2F;Compact</li><li>Endpoint URL: 你的网站URL</li><li>Scope: 选择需要的权限</li></ul></li></ul></li><li><p>在你的前端项目中集成 LIFF SDK：</p><ul><li>index.html 文件中添加以下代码： <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://static.line-scdn.net/liff/edge/2/sdk.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li>main.js 文件中添加以下代码： <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 初始化 LIFF</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">initializeLiff</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">await</span> liff.<span class="hljs-title function_">init</span>(&#123;<br>            <span class="hljs-attr">liffId</span>: <span class="hljs-string">&quot;你的LIFF_ID&quot;</span> <span class="hljs-comment">// 从 LINE Developers Console 获取</span><br>        &#125;);<br><br>        <span class="hljs-comment">// 判断是否在 LINE 环境中</span><br>        <span class="hljs-keyword">if</span> (!liff.<span class="hljs-title function_">isLoggedIn</span>()) &#123;<br>            liff.<span class="hljs-title function_">login</span>();<br>        &#125;<br>    &#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;LIFF初始化失败&#x27;</span>, err);<br>    &#125;<br>&#125;<br><br><span class="hljs-title function_">initializeLiff</span>();<br></code></pre></td></tr></table></figure></li></ul></li><li><p>部署你的网站到支持 HTTPS 的服务器（必需）</p></li><li><p>分享方式：</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 生成LINE分享链接</span><br><span class="hljs-keyword">const</span> shareUrl = <span class="hljs-string">`https://liff.line.me/<span class="hljs-subst">$&#123;你的LIFF_ID&#125;</span>`</span>;<br><br><span class="hljs-comment">// 或者使用LIFF的分享API</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">sharePage</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">await</span> liff.<span class="hljs-title function_">shareTargetPicker</span>([<br>        &#123;<br>            <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;text&quot;</span>,<br>        <span class="hljs-attr">text</span>: <span class="hljs-string">&quot;查看我的页面：&quot;</span> + <span class="hljs-variable language_">window</span>.<span class="hljs-property">location</span>.<span class="hljs-property">href</span><br>    &#125;<br>    ]);<br>&#125;<br></code></pre></td></tr></table></figure></li></ol><h2 id="关键注意事项："><a href="#关键注意事项：" class="headerlink" title="关键注意事项："></a>关键注意事项：</h2><ul><li>必须使用 HTTPS</li><li>域名必须是真实域名，不能用 IP 地址</li><li>本地开发可以用 localhost</li><li>记得在 LINE Developers Console 设置正确的 Endpoint URL</li><li>需要处理不同的访问场景（LINE内&#x2F;外部浏览器）</li></ul><h2 id="常见使用场景："><a href="#常见使用场景：" class="headerlink" title="常见使用场景："></a>常见使用场景：</h2><ul><li>获取用户信息  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> profile = <span class="hljs-keyword">await</span> liff.<span class="hljs-title function_">getProfile</span>();<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(profile.<span class="hljs-property">displayName</span>);<br></code></pre></td></tr></table></figure></li><li>关闭LIFF窗口  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">liff.<span class="hljs-title function_">closeWindow</span>();<br></code></pre></td></tr></table></figure></li><li>检查是否在LINE中  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> isInLine = liff.<span class="hljs-title function_">isInClient</span>();<br></code></pre></td></tr></table></figure></li></ul><h2 id="必须要商用账号吗？"><a href="#必须要商用账号吗？" class="headerlink" title="必须要商用账号吗？"></a>必须要商用账号吗？</h2><ul><li>不需要商用账号，个人账号就可以。</li><li>具体步骤：<ul><li>用普通的 LINE 账号登录 LINE Developers Console</li><li>创建一个免费的 Provider（开发者提供商）</li><li>在这个 Provider 下创建 Channel</li></ul></li><li>免费版限制：<ul><li>每月可以发送 500 条消息</li><li>每个 Provider 最多可以创建 10 个 Channel</li><li>基础API功能都可以使用</li><li>LIFF 功能完全可用</li></ul></li><li>如果之后需要扩展（比如发更多消息），再升级到商用账号也可以。</li></ul><h2 id="Channel类型选择"><a href="#Channel类型选择" class="headerlink" title="Channel类型选择"></a>Channel类型选择</h2><p>LINE提供了多种Channel类型，各有不同用途：</p><h3 id="1-LINE-Login-channel"><a href="#1-LINE-Login-channel" class="headerlink" title="1. LINE Login channel"></a>1. LINE Login channel</h3><ul><li>用于实现LINE账号登录功能</li><li>适合需要用户通过LINE账号登录你的网站&#x2F;应用的场景</li><li>可以获取用户基本信息（头像、名称等）</li><li>最常用于网站集成LINE登录功能</li></ul><h3 id="2-Messaging-API-channel"><a href="#2-Messaging-API-channel" class="headerlink" title="2. Messaging API channel"></a>2. Messaging API channel</h3><ul><li>用于开发LINE机器人</li><li>可以实现自动回复、推送消息等功能</li><li>适合需要和用户进行消息交互的场景</li><li>常用于客服机器人、通知推送等</li></ul><h3 id="3-Blockchain-Service-channel"><a href="#3-Blockchain-Service-channel" class="headerlink" title="3. Blockchain Service channel"></a>3. Blockchain Service channel</h3><ul><li>用于区块链相关服务</li><li>可以开发NFT、数字资产等应用</li><li>比较专业，除非特别需要否则不用选择</li></ul><h3 id="4-LINE-MINI-App-channel"><a href="#4-LINE-MINI-App-channel" class="headerlink" title="4. LINE MINI App channel"></a>4. LINE MINI App channel</h3><ul><li>用于开发LINE小程序</li><li>类似微信小程序的概念</li><li>应用直接运行在LINE平台内</li><li>适合开发轻量级应用</li></ul><h2 id="LINE-MINI-App详解"><a href="#LINE-MINI-App详解" class="headerlink" title="LINE MINI App详解"></a>LINE MINI App详解</h2><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><ol><li><strong>用户体验</strong></li></ol><ul><li>无需安装，直接在LINE内运行</li><li>启动速度快，占用空间小</li><li>与LINE原生UI&#x2F;UX无缝衔接</li></ul><ol start="2"><li><strong>获客优势</strong></li></ol><ul><li>可以出现在LINE MINI App目录中</li><li>用户分享更容易（一键分享到LINE）</li><li>利用LINE庞大的用户基础</li></ul><ol start="3"><li><strong>功能特性</strong></li></ol><ul><li>可调用LINE原生API（支付、定位等）</li><li>支持离线缓存</li><li>可以访问LINE用户信息</li></ul><ol start="4"><li><strong>开发便利</strong></li></ol><ul><li>开发成本相对较低</li><li>一次开发，跨平台运行</li><li>更新方便，无需用户手动更新</li></ul><h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><ol><li><strong>技术限制</strong></li></ol><ul><li>功能受限，不如原生应用灵活</li><li>性能有瓶颈，不适合重度应用</li><li>必须遵循LINE的规范和限制</li></ul><ol start="2"><li><strong>商业限制</strong></li></ol><ul><li>支付必须用LINE Pay</li><li>内容审核严格</li><li>收入分成（如有付费功能）</li></ul><ol start="3"><li><strong>市场局限</strong></li></ol><ul><li>主要面向日本&#x2F;台湾市场</li><li>其他地区LINE用户基数较小</li><li>竞争较激烈（日本市场）</li></ul><h2 id="电商应用选择建议"><a href="#电商应用选择建议" class="headerlink" title="电商应用选择建议"></a>电商应用选择建议</h2><p>强烈建议使用 <strong>LINE Login channel + LIFF</strong>，原因如下：</p><h3 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h3><ol><li><strong>技术优势</strong></li></ol><ul><li>可以用任何前端框架（React&#x2F;Vue等）</li><li>完全控制用户体验和UI设计</li><li>可以自由选择后端技术栈</li><li>支持第三方支付（不限于LINE Pay）</li></ul><ol start="2"><li><strong>商业优势</strong></li></ol><ul><li>无需分成</li><li>可以做全球市场</li><li>更容易做SEO优化</li><li>可以同时服务LINE内外的用户</li></ul><h3 id="实施建议"><a href="#实施建议" class="headerlink" title="实施建议"></a>实施建议</h3><ol><li><p><strong>基础架构示例</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 1. 初始化LIFF</span><br>liff.<span class="hljs-title function_">init</span>(&#123;<br>    <span class="hljs-attr">liffId</span>: <span class="hljs-string">&quot;你的LIFF_ID&quot;</span>,<br>    <span class="hljs-attr">withLoginOnExternalBrowser</span>: <span class="hljs-literal">true</span>  <span class="hljs-comment">// 允许外部浏览器登录</span><br>&#125;);<br><br><span class="hljs-comment">// 2. 处理登录状态</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">checkAndHandleLogin</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">if</span> (!liff.<span class="hljs-title function_">isLoggedIn</span>()) &#123;<br>        <span class="hljs-keyword">await</span> liff.<span class="hljs-title function_">login</span>();<br>    &#125;<br>    <span class="hljs-keyword">const</span> profile = <span class="hljs-keyword">await</span> liff.<span class="hljs-title function_">getProfile</span>();<br>    <span class="hljs-keyword">return</span> profile;<br>&#125;<br><br><span class="hljs-comment">// 3. 支付集成示例</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">handlePayment</span>(<span class="hljs-params">orderId, amount</span>) &#123;<br>    <span class="hljs-keyword">if</span> (liff.<span class="hljs-title function_">isInClient</span>()) &#123;<br>        <span class="hljs-comment">// LINE内使用LINE Pay</span><br>        <span class="hljs-keyword">await</span> linePay.<span class="hljs-title function_">request</span>(&#123;...&#125;);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-comment">// LINE外使用其他支付</span><br>        <span class="hljs-keyword">await</span> otherPayment.<span class="hljs-title function_">request</span>(&#123;...&#125;);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p><strong>建议功能</strong></p></li></ol><ul><li>实现响应式设计</li><li>支持多种支付方式</li><li>做好LINE内外场景适配</li><li>实现分享到LINE功能</li><li>集成LINE Notify（订单通知）</li><li>添加LINE机器人（客服）</li><li>实现社交分享奖励</li><li>支持会员系统</li></ul>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
      <category>LINE</category>
      
    </categories>
    
    
    <tags>
      
      <tag>LINE</tag>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GitHub Actions如何通过跳板机自动部署应用</title>
    <link href="/2024/11/30/github-actions%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87%E8%B7%B3%E6%9D%BF%E6%9C%BA%E9%83%A8%E7%BD%B2%E5%BA%94%E7%94%A8/"/>
    <url>/2024/11/30/github-actions%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87%E8%B7%B3%E6%9D%BF%E6%9C%BA%E9%83%A8%E7%BD%B2%E5%BA%94%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="使用-GitHub-Actions-通过跳板机部署应用"><a href="#使用-GitHub-Actions-通过跳板机部署应用" class="headerlink" title="使用 GitHub Actions 通过跳板机部署应用"></a>使用 GitHub Actions 通过跳板机部署应用</h2><p>在某些情况下，目标服务器无法直接通过 GitHub 访问。这时，我们可以使用跳板机（Bastion Host）来实现自动部署。以下是通过 GitHub Actions 配置跳板机部署的步骤：</p><h3 id="1-在本机生成-ed25519-密钥对"><a href="#1-在本机生成-ed25519-密钥对" class="headerlink" title="1. 在本机生成 ed25519 密钥对"></a>1. 在本机生成 ed25519 密钥对</h3>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen -t ed25519 -f ~/.ssh/id_ed25519 -N <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-built_in">cat</span> ~/.ssh/id_ed25519.pub<br></code></pre></td></tr></table></figure><p>   为了防止跳板机和目标服务器之间无法通过 SSH 连接，我们需要在本机生成 ed25519 密钥对，并将其公钥添加到跳板机和目标服务器的 <code>authorized_keys</code> 文件中。其实这个秘钥对在跳板机或者目标服务器上生成都可以，只要能互相通信就行。</p><h3 id="2-在跳板机和目标服务器上添加新生成的公钥"><a href="#2-在跳板机和目标服务器上添加新生成的公钥" class="headerlink" title="2. 在跳板机和目标服务器上添加新生成的公钥"></a>2. 在跳板机和目标服务器上添加新生成的公钥</h3><p>   在跳板机和目标服务器上，您需要将新生成的公钥添加到 <code>~/.ssh/authorized_keys</code> 文件中，以便允许通过 SSH 进行无密码登录。以下是具体步骤：</p><h4 id="2-1-登录到跳板机："><a href="#2-1-登录到跳板机：" class="headerlink" title="2.1 登录到跳板机："></a>2.1 登录到跳板机：</h4>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh <span class="hljs-variable">$&#123;BASTION_USER&#125;</span>@<span class="hljs-variable">$&#123;BASTION_HOST&#125;</span><br></code></pre></td></tr></table></figure><h4 id="2-2-将公钥添加到跳板机的-authorized-keys-文件："><a href="#2-2-将公钥添加到跳板机的-authorized-keys-文件：" class="headerlink" title="2.2. 将公钥添加到跳板机的 authorized_keys 文件："></a>2.2. 将公钥添加到跳板机的 <code>authorized_keys</code> 文件：</h4>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;新生成的公钥内容&quot;</span> &gt;&gt; ~/.ssh/authorized_keys<br><span class="hljs-built_in">chmod</span> 600 ~/.ssh/authorized_keys<br></code></pre></td></tr></table></figure><h4 id="2-3-然后，登录到目标服务器："><a href="#2-3-然后，登录到目标服务器：" class="headerlink" title="2.3. 然后，登录到目标服务器："></a>2.3. 然后，登录到目标服务器：</h4>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh <span class="hljs-variable">$&#123;TARGET_USER&#125;</span>@<span class="hljs-variable">$&#123;TARGET_HOST&#125;</span><br></code></pre></td></tr></table></figure><h4 id="2-4-同样地，将公钥添加到目标服务器的-authorized-keys-文件："><a href="#2-4-同样地，将公钥添加到目标服务器的-authorized-keys-文件：" class="headerlink" title="2.4. 同样地，将公钥添加到目标服务器的 authorized_keys 文件："></a>2.4. 同样地，将公钥添加到目标服务器的 <code>authorized_keys</code> 文件：</h4>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;新生成的公钥内容&quot;</span> &gt;&gt; ~/.ssh/authorized_keys<br><span class="hljs-built_in">chmod</span> 600 ~/.ssh/authorized_keys<br></code></pre></td></tr></table></figure><ul><li><code>BASTION_HOST</code>：跳板机的 IP 地址或主机名</li><li><code>BASTION_USER</code>：跳板机的用户名</li><li><code>TARGET_HOST</code>：目标服务器的 IP 地址或主机名</li><li><code>TARGET_USER</code>：目标服务器的用户名</li><li><code>SSH_PRIVATE_KEY</code>：用于 SSH 连接的私钥</li></ul><p>   这样，您就可以通过跳板机无密码地访问目标服务器了。<br>   注意：使用哪个登录用户创建的秘钥对，就使用哪个登录用户登录跳板机和目标服务器。</p><h3 id="3-将本机生成的私钥id-ed25519拷贝到跳板机-ssh-目录下，因为目标服务器的公钥也是使用的本机私钥生成的，所以需要将本机私钥拷贝到跳板机。"><a href="#3-将本机生成的私钥id-ed25519拷贝到跳板机-ssh-目录下，因为目标服务器的公钥也是使用的本机私钥生成的，所以需要将本机私钥拷贝到跳板机。" class="headerlink" title="3.将本机生成的私钥id_ed25519拷贝到跳板机~&#x2F;.ssh&#x2F;目录下，因为目标服务器的公钥也是使用的本机私钥生成的，所以需要将本机私钥拷贝到跳板机。"></a>3.将本机生成的私钥id_ed25519拷贝到跳板机~&#x2F;.ssh&#x2F;目录下，因为目标服务器的公钥也是使用的本机私钥生成的，所以需要将本机私钥拷贝到跳板机。</h3>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">scp ~/.ssh/id_ed25519 <span class="hljs-variable">$&#123;BASTION_USER&#125;</span>@<span class="hljs-variable">$&#123;BASTION_HOST&#125;</span>:~/.ssh/<br></code></pre></td></tr></table></figure><h3 id="4-测试跳板机和目标服务器是否可以无密码通信"><a href="#4-测试跳板机和目标服务器是否可以无密码通信" class="headerlink" title="4.测试跳板机和目标服务器是否可以无密码通信"></a>4.测试跳板机和目标服务器是否可以无密码通信</h3>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh -i ~/.ssh/id_ed25519 <span class="hljs-variable">$&#123;TARGET_USER&#125;</span>@<span class="hljs-variable">$&#123;TARGET_HOST&#125;</span><br></code></pre></td></tr></table></figure><p>   如果可以无密码通信，则说明跳板机和目标服务器可以无密码通信。<br>   注意：使用哪个登录用户创建的秘钥对，就使用哪个登录用户登录跳板机和目标服务器。</p><h3 id="5-将私钥id-ed25519的内容添加到GitHub仓库的Secrets-and-variables中，命名为JUMP-SERVER-SSH-KEY。"><a href="#5-将私钥id-ed25519的内容添加到GitHub仓库的Secrets-and-variables中，命名为JUMP-SERVER-SSH-KEY。" class="headerlink" title="5. 将私钥id_ed25519的内容添加到GitHub仓库的Secrets and variables中，命名为JUMP_SERVER_SSH_KEY。"></a>5. 将私钥id_ed25519的内容添加到GitHub仓库的Secrets and variables中，命名为JUMP_SERVER_SSH_KEY。</h3><h3 id="6-创建-GitHub-Actions-工作流"><a href="#6-创建-GitHub-Actions-工作流" class="headerlink" title="6. 创建 GitHub Actions 工作流"></a>6. <strong>创建 GitHub Actions 工作流</strong></h3><p>   在 <code>.github/workflows</code> 目录下创建一个新的工作流文件，例如 <code>deploy.yml</code>，并添加以下内容：</p>   <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><br><br><span class="hljs-attr">name:</span> <span class="hljs-string">Publish</span> <span class="hljs-string">To</span> <span class="hljs-string">Production</span><br><br><span class="hljs-attr">on:</span><br>  <span class="hljs-attr">push:</span><br>    <span class="hljs-attr">branches:</span> [<span class="hljs-string">main</span>]<br><br><span class="hljs-attr">env:</span><br>  <span class="hljs-attr">NODE_VERSION:</span> <span class="hljs-string">&quot;16.14.2&quot;</span><br>  <span class="hljs-attr">JUMP_SERVER:</span> <span class="hljs-string">&quot;xxx.xxx.xxx.xxx&quot;</span>  <span class="hljs-comment"># 替换为跳板机的真实IP</span><br>  <span class="hljs-attr">TARGET_SERVER:</span> <span class="hljs-string">&quot;yyy.yyy.yyy.yyy&quot;</span>  <span class="hljs-comment"># 替换为目标服务器的真实IP</span><br>  <span class="hljs-attr">SERVER_USER:</span> <span class="hljs-string">&quot;ubuntu&quot;</span><br>  <span class="hljs-attr">REMOTE_PATH:</span> <span class="hljs-string">&quot;/var/www/html/myapp/dist&quot;</span><br>  <span class="hljs-attr">ALERT_URL:</span> <span class="hljs-string">&quot;https://example.com/notify&quot;</span><br>  <span class="hljs-attr">PROJECT_NAME:</span> <span class="hljs-string">&quot;测试环境&quot;</span><br><br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">deploy:</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v4</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Use</span> <span class="hljs-string">Node.js</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">env.NODE_VERSION</span> <span class="hljs-string">&#125;&#125;</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/setup-node@v4</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">node-version:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">env.NODE_VERSION</span> <span class="hljs-string">&#125;&#125;</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Install</span> <span class="hljs-string">dependencies</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">yarn</span> <span class="hljs-string">install</span> <span class="hljs-string">--frozen-lockfile</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Build</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">yarn</span> <span class="hljs-string">build</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Install</span> <span class="hljs-string">SSH</span> <span class="hljs-string">Keys</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">shimataro/ssh-key-action@v2</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">key:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.JUMP_SERVER_SSH_KEY</span> <span class="hljs-string">&#125;&#125;</span><br>          <span class="hljs-attr">name:</span> <span class="hljs-string">jump_server</span><br>          <span class="hljs-attr">known_hosts:</span> <span class="hljs-string">unnecessary</span><br>          <span class="hljs-attr">if_key_exists:</span> <span class="hljs-string">replace</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Setup</span> <span class="hljs-string">SSH</span> <span class="hljs-string">Config</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">          mkdir -p ~/.ssh</span><br><span class="hljs-string">          chmod 700 ~/.ssh</span><br><span class="hljs-string">          echo &quot;Host jumpserver</span><br><span class="hljs-string">            HostName $&#123;&#123; env.JUMP_SERVER &#125;&#125;</span><br><span class="hljs-string">            User $&#123;&#123; env.SERVER_USER &#125;&#125;</span><br><span class="hljs-string">            IdentityFile ~/.ssh/jump_server</span><br><span class="hljs-string">            StrictHostKeyChecking=no</span><br><span class="hljs-string"></span><br>          <span class="hljs-string">Host</span> <span class="hljs-string">targetserver</span><br>            <span class="hljs-string">HostName</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">env.TARGET_SERVER</span> <span class="hljs-string">&#125;&#125;</span><br>            <span class="hljs-string">User</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">env.SERVER_USER</span> <span class="hljs-string">&#125;&#125;</span><br>            <span class="hljs-string">ProxyCommand</span> <span class="hljs-string">ssh</span> <span class="hljs-string">-W</span> <span class="hljs-string">%h:%p</span> <span class="hljs-string">jumpserver</span><br>            <span class="hljs-string">StrictHostKeyChecking=no</span><br>            <span class="hljs-string">IdentityFile</span> <span class="hljs-string">~/.ssh/jump_server&quot;</span> <span class="hljs-string">&gt;</span> <span class="hljs-string">~/.ssh/config</span><br>          <span class="hljs-string">chmod</span> <span class="hljs-number">600</span> <span class="hljs-string">~/.ssh/config</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Debug</span> <span class="hljs-string">SSH</span> <span class="hljs-string">Connection</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">          ssh -v targetserver &quot;echo &#x27;Connection test&#x27;&quot;</span><br><span class="hljs-string"></span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Check</span> <span class="hljs-string">SSH</span> <span class="hljs-string">Setup</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">          ls -la ~/.ssh/</span><br><span class="hljs-string">          ssh-keygen -l -f ~/.ssh/jump_server || echo &quot;Key not found&quot;</span><br><span class="hljs-string"></span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Deploy</span> <span class="hljs-string">with</span> <span class="hljs-string">rsync</span><br>        <span class="hljs-attr">continue-on-error:</span> <span class="hljs-literal">true</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">          ssh targetserver &quot;sudo find $&#123;&#123; env.REMOTE_DIR &#125;&#125; -not -name &#x27;.user.ini&#x27; -exec chown $&#123;&#123; env.SERVER_USER &#125;&#125;:$&#123;&#123; env.SERVER_USER &#125;&#125; &#123;&#125; +&quot;</span><br><span class="hljs-string">          rsync -avz --delete \</span><br><span class="hljs-string">            --exclude=&#x27;.user.ini&#x27; \</span><br><span class="hljs-string">            -e &quot;ssh -o StrictHostKeyChecking=accept-new -i ~/.ssh/jump_server&quot; \</span><br><span class="hljs-string">            ./dist/ \</span><br><span class="hljs-string">            targetserver:$&#123;&#123; env.REMOTE_DIR &#125;&#125;</span><br><span class="hljs-string"></span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Notify</span> <span class="hljs-string">Deployment</span> <span class="hljs-string">End</span><br>        <span class="hljs-attr">if:</span> <span class="hljs-string">always()</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">          if [ $&#123;&#123; job.status &#125;&#125; == &#x27;success&#x27; ]; then</span><br><span class="hljs-string">            STATUS=&quot;success&quot;</span><br><span class="hljs-string">          else</span><br><span class="hljs-string">            STATUS=&quot;failed&quot;</span><br><span class="hljs-string">          fi</span><br><span class="hljs-string"></span><br>          <span class="hljs-string">curl</span> <span class="hljs-string">-X</span> <span class="hljs-string">POST</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">env.NOTIFICATION_URL</span> <span class="hljs-string">&#125;&#125;</span> <span class="hljs-string">\</span><br>          <span class="hljs-string">-H</span> <span class="hljs-string">&quot;Content-Type: application/json&quot;</span> <span class="hljs-string">\</span><br>          <span class="hljs-string">-d</span> <span class="hljs-string">&quot;&#123;\&quot;status\&quot;:\&quot;$STATUS\&quot;, \&quot;project\&quot;:\&quot;$<span class="hljs-template-variable">&#123;&#123; env.PROJECT_NAME &#125;&#125;</span>\&quot;&#125;&quot;</span><br><br></code></pre></td></tr></table></figure><p> 补充说明：</p><ul><li>本机生成的私钥id_ed25519拷贝到跳板机~&#x2F;.ssh&#x2F;目录下，因为目标服务器的公钥也是使用的本机私钥生成的，所以需要将本机私钥拷贝到跳板机。</li><li>本机生成的公钥id_ed25519.pub拷贝到目标服务器的~&#x2F;.ssh&#x2F;authorized_keys文件中。</li><li>本机生成的公钥id_ed25519.pub拷贝到跳板机的~&#x2F;.ssh&#x2F;authorized_keys文件中。</li><li>本机生成的私钥id_ed25519拷贝到GitHub仓库的Secrets and variables中，命名为JUMP_SERVER_SSH_KEY。</li></ul><h3 id="7-目标服务器的访问权限问题"><a href="#7-目标服务器的访问权限问题" class="headerlink" title="7.目标服务器的访问权限问题"></a>7.目标服务器的访问权限问题</h3><pre><code class="hljs"> 需要检查目标服务器的用户是否有访问目标目录的权限，否则无法进行rsync操作。如果没有权限，则需要给目标服务器的用户设置目标目录的读写权限。</code></pre>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
      <category>GitHub Actions</category>
      
      <category>跳板机</category>
      
    </categories>
    
    
    <tags>
      
      <tag>GitHub Actions</tag>
      
      <tag>跳板机</tag>
      
      <tag>自动部署</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ImageMagick批量更改图片大小</title>
    <link href="/2024/11/25/ImageMagick%E6%89%B9%E9%87%8F%E6%9B%B4%E6%94%B9%E5%9B%BE%E7%89%87%E5%A4%A7%E5%B0%8F/"/>
    <url>/2024/11/25/ImageMagick%E6%89%B9%E9%87%8F%E6%9B%B4%E6%94%B9%E5%9B%BE%E7%89%87%E5%A4%A7%E5%B0%8F/</url>
    
    <content type="html"><![CDATA[<h2 id="在-macOS-上使用-ImageMagick-的步骤"><a href="#在-macOS-上使用-ImageMagick-的步骤" class="headerlink" title="在 macOS 上使用 ImageMagick 的步骤:"></a>在 macOS 上使用 ImageMagick 的步骤:</h2><ol><li><p>安装 Homebrew</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">/bin/bash -c <span class="hljs-string">&quot;<span class="hljs-subst">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)</span>&quot;</span><br></code></pre></td></tr></table></figure></li><li><p>安装 ImageMagick</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">brew install imagemagick<br></code></pre></td></tr></table></figure></li><li><p>使用 ImageMagick 批量更改图片大小</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 进入图片所在目录</span><br><span class="hljs-built_in">cd</span> /path/to/your/images<br><br><span class="hljs-comment"># 批量处理当前目录下所有图片（保持原文件名）</span><br>magick mogrify -extent 1920x1080 -gravity center -background white *.jpg<br><br><span class="hljs-comment"># 或者处理单个文件并输出到新文件</span><br>magick input.jpg -extent 1920x1080 -gravity center -background white output.jpg<br></code></pre></td></tr></table></figure></li><li><p><strong>常用参数说明</strong>:</p><ul><li><code>extent 1920x1080</code>: 设置画布大小</li><li><code>gravity center</code>: 图片在画布中居中</li><li><code>background white</code>: 背景色（可以用 none 表示透明）</li><li><code>*.jpg</code>: 处理所有jpg文件（也可以用 *.png 等）</li></ul></li></ol><h2 id="在-Windows-上使用-ImageMagick-的步骤"><a href="#在-Windows-上使用-ImageMagick-的步骤" class="headerlink" title="在 Windows 上使用 ImageMagick 的步骤:"></a>在 Windows 上使用 ImageMagick 的步骤:</h2><ol><li><p>下载并安装 ImageMagick</p><ul><li>下载地址：<a href="https://imagemagick.org/script/download.php">https://imagemagick.org/script/download.php</a></li></ul></li><li><p>打开 PowerShell 或命令提示符</p><ul><li>按下 <code>Win + R</code>，输入 <code>cmd</code> 或 <code>powershell</code>，然后按回车。</li></ul></li><li><p>使用 ImageMagick 批量更改图片大小</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 进入图片所在目录</span><br><span class="hljs-built_in">cd</span> <span class="hljs-string">&quot;C:\path\to\your\images&quot;</span><br><br><span class="hljs-comment"># 批量处理当前目录下所有图片（保持原文件名）</span><br>magick mogrify -extent 1920x1080 -gravity center -background white *.jpg<br><br><span class="hljs-comment"># 或者处理单个文件并输出到新文件</span><br>magick input.jpg -extent 1920x1080 -gravity center -background white output.jpg<br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <categories>
      
      <category>工具分享</category>
      
      <category>ImageMagick</category>
      
      <category>windows</category>
      
      <category>macOS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>windows</tag>
      
      <tag>macOS</tag>
      
      <tag>ImageMagick</tag>
      
      <tag>批量更改图片大小</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用Xray自建科学上网服务器</title>
    <link href="/2024/11/10/%E4%BD%BF%E7%94%A8Xray%E8%87%AA%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <url>/2024/11/10/%E4%BD%BF%E7%94%A8Xray%E8%87%AA%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="搭建Xray服务器"><a href="#搭建Xray服务器" class="headerlink" title="搭建Xray服务器"></a>搭建Xray服务器</h2><h3 id="1-下载并安装新版Xray"><a href="#1-下载并安装新版Xray" class="headerlink" title="1.下载并安装新版Xray"></a>1.下载并安装新版Xray</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash &lt;(curl -Ls https://raw.githubusercontent.com/FranzKafkaYu/x-ui/master/install.sh)<br></code></pre></td></tr></table></figure><p>安装过程会提示输入端口、用户名、密码等信息，按照提示输入即可。</p><h3 id="2-安装完成后，使用浏览器访问http-服务器IP-端口，输入用户名和密码登录。"><a href="#2-安装完成后，使用浏览器访问http-服务器IP-端口，输入用户名和密码登录。" class="headerlink" title="2.安装完成后，使用浏览器访问http:&#x2F;&#x2F;服务器IP:端口，输入用户名和密码登录。"></a>2.安装完成后，使用浏览器访问http:&#x2F;&#x2F;服务器IP:端口，输入用户名和密码登录。</h3><h3 id="3-绑定域名"><a href="#3-绑定域名" class="headerlink" title="3.绑定域名"></a>3.绑定域名</h3><h4 id="3-1-首先在-Cloudflare-添加-DNS-记录："><a href="#3-1-首先在-Cloudflare-添加-DNS-记录：" class="headerlink" title="3.1 首先在 Cloudflare 添加 DNS 记录："></a>3.1 首先在 Cloudflare 添加 DNS 记录：</h4><p>类型: A<br>名称: xui<br>内容: 23.257.245.234<br>代理状态: 关闭（灰色云朵）</p><h4 id="3-2-在宝塔面板中添加站点："><a href="#3-2-在宝塔面板中添加站点：" class="headerlink" title="3.2 在宝塔面板中添加站点："></a>3.2 在宝塔面板中添加站点：</h4><p>网站名称: xui.abc.cc<br>端口: 30597<br>PHP版本: 纯静态<br>SSL: 申请Let’s Encrypt证书</p><h4 id="3-3-修改站点配置文件，添加反向代理："><a href="#3-3-修改站点配置文件，添加反向代理：" class="headerlink" title="3.3 修改站点配置文件，添加反向代理："></a>3.3 修改站点配置文件，添加反向代理：</h4><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">server</span> &#123;<br>    <span class="hljs-attribute">listen</span> <span class="hljs-number">80</span>;<br>    <span class="hljs-attribute">listen</span> <span class="hljs-number">443</span> ssl;<br>    <span class="hljs-attribute">server_name</span> xui.abc.cc;<br>    <br>    <span class="hljs-comment"># SSL配置</span><br>    <span class="hljs-attribute">ssl_certificate</span> /www/server/panel/vhost/cert/xui.abc.cc/fullchain.pem;<br>    <span class="hljs-attribute">ssl_certificate_key</span> /www/server/panel/vhost/cert/xui.abc.cc/privkey.pem;<br>    <br>    <span class="hljs-section">location</span> / &#123;<br>        <span class="hljs-attribute">proxy_pass</span> http://127.0.0.1:30597;<br>        <span class="hljs-attribute">proxy_set_header</span> Host <span class="hljs-variable">$host</span>;<br>        <span class="hljs-attribute">proxy_set_header</span> X-Real-IP <span class="hljs-variable">$remote_addr</span>;<br>        <span class="hljs-attribute">proxy_set_header</span> X-Forwarded-For <span class="hljs-variable">$proxy_add_x_forwarded_for</span>;<br>        <span class="hljs-attribute">proxy_set_header</span> X-Forwarded-Proto <span class="hljs-variable">$scheme</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>完成后，你就可以通过 <a href="https://xui.abc.cc/">https://xui.abc.cc</a> 访问 X-UI 面板了。</p><div class="note note-warning @title">            <p>注意事项：<br>需要去掉其他location配置,但是需要保留https证书配置，否则导致无法访问。<br>确保 30597 端口在防火墙中已开放<br>如果使用 Cloudflare，建议保持代理状态为关闭（灰色云朵），避免 WebSocket 连接问题<br>配置完成后，建议在 X-UI 面板的设置中更改默认端口，增加安全性</p>          </div><h3 id="4-为什么要关闭代理状态？"><a href="#4-为什么要关闭代理状态？" class="headerlink" title="4.为什么要关闭代理状态？"></a>4.为什么要关闭代理状态？</h3><p>在 Cloudflare 中关闭代理状态（灰色云朵）主要有以下原因：</p><h4 id="4-1-WebSocket-兼容性："><a href="#4-1-WebSocket-兼容性：" class="headerlink" title="4.1 WebSocket 兼容性："></a>4.1 WebSocket 兼容性：</h4><p>X-UI 面板使用 WebSocket 连接<br>Cloudflare 免费版对 WebSocket 支持有限，可能导致连接不稳定或断开</p><h4 id="4-2-延迟问题："><a href="#4-2-延迟问题：" class="headerlink" title="4.2 延迟问题："></a>4.2 延迟问题：</h4><p>开启 Cloudflare 代理会让流量经过 Cloudflare 节点中转<br>增加额外延迟，影响面板响应速度</p><h4 id="4-3-安全考虑："><a href="#4-3-安全考虑：" class="headerlink" title="4.3 安全考虑："></a>4.3 安全考虑：</h4><p>X-UI 面板本身已有登录验证<br>通过修改默认端口和强密码已能提供足够安全性<br>无需 Cloudflare 额外的 DDoS 防护<br>如果你特别需要 Cloudflare 的防护，可以：<br>升级到 Cloudflare Pro 版本获得更好的 WebSocket 支持<br>只对面板登录页面启用代理，其他路径使用 Page Rules 设置为 “关闭代理”<br>但一般情况下，建议保持关闭状态以获得最佳性能和稳定性。</p><h3 id="5-怎么添加安全节点"><a href="#5-怎么添加安全节点" class="headerlink" title="5.怎么添加安全节点"></a>5.怎么添加安全节点</h3><p>推荐搭建两种节点配置，分别适合不同场景：</p><h4 id="5-1-Reality-VLESS-最佳性能和安全性"><a href="#5-1-Reality-VLESS-最佳性能和安全性" class="headerlink" title="5.1 Reality + VLESS (最佳性能和安全性):"></a>5.1 Reality + VLESS (最佳性能和安全性):</h4><p>入站设置：</p><ul><li>协议：VLESS</li><li>传输：tcp</li><li>端口：随机（如 44332）</li><li>加密：reality</li><li>流控：visionXTLS</li><li>公钥和私钥：自动生成</li><li>SNI：填知名网站（如 <a href="http://www.microsoft.com)/">www.microsoft.com）</a></li><li>指纹：chrome</li></ul><img src="/2024/11/10/%E4%BD%BF%E7%94%A8Xray%E8%87%AA%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8/1.png" class="" width="488"><p>&nbsp;</p><img src="/2024/11/10/%E4%BD%BF%E7%94%A8Xray%E8%87%AA%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8/2.png" class="" width="488"><p>&nbsp;</p><h4 id="5-2-VLESS-WebSocket-TLS-备用方案，稳定性好"><a href="#5-2-VLESS-WebSocket-TLS-备用方案，稳定性好" class="headerlink" title="5.2 VLESS + WebSocket + TLS (备用方案，稳定性好):"></a>5.2 VLESS + WebSocket + TLS (备用方案，稳定性好):</h4><p>入站设置：</p><ul><li>协议：VLESS</li><li>传输：ws</li><li>端口：随机（如 44333）</li><li>加密：none</li><li>流控：xtls-rprx-vision</li><li>路径：&#x2F;ray</li><li>跳过证书验证：false</li></ul><img src="/2024/11/10/%E4%BD%BF%E7%94%A8Xray%E8%87%AA%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8/3.png" class="" width="488"><p>&nbsp;</p><img src="/2024/11/10/%E4%BD%BF%E7%94%A8Xray%E8%87%AA%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8/4.png" class="" width="488"><p>&nbsp;</p><p>安全加固建议：</p><ul><li>修改面板默认端口</li><li>设置强密码</li><li>每个入站限制连接数（如 3-5 个）</li><li>定期更换端口和路径</li><li>Reality 的 SNI 建议用不同的知名网站</li><li>禁用面板的默认证书功能，用 nginx 的证书<br>流量优化：</li><li>使用 nginx 的流量优化插件<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">client_max_body_size</span> <span class="hljs-number">0</span>;<br><span class="hljs-attribute">client_body_timeout</span> <span class="hljs-number">12h</span>;<br><span class="hljs-attribute">proxy_read_timeout</span> <span class="hljs-number">12h</span>;<br><span class="hljs-attribute">proxy_send_timeout</span> <span class="hljs-number">12h</span>;<br></code></pre></td></tr></table></figure>建议用 Reality 作为主力，WebSocket 作为备用，这样既保证了最佳性能，又有备份方案。</li></ul><h3 id="6-这种情况不需要配置域名？"><a href="#6-这种情况不需要配置域名？" class="headerlink" title="6.这种情况不需要配置域名？"></a>6.这种情况不需要配置域名？</h3><p>使用 Reality 协议最大的优势就是不需要域名和证书！<br>Reality 工作原理：</p><ul><li>直接用 IP + 端口连接</li><li>使用伪装域名(SNI)冒充是在访问正常网站</li><li>用自己的加密体系，不依赖 TLS 证书<br>所以使用 Reality 的步骤很简单：</li></ul><h4 id="6-1-创建入站："><a href="#6-1-创建入站：" class="headerlink" title="6.1 创建入站："></a>6.1 创建入站：</h4><ul><li>协议：VLESS</li><li>传输：tcp</li><li>端口：随机端口（比如 44332）</li><li>加密：reality</li><li>流控：visionXTLS</li><li>SNI：microsoft.com（或其他知名网站）</li><li>指纹：chrome</li></ul><h4 id="6-2-开放对应端口的防火墙"><a href="#6-2-开放对应端口的防火墙" class="headerlink" title="6.2 开放对应端口的防火墙"></a>6.2 开放对应端口的防火墙</h4><p>就这样，不需要：</p><ul><li>买域名</li><li>配置 SSL 证书</li><li>配置 Nginx</li><li>配置 CDN<br>建议配置多个 Reality 节点，用不同的：</li><li>端口</li><li>SNI（可以用 amazon.com, cloudflare.com 等）</li><li>指纹（可以用 chrome, firefox, safari 等）<br>这样既安全又高效，而且部署超级简单！</li></ul><h3 id="7-目标网站，可选域名这些要怎么填写"><a href="#7-目标网站，可选域名这些要怎么填写" class="headerlink" title="7.目标网站，可选域名这些要怎么填写?"></a>7.目标网站，可选域名这些要怎么填写?</h3><p>这些字段的填写建议：</p><h4 id="7-1-目标网站（dest）："><a href="#7-1-目标网站（dest）：" class="headerlink" title="7.1 目标网站（dest）："></a>7.1 目标网站（dest）：</h4><ul><li>格式：域名:端口</li><li>建议：<a href="http://www.microsoft.com:443/">www.microsoft.com:443</a></li><li>其他选择：<ul><li><a href="http://www.amazon.com:443/">www.amazon.com:443</a></li><li><a href="http://www.cloudflare.com:443/">www.cloudflare.com:443</a></li><li><a href="http://www.apple.com:443/">www.apple.com:443</a></li></ul></li></ul><h4 id="7-2-可选域名（serverNames）："><a href="#7-2-可选域名（serverNames）：" class="headerlink" title="7.2 可选域名（serverNames）："></a>7.2 可选域名（serverNames）：</h4><ul><li>必须包含 SNI 中填写的域名</li><li>可以多填几个，用逗号分隔</li><li>例如：<a href="http://www.microsoft.com,www.bing.com,update.microsoft.com/">www.microsoft.com,www.bing.com,update.microsoft.com</a></li></ul><p>最佳实践：</p><ul><li>dest 和 SNI 要匹配</li><li>serverNames 多填几个相关域名增加真实性</li><li>不同节点用不同的域名组合</li><li>shortIds 建议用自动生成的<br>注意：Reality 会自动模拟目标网站的 TLS 指纹，所以这些配置要尽量真实，避免用不存在的域名。</li></ul><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 卸载版本</span><br>x-ui uninstall<br><br><span class="hljs-comment"># 重启x-ui</span><br>x-ui restart <br><span class="hljs-comment"># 检查端口是否在监听</span><br>netstat -tlpn | grep 30597 <br><br><span class="hljs-comment"># x-ui日志</span><br>journalctl -u x-ui -n 100<br><br><span class="hljs-comment"># 检查x-ui是否运行</span><br>systemctl status x-ui<br><br><span class="hljs-comment"># 停止服务</span><br>systemctl stop x-ui<br><br><span class="hljs-comment"># 启动服务</span><br>systemctl start x-ui <br><br><span class="hljs-comment"># 重启服务</span><br>systemctl restart x-ui<br><br><span class="hljs-comment"># 停止服务</span><br>x-ui stop<br><br><span class="hljs-comment"># 运行设置向导</span><br>x-ui<br><br><span class="hljs-comment"># 查看已开放的端口</span><br>ufw status numbered<br><br><span class="hljs-comment"># 先查看规则编号</span><br>ufw status numbered<br><br><span class="hljs-comment"># 按编号删除</span><br>ufw delete [编号]<br><br><span class="hljs-comment"># 用冒号表示范围</span><br>ufw allow 10000:20000<br><br><span class="hljs-comment"># 只开放TCP</span><br>ufw allow 10000:20000/tcp<br><br><span class="hljs-comment"># 只开放UDP</span><br>ufw allow 10000:20000/udp<br><br></code></pre></td></tr></table></figure><h3 id="vmess和vless节点怎么加入clash？"><a href="#vmess和vless节点怎么加入clash？" class="headerlink" title="vmess和vless节点怎么加入clash？"></a>vmess和vless节点怎么加入clash？</h3><p>VLESS 节点（注意：普通 Clash 不支持 VLESS）：<br>需要用 Clash.Meta<br>或者用 sing-box<br>或者转换成 VMess<br>快速转换方法：<br>使用在线转换工具：<a href="https://bianyuan.xyz/">bianyuan</a><br>使用 subconverter<br>直接复制 x-ui 面板生成的 Clash 配置<br>建议：<br>VMess 节点直接用 Clash<br>VLESS&#x2F;Reality 节点用 sing-box<br>或者升级到 Clash.Meta 全部支持</p><h2 id="建议与推荐"><a href="#建议与推荐" class="headerlink" title="建议与推荐"></a>建议与推荐</h2><p>如果你打算搭建科学上网服务器，建议选择腾讯云海外服务器，价格仅需200一年。既可以做科学上网服务器使用，也可以直接用作远程办公电脑，轻松访问各种AI工具，效率大幅提升！<a href="https://curl.qcloud.com/zK5ZIHzM">腾讯云海外服务器</a></p>]]></content>
    
    
    <categories>
      
      <category>技术教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>科学上网</tag>
      
      <tag>Xray</tag>
      
      <tag>服务器</tag>
      
      <tag>翻墙</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>搭建RustDesk中继服务器</title>
    <link href="/2024/11/10/%E6%90%AD%E5%BB%BARustDesk%E4%B8%AD%E7%BB%A7%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <url>/2024/11/10/%E6%90%AD%E5%BB%BARustDesk%E4%B8%AD%E7%BB%A7%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>RustDesk是一款开源的远程桌面软件，支持Windows、macOS、Linux等操作系统。<br>下载地址：<a href="https://github.com/rustdesk/rustdesk">RustDesk</a></p><p>为什么要使用中继服务器？<br>RustDesk的官方服务器在国外，在国内访问速度慢，而且不稳定。所以需要搭建一个中继服务器，来提高访问速度和稳定性。</p><h2 id="如何搭建RustDesk中继服务器"><a href="#如何搭建RustDesk中继服务器" class="headerlink" title="如何搭建RustDesk中继服务器"></a>如何搭建RustDesk中继服务器</h2><h3 id="1-首先安装依赖："><a href="#1-首先安装依赖：" class="headerlink" title="1.首先安装依赖："></a>1.首先安装依赖：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt update<br>apt install git curl build-essential -y<br></code></pre></td></tr></table></figure><p>###2.下载并安装 Rust：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl --proto <span class="hljs-string">&#x27;=https&#x27;</span> --tlsv1.2 -sSf https://sh.rustup.rs | sh<br><span class="hljs-built_in">source</span> <span class="hljs-variable">$HOME</span>/.cargo/env<br></code></pre></td></tr></table></figure><h3 id="3-下载-Rustdesk-服务器代码："><a href="#3-下载-Rustdesk-服务器代码：" class="headerlink" title="3.下载 Rustdesk 服务器代码："></a>3.下载 Rustdesk 服务器代码：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/rustdesk/rustdesk-server<br><span class="hljs-built_in">cd</span> rustdesk-server<br></code></pre></td></tr></table></figure><h3 id="4-编译服务器："><a href="#4-编译服务器：" class="headerlink" title="4.编译服务器："></a>4.编译服务器：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 创建目录</span><br><span class="hljs-built_in">mkdir</span> -p /etc/rustdesk-server/<br><br><span class="hljs-comment"># 移动编译好的文件</span><br><span class="hljs-built_in">cp</span> /root/rustdesk-server/target/release/hbbs /etc/rustdesk-server/<br><span class="hljs-built_in">cp</span> /root/rustdesk-server/target/release/hbbr /etc/rustdesk-server/<br></code></pre></td></tr></table></figure><h3 id="5-创建配置目录："><a href="#5-创建配置目录：" class="headerlink" title="5.创建配置目录："></a>5.创建配置目录：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p /etc/rustdesk-server<br></code></pre></td></tr></table></figure><h3 id="6-在-etc-systemd-system目录下创建-systemd-服务文件："><a href="#6-在-etc-systemd-system目录下创建-systemd-服务文件：" class="headerlink" title="6.在&#x2F;etc&#x2F;systemd&#x2F;system目录下创建 systemd 服务文件："></a>6.在&#x2F;etc&#x2F;systemd&#x2F;system目录下创建 systemd 服务文件：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">touch</span> rustdesk-hbbs.service<br><span class="hljs-built_in">touch</span> rustdesk-hbbr.service<br><span class="hljs-comment"># 查看文件权限</span><br><span class="hljs-built_in">ls</span> -l /etc/systemd/system/rustdesk-hbbr.service<br><span class="hljs-comment"># 修改文件权限</span><br><span class="hljs-built_in">chmod</span> 644 /etc/systemd/system/rustdesk-hbbr.service<br><span class="hljs-built_in">chmod</span> 644 /etc/systemd/system/rustdesk-hbbs.service<br><span class="hljs-comment"># 重新加载 systemd 配置</span><br>systemctl daemon-reload<br></code></pre></td></tr></table></figure><h3 id="7-编辑-rustdesk-hbbs-service-文件："><a href="#7-编辑-rustdesk-hbbs-service-文件：" class="headerlink" title="7.编辑 rustdesk-hbbs.service 文件："></a>7.编辑 rustdesk-hbbs.service 文件：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash">[Unit]<br>Description=Rustdesk Signal Server<br>After=network.target<br><br>[Service]<br>Type=simple<br>LimitNOFILE=1000000<br>ExecStart=/etc/rustdesk-server/hbbs -k 您的密钥 --relay-servers 您的服务器IP<br>WorkingDirectory=/etc/rustdesk-server<br>User=root<br>Group=root<br>Restart=always<br>RestartSec=10<br><br>[Install]<br>WantedBy=multi-user.target<br></code></pre></td></tr></table></figure><h3 id="8-编辑-rustdesk-hbbr-service-文件："><a href="#8-编辑-rustdesk-hbbr-service-文件：" class="headerlink" title="8.编辑 rustdesk-hbbr.service 文件："></a>8.编辑 rustdesk-hbbr.service 文件：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash">[Unit]<br>Description=Rustdesk Relay Server<br>After=network.target<br><br>[Service]<br>Type=simple<br>LimitNOFILE=1000000<br>ExecStart=/etc/rustdesk-server/hbbr -k 您的密钥(与hbbs的密钥一致)<br>WorkingDirectory=/etc/rustdesk-server<br>User=root<br>Group=root<br>Restart=always<br>RestartSec=10<br><br>[Install]<br>WantedBy=multi-user.target<br></code></pre></td></tr></table></figure><h3 id="9-启动服务："><a href="#9-启动服务：" class="headerlink" title="9.启动服务："></a>9.启动服务：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl <span class="hljs-built_in">enable</span> rustdesk-hbbs.service<br>systemctl <span class="hljs-built_in">enable</span> rustdesk-hbbr.service<br>systemctl start rustdesk-hbbs.service<br>systemctl start rustdesk-hbbr.service<br><br></code></pre></td></tr></table></figure><h3 id="10-检查服务状态："><a href="#10-检查服务状态：" class="headerlink" title="10.检查服务状态："></a>10.检查服务状态：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl status rustdesk-hbbs.service<br>systemctl status rustdesk-hbbr.service<br></code></pre></td></tr></table></figure><h3 id="11-重启服务："><a href="#11-重启服务：" class="headerlink" title="11.重启服务："></a>11.重启服务：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl daemon-reload<br>systemctl restart rustdesk-hbbs<br>systemctl restart rustdesk-hbbr<br></code></pre></td></tr></table></figure><h3 id="12-开放防火墙端口："><a href="#12-开放防火墙端口：" class="headerlink" title="12.开放防火墙端口："></a>12.开放防火墙端口：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 信令服务器端口</span><br>ufw allow 21116/tcp<br>ufw allow 21116/udp<br><span class="hljs-comment"># 中继服务器端口</span><br>ufw allow 21117/tcp<br>ufw allow 21117/udp<br><span class="hljs-comment"># 文件传输端口（可选）</span><br>ufw allow 21118/tcp<br>ufw allow 21119/tcp<br></code></pre></td></tr></table></figure><h3 id="13-在-Rustdesk-客户端使用："><a href="#13-在-Rustdesk-客户端使用：" class="headerlink" title="13.在 Rustdesk 客户端使用："></a>13.在 Rustdesk 客户端使用：</h3><p>ID 服务器：你的服务器IP或域名<br>中继服务器：你的服务器IP或域名<br>注意：<br>确保服务器有足够内存（建议至少1GB）<br>如果使用云服务器，记得在安全组中开放相应端口<br>建议配置 SSL 证书以提高安全性</p><img src="/2024/11/10/%E6%90%AD%E5%BB%BARustDesk%E4%B8%AD%E7%BB%A7%E6%9C%8D%E5%8A%A1%E5%99%A8/2.png" class="" width="488"><p>&nbsp;</p><h2 id="如何配置域名"><a href="#如何配置域名" class="headerlink" title="如何配置域名"></a>如何配置域名</h2><p>让我们给 Rustdesk 服务器配置域名访问。假设你想使用 rd.abc.cc 作为域名。<br>首先在 Cloudflare 添加 DNS 记录：<br>添加一个 A 记录，将 rd.abc.cc 指向你的服务器 IP 23.156.135.231<br>在宝塔面板中添加网站配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 反向代理配置</span><br>  location / &#123;<br>      proxy_pass http://127.0.0.1:21116;<br>      proxy_http_version 1.1;<br>      proxy_set_header Upgrade <span class="hljs-variable">$http_upgrade</span>;<br>      proxy_set_header Connection <span class="hljs-string">&quot;upgrade&quot;</span>;<br>      proxy_set_header Host <span class="hljs-variable">$host</span>;<br>      proxy_set_header X-Real-IP <span class="hljs-variable">$remote_addr</span>;<br>      proxy_set_header X-Forwarded-For <span class="hljs-variable">$proxy_add_x_forwarded_for</span>;<br>  &#125;<br></code></pre></td></tr></table></figure><div class="note note-warning @title">            <p>去掉其他location配置,但是保留证书配置</p>          </div><h2 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h2><p>1.需要关掉cloudflare的代理<br>Cloudflare 代理不支持 Rustdesk 使用的非标准端口（21116、21117、21119），所以必须关闭代理。<br>在 Cloudflare 中：<br>找到 rd.abc.cc 的 DNS 记录<br>点击 DNS 记录旁边的橙色云朵图标，让它变成灰色（这表示关闭 Cloudflare 代理）<br>IP 地址保持为你的服务器 IP：23.156.135.231 </p><img src="/2024/11/10/%E6%90%AD%E5%BB%BARustDesk%E4%B8%AD%E7%BB%A7%E6%9C%8D%E5%8A%A1%E5%99%A8/1.png" class="" width="488"><p>&nbsp;<br>关闭代理后：<br>DNS 解析会直接指向你的服务器<br>所有端口都可以直接访问<br>Rustdesk 就能正常工作了<br>注意：这种情况下你将失去 Cloudflare 的 DDoS 保护，但这是必要的，因为 Rustdesk 需要直接的 TCP 连接。</p><p>2.国内服务器无法通过域名访问<br>国内服务器无法通过域名访问，需要关掉cloudflare的代理，然后通过IP访问。</p><img src="/2024/11/10/%E6%90%AD%E5%BB%BARustDesk%E4%B8%AD%E7%BB%A7%E6%9C%8D%E5%8A%A1%E5%99%A8/3.png" class="" width="488"><p>&nbsp;</p><h2 id="建议与推荐"><a href="#建议与推荐" class="headerlink" title="建议与推荐"></a>建议与推荐</h2><p>如果你打算搭建RustDesk中继服务器，建议选择腾讯云海外服务器，价格仅需200一年。既可以做中继服务器使用，也可以直接用作远程办公电脑，轻松访问各种AI工具，效率大幅提升！<a href="https://curl.qcloud.com/zK5ZIHzM">腾讯云海外服务器</a></p>]]></content>
    
    
    <categories>
      
      <category>技术教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>RustDesk</tag>
      
      <tag>中继服务器</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Adobe Photoshop 2024破解版支持windows和mac</title>
    <link href="/2024/11/04/2024%E7%A0%B4%E8%A7%A3%E7%89%88%E6%94%AF%E6%8C%81windows%E5%92%8Cmac/"/>
    <url>/2024/11/04/2024%E7%A0%B4%E8%A7%A3%E7%89%88%E6%94%AF%E6%8C%81windows%E5%92%8Cmac/</url>
    
    <content type="html"><![CDATA[<h2 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h2><h3 id="Windows版本下载"><a href="#Windows版本下载" class="headerlink" title="Windows版本下载"></a>Windows版本下载</h3><ul><li>PS 2024 链接：<a href="https://pan.baidu.com/s/1GPpwlHUSksHYaEpQASFjDg">https://pan.baidu.com/s/1GPpwlHUSksHYaEpQASFjDg</a><br>提取码：1234</li><li>PS 2023 链接：<a href="https://pan.baidu.com/s/1jKYfiMii949LxAG_ChloVA">https://pan.baidu.com/s/1jKYfiMii949LxAG_ChloVA</a><br>提取码：95xp</li></ul><h3 id="macOS版本下载"><a href="#macOS版本下载" class="headerlink" title="macOS版本下载"></a>macOS版本下载</h3><ul><li>PS 2024 链接：<a href="https://pan.baidu.com/s/1GPpwlHUSksHYaEpQASFjDg">https://pan.baidu.com/s/1GPpwlHUSksHYaEpQASFjDg</a><br>提取码：1234</li><li>PS 2023 链接：<a href="https://pan.baidu.com/s/1jKYfiMii949LxAG_ChloVA">https://pan.baidu.com/s/1jKYfiMii949LxAG_ChloVA</a><br>提取码：95xp</li></ul><h3 id="备用下载地址"><a href="#备用下载地址" class="headerlink" title="备用下载地址"></a>备用下载地址</h3><ul><li>123网盘：<a href="https://www.123pan.com/s/12NHjv-xpWLh">https://www.123pan.com/s/12NHjv-xpWLh</a></li></ul><h2 id="Windows版本系统要求"><a href="#Windows版本系统要求" class="headerlink" title="Windows版本系统要求"></a>Windows版本系统要求</h2><img src="/2024/11/04/2024%E7%A0%B4%E8%A7%A3%E7%89%88%E6%94%AF%E6%8C%81windows%E5%92%8Cmac/1.png" class="" width="488"><p>&nbsp;</p><img src="/2024/11/04/2024%E7%A0%B4%E8%A7%A3%E7%89%88%E6%94%AF%E6%8C%81windows%E5%92%8Cmac/2.png" class="" width="488"><p>&nbsp;</p><img src="/2024/11/04/2024%E7%A0%B4%E8%A7%A3%E7%89%88%E6%94%AF%E6%8C%81windows%E5%92%8Cmac/3.png" class="" width="488"><p><a href="https://www.yuque.com/u37186489/tgrg5b/hbeqd8mhfr2f6p2t">参考来源</a></p><h2 id="安装注意事项"><a href="#安装注意事项" class="headerlink" title="安装注意事项"></a>安装注意事项</h2><ol><li><p>安装前请退出以下软件:</p><ul><li>360安全卫士</li><li>腾讯电脑管家</li><li>联想管家等安全软件</li></ul></li><li><p>软件下载后如果图标显示为白色无法打开,需要安装解压软件:</p><ul><li>推荐使用360压缩、2345好压等</li></ul></li><li><p>安装步骤:</p><ul><li>安装时注意选择语言</li><li>软件安装成功后,先不要打开</li><li>安装补丁后,再打开软件</li></ul></li><li><p>链接打开方式:</p><ul><li>不要在微信中直接打开链接</li><li>建议复制链接到浏览器地址栏打开</li></ul></li></ol><h2 id="常见问题解决"><a href="#常见问题解决" class="headerlink" title="常见问题解决"></a>常见问题解决</h2><h3 id="关闭-MAC-SIP-系统完整性保护"><a href="#关闭-MAC-SIP-系统完整性保护" class="headerlink" title="关闭 MAC SIP 系统完整性保护"></a>关闭 MAC SIP 系统完整性保护</h3><p>很多 Mac 用户反映安装软件后无法打开，这可能是因为 SIP (System Integrity Protection) 系统完整性保护没有关闭。SIP 类似于 Windows 的防火墙或安卓的 Root 权限。</p><h4 id="为什么需要关闭-SIP？"><a href="#为什么需要关闭-SIP？" class="headerlink" title="为什么需要关闭 SIP？"></a>为什么需要关闭 SIP？</h4><ul><li>苹果应用商店的软件都使用沙盒运行，无法访问系统文件</li><li>很多优秀软件因需要 SIP 系统权限而无法在 App Store 上架</li><li>目前最新的 macOS 系统使用破解软件基本都需要关闭 SIP</li><li>即使是部分正版软件也需要关闭 SIP，这是需要永久关闭的</li></ul><h4 id="检查-SIP-状态"><a href="#检查-SIP-状态" class="headerlink" title="检查 SIP 状态"></a>检查 SIP 状态</h4><ol><li>打开终端</li><li>输入命令：<code>csrutil status</code></li><li>查看返回信息：<ul><li>未关闭状态：<code>System Integrity Protection status: enabled</code></li><li>已关闭状态：<code>System Integrity Protection status: disabled</code></li></ul></li></ol><h4 id="关闭-SIP-的步骤"><a href="#关闭-SIP-的步骤" class="headerlink" title="关闭 SIP 的步骤"></a>关闭 SIP 的步骤</h4><ol><li>关机重启 Mac</li><li>开机时按住 <code>Command + R</code> 进入 Recovery 模式</li><li>在顶部菜单栏选择”实用工具” -&gt; “终端”</li><li>在终端输入：<code>csrutil disable</code></li><li>回车执行</li><li>点击左上角苹果图标，选择重新启动</li></ol><blockquote><p>注意：��闭 SIP 后无需再次关闭，除非系统重装。建议在使用完破解软件后重新开启 SIP（使用命令：<code>csrutil enable</code>）以保护系统安全。</p></blockquote><p><a href="https://www.qijishow.com/down/stop%20sip.html">参考来源</a></p><h3 id="Mac-M1-M2-芯片兼容性问题"><a href="#Mac-M1-M2-芯片兼容性问题" class="headerlink" title="Mac M1&#x2F;M2 芯片兼容性问题"></a>Mac M1&#x2F;M2 芯片兼容性问题</h3><p>对于搭载 M1&#x2F;M2 芯片的 MacBook，某些应用可能会出现闪退情况。这是因为一些应用还未完全适配 Apple Silicon 芯片。以下是解决方案：</p><h4 id="修复-M1-M2-应用闪退方法"><a href="#修复-M1-M2-应用闪退方法" class="headerlink" title="修复 M1&#x2F;M2 应用闪退方法"></a>修复 M1&#x2F;M2 应用闪退方法</h4><ol><li><p>安装 Rosetta 2</p><ul><li>打开终端，输入以下命令：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">/usr/sbin/softwareupdate --install-rosetta --agree-to-license<br></code></pre></td></tr></table></figure></li></ul></li><li><p>启用 Rosetta 模式</p><ul><li>打开访达(Finder)</li><li>进入应用程序目录</li><li>找到闪退的应用</li><li>右键点击应用图标</li><li>选择”显示简介”</li><li>勾选”使用 Rosetta 打开”</li></ul></li></ol><blockquote><p>注意：如果没有看到”使用 Rosetta 打开”选项，请先执行步骤1安装 Rosetta 2。</p></blockquote><h4 id="为什么会出现兼容性问题？"><a href="#为什么会出现兼容性问题？" class="headerlink" title="为什么会出现兼容性问题？"></a>为什么会出现兼容性问题？</h4><p>虽然某些应用官方版本已经兼容 M1&#x2F;M2 芯片，但破解版可能仍存在兼容性问题。这可能是因为破解团队使用 Intel 64位机器进行逆向工程导致的。</p><p>如果以上步骤操作后仍然无法解决问题，只能等待相关破解版本进行 M1&#x2F;M2 芯片的适配。</p><p><a href="https://www.qijishow.com/down/apple%20m1.html">参考来源</a></p><h3 id="MAC-系统安装错误解决方案"><a href="#MAC-系统安装错误解决方案" class="headerlink" title="MAC 系统安装错误解决方案"></a>MAC 系统安装错误解决方案</h3><p>如果在安装 Adobe Photoshop mac 版时遇到 “Error The installation cannot continue..” 错误提示，请按照以下步骤解决：</p><ol><li>打开安装包，找到 <code>install.app</code>，右键选择”显示包内容”</li><li>进入 <code>Contents/MacOS</code> 目录</li><li>找到并打开 <code>install</code> 文件</li><li>如果系统提示需要输入密码，请输入 Mac 管理员密码</li><li>然后就可以正常安装了</li></ol><blockquote><p>此方法适用于所有 Adobe 系列软件在 MAC 系统上的安装错误问题。</p></blockquote><p><a href="https://www.qijishow.com/down/Adobe%20help.html">参考来源</a></p><h3 id="去除-Adobe-非正版弹窗提示"><a href="#去除-Adobe-非正版弹窗提示" class="headerlink" title="去除 Adobe 非正版弹窗提示"></a>去除 Adobe 非正版弹窗提示</h3><p>最近很多用户遇到 Adobe 正版弹窗提示：”Your non-genuine Adobe app will be disabled soon”。无论是 Windows 还是 Mac，只要开启了网络代理，就可能出现这个弹窗，导致软件无法使用。</p><h4 id="Windows-解决方法"><a href="#Windows-解决方法" class="headerlink" title="Windows 解决方法"></a>Windows 解决方法</h4><ol><li><p>删除以下目录中的文件：</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livescript">C:<span class="hljs-string">\Program</span> Files (x86)<span class="hljs-string">\Common</span> Files<span class="hljs-string">\Adobe\AdobeGCClient</span><br></code></pre></td></tr></table></figure><p>需要删除的三个文件：</p><ul><li>Adobe Genuine Launcher.exe</li><li>AdobeGCClient.exe</li><li>AGMService.exe</li></ul></li><li><p>创建空文件替换：</p><ul><li>新建三个空的记事本文件</li><li>将文件名分别改为上述三个exe文件名</li><li>用这些空文件替换原来的exe文件</li><li>将 PS 启动文件在防火墙中断开联网</li></ul></li><li><p>快速解决方案：</p><ul><li>使用卸载工具直接卸载 Adobe Genuine Service</li></ul></li></ol><h4 id="Mac-解决方法"><a href="#Mac-解决方法" class="headerlink" title="Mac 解决方法"></a>Mac 解决方法</h4><ol><li>打开终端，输入以下命令：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo <span class="hljs-built_in">rm</span> /Library/Application\ Support/Adobe/AdobeGCClient/AdobeGCClient.app/Contents/MacOS/AdobeGCClient<br></code></pre></td></tr></table></figure></li><li>输入管理员密码（密码输入时不可见）</li><li>重启 Adobe 软件即可正常使用</li></ol><blockquote><p>注意：无论是 Mac 还是 Windows，核心就是要删除 AdobeGCClient 文件，并且防止它自动重建，这样就不会弹出 Adobe 过期或剩余天数的窗口了。</p></blockquote><p><a href="https://www.qijishow.com/down/adobehp.html">参考来源</a></p><h3 id="macOS-提示”xxx-app已损坏，无法打开”解决方案"><a href="#macOS-提示”xxx-app已损坏，无法打开”解决方案" class="headerlink" title="macOS 提示”xxx.app已损坏，无法打开”解决方案"></a>macOS 提示”xxx.app已损坏，无法打开”解决方案</h3><p>在 macOS (特别是 10.15 Catalina 及以上版本) 中，经常会遇到提示”xxx.app 已损坏，无法打开，你应该将它移到废纸篓”的情况。即使在”安全与隐私”中已开启”任何来源”选项，仍可能出现此提示。以下是解决方法：</p><h4 id="准备工作：开启”任何来源”选项"><a href="#准备工作：开启”任何来源”选项" class="headerlink" title="准备工作：开启”任何来源”选项"></a>准备工作：开启”任何来源”选项</h4><ol><li><p>检查”任何来源”选项是否开启：</p><ul><li>打开<code>系统偏好设置</code></li><li>进入<code>安全性与隐私 -&gt; 通用</code></li><li>查看是否有”任何来源”选项</li></ul></li><li><p>如果没有”任何来源”选项：</p><ul><li>打开终端</li><li>输入命令：<code>sudo spctl --master-disable</code></li><li>输入管理员密码（输入时不显��）</li><li>回到系统偏好设置查看是否已启用</li></ul></li></ol><h4 id="修复应用程序"><a href="#修复应用程序" class="headerlink" title="修复应用程序"></a>修复应用程序</h4><p>使用终端命令修复：</p><ol><li><p>打开终端</p></li><li><p>输入以下命令（注意 quarantine 后有一个空格）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo xattr -d com.apple.quarantine /Applications/应用名称.app<br></code></pre></td></tr></table></figure></li><li><p>或者使用拖拽方式：</p><ul><li>在终端中输入：<code>sudo xattr -d com.apple.quarantine </code></li><li>从访达中将应用程序拖入终端</li><li>按回车执行</li><li>输入管理员密码</li></ul></li></ol><blockquote><p>提示：密码输入时不会显示任何字符，输入完成后直接按回车即可。</p></blockquote><p><a href="https://www.qijishow.com/down/mac-file-damage15.html">参考来源</a></p><h3 id="MAC-版-PS-插件提示未部署解决方案"><a href="#MAC-版-PS-插件提示未部署解决方案" class="headerlink" title="MAC 版 PS 插件提示未部署解决方案"></a>MAC 版 PS 插件提示未部署解决方案</h3><p>当安装 PS 插件时提示”未部署”，这是因为 CEP 扩展必须有签名才能运行。签名用于验证扩展文件是否被篡改并识别扩展作者。以下是解决方法：</p><h4 id="开启开发者模式"><a href="#开启开发者模式" class="headerlink" title="开启开发者模式"></a>开启开发者模式</h4><p>根据不同版本的 Photoshop，需要在终端中输入不同的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># CC 2014</span><br>defaults write com.adobe.CSXS.5 PlayerDebugMode 1<br><br><span class="hljs-comment"># CC 2015</span><br>defaults write com.adobe.CSXS.6 PlayerDebugMode 1<br><br><span class="hljs-comment"># CC 2017</span><br>defaults write com.adobe.CSXS.7 PlayerDebugMode 1<br><br><span class="hljs-comment"># CC 2018</span><br>defaults write com.adobe.CSXS.8 PlayerDebugMode 1<br><br><span class="hljs-comment"># CC 2019-2020</span><br>defaults write com.adobe.CSXS.9 PlayerDebugMode 1<br><br><span class="hljs-comment"># CC 2021-2024</span><br>defaults write com.adobe.CSXS.10 PlayerDebugMode 1<br></code></pre></td></tr></table></figure><h4 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h4><ol><li><p>打开终端</p><ul><li>点击系统顶部菜单栏</li><li>选择”前往” -&gt; “实用工具” -&gt; “终端”</li></ul></li><li><p>输入对应版本的命令</p><ul><li>例如 PS 2024 版本，输入：<code>defaults write com.adobe.CSXS.10 PlayerDebugMode 1</code></li><li>回车执行</li></ul></li><li><p>重启 Photoshop</p><ul><li>完全退出 PS</li><li>重新打开即可正常使用插件</li></ul></li></ol><blockquote><p>注意：此方法适用于所有提示”未部署”的 Adobe 插件，包括面板类扩展。</p></blockquote><p><a href="https://www.qijishow.com/down/Not%20deployed.html">参考来源</a></p><h3 id="用户反馈"><a href="#用户反馈" class="headerlink" title="用户反馈"></a>用户反馈</h3><p>对于需要使用Neutral Filter滤镜的用户: 2025安装包已经包含了Neutral Filter滤镜内容，直接装2025就行。2024的登录有问题，不用装2024了。</p>]]></content>
    
    
    <categories>
      
      <category>工具分享</category>
      
      <category>Photoshop</category>
      
      <category>Adobe</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Photoshop</tag>
      
      <tag>破解软件</tag>
      
      <tag>mac</tag>
      
      <tag>windows</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>阅后即焚:隐私信息传递</title>
    <link href="/2024/10/26/%E9%98%85%E5%90%8E%E5%8D%B3%E7%84%9A-%E9%9A%90%E7%A7%81%E4%BF%A1%E6%81%AF%E4%BC%A0%E9%80%92/"/>
    <url>/2024/10/26/%E9%98%85%E5%90%8E%E5%8D%B3%E7%84%9A-%E9%9A%90%E7%A7%81%E4%BF%A1%E6%81%AF%E4%BC%A0%E9%80%92/</url>
    
    <content type="html"><![CDATA[<h1 id="工具介绍"><a href="#工具介绍" class="headerlink" title="工具介绍"></a>工具介绍</h1><p>这个工具是一个方便传递隐私信息的网站，用户可以在这里安全地分享敏感信息。它的最大特点是“阅后即焚”，即信息在被接收者查看后会自动销毁，确保信息不会被长期保存或滥用。这种特性使得用户在传递隐私信息时更加安心，避免了信息泄露的风险。</p><h1 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h1><p>打开<a href="https://yhjf.zymn.cc/">隐私笔记 https://yhjf.zymn.cc/</a>，输入信息，点击“创建笔记”，然后复制链接发送给接收者即可。</p><img src="/2024/10/26/%E9%98%85%E5%90%8E%E5%8D%B3%E7%84%9A-%E9%9A%90%E7%A7%81%E4%BF%A1%E6%81%AF%E4%BC%A0%E9%80%92/01.png" class="" width="488"> <img src="/2024/10/26/%E9%98%85%E5%90%8E%E5%8D%B3%E7%84%9A-%E9%9A%90%E7%A7%81%E4%BF%A1%E6%81%AF%E4%BC%A0%E9%80%92/02.png" class="" width="488"> <h1 id="相关视频"><a href="#相关视频" class="headerlink" title="相关视频"></a>相关视频</h1><iframe width="auto" height="auto" src="https://www.youtube.com/embed/IRKBN6ShJbg" title="如何輕鬆發送隱私信息？#一次性鏈接 #信息安全 #隱私保護 #消失內容" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>]]></content>
    
    
    <categories>
      
      <category>工具分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>阅后即焚</tag>
      
      <tag>隐私信息</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JetBrains IDEA全家桶破解激活</title>
    <link href="/2024/10/16/JetBrain-IDEA%E5%85%A8%E5%AE%B6%E6%A1%B6%E7%A0%B4%E8%A7%A3%E6%BF%80%E6%B4%BB/"/>
    <url>/2024/10/16/JetBrain-IDEA%E5%85%A8%E5%AE%B6%E6%A1%B6%E7%A0%B4%E8%A7%A3%E6%BF%80%E6%B4%BB/</url>
    
    <content type="html"><![CDATA[<p>在这篇博客中，我们将讨论如何破解和激活 JetBrains 的全家桶工具，包括 IntelliJ IDEA、PyCharm、WebStorm 等。以下是一些有效的方法和步骤：</p><h2 id="1-下载和安装-JetBrains-全家桶"><a href="#1-下载和安装-JetBrains-全家桶" class="headerlink" title="1. 下载和安装 JetBrains 全家桶"></a>1. 下载和安装 JetBrains 全家桶</h2><p>首先，访问 <a href="https://www.jetbrains.com/">JetBrains 的官方网站</a> 下载所需的 IDE 安装包。安装过程中，请确保选择合适的版本和操作系统，并根据您的需求选择相应的下载链接。</p><h2 id="2-JetBrain-软件破解步骤"><a href="#2-JetBrain-软件破解步骤" class="headerlink" title="2. JetBrain 软件破解步骤"></a>2. JetBrain 软件破解步骤</h2><ol><li>打开<a href="https://3.jetbra.in/">JETBRA.IN CHECKER 官方网站</a>，找一个有颜色的链接点进去</li></ol><img src="/2024/10/16/JetBrain-IDEA%E5%85%A8%E5%AE%B6%E6%A1%B6%E7%A0%B4%E8%A7%A3%E6%BF%80%E6%B4%BB/1.png" class="" width="488"><p>&nbsp;</p><ol start="2"><li>下载 jetbra.zip 文件到本地，并解压缩。请将解压后的文件放在不易删除的地方，并确保不要删除解压后的文件。</li></ol><img src="/2024/10/16/JetBrain-IDEA%E5%85%A8%E5%AE%B6%E6%A1%B6%E7%A0%B4%E8%A7%A3%E6%BF%80%E6%B4%BB/2.png" class="" width="488"><p>&nbsp;</p><ol start="3"><li>下载完成后，解压文件，进入解压后的文件夹，进入 scripts 文件夹。 如果你是 Linux&#x2F;MacOS，运行 install.sh；如果你是 Windows，运行 install-all-users.vbs 或者 install-current-user.vbs（此操作作用是配置 IDE 的 JVM 参数，并添加至环境变量）。</li></ol><img src="/2024/10/16/JetBrain-IDEA%E5%85%A8%E5%AE%B6%E6%A1%B6%E7%A0%B4%E8%A7%A3%E6%BF%80%E6%B4%BB/3.png" class="" width="488"><p>&nbsp;</p><img src="/2024/10/16/JetBrain-IDEA%E5%85%A8%E5%AE%B6%E6%A1%B6%E7%A0%B4%E8%A7%A3%E6%BF%80%E6%B4%BB/4.png" class="" width="488"><p>&nbsp;</p><h3 id="2-1-使用-JetBrains-Activation-Code"><a href="#2-1-使用-JetBrains-Activation-Code" class="headerlink" title="2.1 使用 JetBrains Activation Code"></a>2.1 使用 JetBrains Activation Code</h3><ul><li>复制激活码</li></ul><img src="/2024/10/16/JetBrain-IDEA%E5%85%A8%E5%AE%B6%E6%A1%B6%E7%A0%B4%E8%A7%A3%E6%BF%80%E6%B4%BB/5.png" class="" width="488"><p>&nbsp;</p><ul><li>打开 IDE，选择“激活”选项，输入激活码并确认。</li></ul><img src="/2024/10/16/JetBrain-IDEA%E5%85%A8%E5%AE%B6%E6%A1%B6%E7%A0%B4%E8%A7%A3%E6%BF%80%E6%B4%BB/6.png" class="" width="488"><p>&nbsp;</p><h2 id="4-结论"><a href="#4-结论" class="headerlink" title="4. 结论"></a>4. 结论</h2><p>通过以上方法，您可以成功激活 JetBrains 的全家桶工具，享受其强大的功能和便捷的开发体验。请务必遵循相关法律法规，合理使用软件。</p>]]></content>
    
    
    <categories>
      
      <category>软件破解</category>
      
      <category>开发环境</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JetBrains</tag>
      
      <tag>破解</tag>
      
      <tag>激活</tag>
      
      <tag>IDE</tag>
      
      <tag>开发工具</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>TikTok入门篇</title>
    <link href="/2024/10/13/TikTok%E5%85%A5%E9%97%A8%E7%AF%87/"/>
    <url>/2024/10/13/TikTok%E5%85%A5%E9%97%A8%E7%AF%87/</url>
    
    <content type="html"><![CDATA[<h1 id="入门篇"><a href="#入门篇" class="headerlink" title="入门篇"></a>入门篇</h1><h2 id="一、什么是TikTok？TikTok未来市场如何？"><a href="#一、什么是TikTok？TikTok未来市场如何？" class="headerlink" title="一、什么是TikTok？TikTok未来市场如何？"></a>一、什么是TikTok？TikTok未来市场如何？</h2><p>TikTok是字节跳动旗下的产品，是国际版的抖音，也可以叫做海外版抖音，是一款针对海外用户的短视频音乐社交软件。根据相关资料显示，2019年6月TK的月活跃用户已经达到了5亿，已经覆盖了150个国家，提供75种语言选择。现在已经2024年了，你可以想象一下现在有多少用户。同时，它也是不断和Facebook、谷歌竞争，抢占国际市场的短视频社交软件。</p><p>TK现在的前景非常好，差不多像两年前的抖音。它的打开方式和抖音是一样的，只不过它们的打开界面有些不一样。TK现在的前景就是流量大、处于蓝海期。只要我们掌握了方法，爆量涨粉都只是最基础的，随便一个作品可能就是几万几十万播放量，而且变现的模式也非常成熟，不仅有高额的流量补贴，还可以通过带货变现来赚钱。</p><h3 id="1-流量大"><a href="#1-流量大" class="headerlink" title="1. 流量大"></a>1. 流量大</h3><p>覆盖了全球150个国家，用户基数大。</p><h3 id="2-蓝海期"><a href="#2-蓝海期" class="headerlink" title="2. 蓝海期"></a>2. 蓝海期</h3><p>2020年9月份出现了创作者基金，只要我们开通账号，在上面发布作品，有播放量，我们就能赚到一笔钱。所以说是和两年前的抖音有点像，两年前的抖音就比现在好做。TK现在还处在上升期，是我们入局的好机会，相反，抖音已经处于一个平稳期，已经过了野蜜生长的时刻。</p><h2 id="二、TikTok与国内抖音区别是哪些？"><a href="#二、TikTok与国内抖音区别是哪些？" class="headerlink" title="二、TikTok与国内抖音区别是哪些？"></a>二、TikTok与国内抖音区别是哪些？</h2><h3 id="1-发展阶段"><a href="#1-发展阶段" class="headerlink" title="1. 发展阶段"></a>1. 发展阶段</h3><p>抖音的用户已经达到7亿，优质创作者达到600万。抖音在16年、17年开始上升，18年、19年开始爆发，直到现在进入一个平稳期。而且抖音的各项内容都比较成熟，种类有很多，这就导致流量竞争异常激烈，运营的难度非常大。</p><p>TikTok下载用户已经28亿，月活跃用户已经近15亿，但是优质制作者只有20万。如果你现在进入，你能不能咬下来一块肉？因为优质创作者太少了，而且它的内容比较单一，TK平台才开启了创作者基金，希望更多的优质创作出现，丰富平台的内容。TK现在还处在一个上升阶段，即将迎来一个爆发期。</p><h3 id="2-用户群体"><a href="#2-用户群体" class="headerlink" title="2. 用户群体"></a>2. 用户群体</h3><p>TikTok覆盖150个国家，美国、英国等国家都有推广，用户群体更大、更广。</p><h3 id="3-变现渠道"><a href="#3-变现渠道" class="headerlink" title="3. 变现渠道"></a>3. 变现渠道</h3><ul><li><strong>抖音</strong>：变现渠道已经很成熟，网红孵化、广告植入、直播带货等。</li><li><strong>TK</strong>：目前变现方式也比较成熟，播放量补贴是比较好拿的一种，另外还有CPA（每次行动成本，Cost Per Action），它是指广告主为每个用户完成特定行动（如注册、下载等）而支付的费用。此外，还有接广告、佣金、直播打赏、短视频带货等。基金补贴是让我们0基础赚第一桶金的很好渠道，运营账号的同时就可以拿到收益，不过真正的前景还是带货，这也是我们一直在运营的方向，潜力无限。</li></ul><h3 id="4-其他区别"><a href="#4-其他区别" class="headerlink" title="4. 其他区别"></a>4. 其他区别</h3><p>第一张图是国内的抖音，它的点赞量在164.9万，第二张图是TK，它的点赞量在390万，明显TK的点赞量比抖音要大。另外，TK我们可以看到视频的播放量，抖音不行，抖音只能看到视频的点赞量。</p><p>在TikTok上M表示百万，K表示千，同时主页直接显示视频播放量，还有Website【同站】直链可以倒流到第三方平台的入口。我们做的时候做15秒就可以了，主打短视频。因为购物车还没开放，部分区域还在内测，等这部分开启，就是像抖音一样的一波红利，所以说我们要抓住这一波机会，做好我们的布局。</p><h2 id="三、玩转TikTok，前期准备细节设置？"><a href="#三、玩转TikTok，前期准备细节设置？" class="headerlink" title="三、玩转TikTok，前期准备细节设置？"></a>三、玩转TikTok，前期准备细节设置？</h2><h3 id="1-手机相关"><a href="#1-手机相关" class="headerlink" title="1. 手机相关"></a>1. 手机相关</h3><ul><li><strong>苹果手机</strong>：激活iPhone6以上，储存空间16G以上；</li><li><strong>安卓手机</strong>：系统8.0以上，内存最低64G以上。</li></ul><p>我推荐用苹果，更快捷方便。苹果手机要无锁的能正常抹机的。</p><h3 id="2-账号注册"><a href="#2-账号注册" class="headerlink" title="2. 账号注册"></a>2. 账号注册</h3><p>使用国外手机号注册。</p><h3 id="3-网络细节"><a href="#3-网络细节" class="headerlink" title="3. 网络细节"></a>3. 网络细节</h3><p>稳定的梯子，稳定的Wifi。不要频繁切换节点。一定要学会科学上网。</p><h2 id="四、如何下载及注册TikTok账号？"><a href="#四、如何下载及注册TikTok账号？" class="headerlink" title="四、如何下载及注册TikTok账号？"></a>四、如何下载及注册TikTok账号？</h2><h3 id="1-设备处理"><a href="#1-设备处理" class="headerlink" title="1. 设备处理"></a>1. 设备处理</h3><ul><li><strong>苹果端</strong>：二手苹果手机，拔掉SIM卡；</li><li><strong>安卓端</strong>：设备格式化，拔掉SIM卡。</li></ul><p>抹机的意义在于让你的手机变成一张白纸，方便营造一种在国外使用手机的环，避免后期封号。</p><h3 id="2-梯子的搭建"><a href="#2-梯子的搭建" class="headerlink" title="2. 梯子的搭建"></a>2. 梯子的搭建</h3><p>有不同的设备教程，有电脑版、安卓版、苹果版，你的手机是什么种类的，你就选择哪一个安装教程就可以了，如果有什么不清楚的，可以报名咨询。</p><h3 id="3-如何下载及注册TikTok账号？"><a href="#3-如何下载及注册TikTok账号？" class="headerlink" title="3. 如何下载及注册TikTok账号？"></a>3. 如何下载及注册TikTok账号？</h3><ul><li><strong>苹果端</strong>：登录美区ID在App Store下载；</li><li><strong>安卓端</strong>：安装包下载。</li></ul><p>软件的下载需要我们手机的模拟度在90-100%，越高越好。模拟度不够的原因是节点不对，需要我们更换节点，或者说我们的节点选择的是配置不是代理。我们只用选择代理，刷新之后就可以了 </p><h3 id="创作者基金的要求："><a href="#创作者基金的要求：" class="headerlink" title="创作者基金的要求："></a>创作者基金的要求：</h3><ol><li>18岁以上；</li><li>1万粉以上；</li><li>过去30天有1万以上的播放量。</li></ol><p>这个要求特别低，后面会教大家快速涨粉！</p><h2 id="五、如何快速养号，让你赢在起跑线上？"><a href="#五、如何快速养号，让你赢在起跑线上？" class="headerlink" title="五、如何快速养号，让你赢在起跑线上？"></a>五、如何快速养号，让你赢在起跑线上？</h2><p>让TikTok平台知道你是一个正常的用户，不是营销号。TikTok平台更希望把流量推荐给那些能创作高质量、垂直内容的账号，养号的核心目的也是提供账号的权重。</p><p>适当的刷喜好推荐，根据你所创作的内容去刷，也可以刷热门领域的视频，可以在TikTok的热门话题里面选择。例如，如果你要做剧情类，就刷刷剧情的视频，点赞；如果你要做美女类，就多刷刷美女的视频，点赞。这样当你发布相关视频的时候，系统会把你的视频推荐给相关人群。</p><h3 id="账号的一些细节也要注意："><a href="#账号的一些细节也要注意：" class="headerlink" title="账号的一些细节也要注意："></a>账号的一些细节也要注意：</h3><ol><li>不要跳节点；</li><li>不要疯狂刷；</li><li>不要马上发。</li></ol><h2 id="六、TikTok流量分布来源，知己知彼，才能做得更好？"><a href="#六、TikTok流量分布来源，知己知彼，才能做得更好？" class="headerlink" title="六、TikTok流量分布来源，知己知彼，才能做得更好？"></a>六、TikTok流量分布来源，知己知彼，才能做得更好？</h2><h3 id="1-TikTok的推荐机制"><a href="#1-TikTok的推荐机制" class="headerlink" title="1. TikTok的推荐机制"></a>1. TikTok的推荐机制</h3><p>当你在平台上发布一个视频，初始流量在100-500，系统会根据这些人中有多少点赞、关注、转发，来判定是否把你推荐到下一级流量。</p><h3 id="2-TikTok流量分布来源"><a href="#2-TikTok流量分布来源" class="headerlink" title="2. TikTok流量分布来源"></a>2. TikTok流量分布来源</h3><ul><li><strong>系统推荐</strong>：占比90%；</li><li><strong>个人主页流量</strong>：占比5%；</li><li><strong>粉丝关注流量</strong>：占比3%；</li><li><strong>其他来源流量</strong>：占比2%。</li></ul><h3 id="3-哪些类型的视频不能做？"><a href="#3-哪些类型的视频不能做？" class="headerlink" title="3. 哪些类型的视频不能做？"></a>3. 哪些类型的视频不能做？</h3><ol><li>视频涉及未成年不宜镜头，暴力赌博血腥等；</li><li>视频清晰度低，模糊不清，含有水印；</li><li>有第三方广告字眼，引导性太强的视频；</li><li>政治敏感，蹭国家热点话题视频；</li><li>诋毁他人，损害他人利益视频。</li></ol><h3 id="4-怎么去看视频完播率？"><a href="#4-怎么去看视频完播率？" class="headerlink" title="4. 怎么去看视频完播率？"></a>4. 怎么去看视频完播率？</h3><p>可以看一下上面的图片，点击第一个框，然后在第二个图上可以看到我们这个作品520w，平均播放时间9s，我们的作品只有10s，说明我们的作品完播率还是不错的。</p><h2 id="变现篇"><a href="#变现篇" class="headerlink" title="变现篇"></a>变现篇</h2><h3 id="一、TikTok的多种变现模式，如何找到最合适的一种？"><a href="#一、TikTok的多种变现模式，如何找到最合适的一种？" class="headerlink" title="一、TikTok的多种变现模式，如何找到最合适的一种？"></a>一、TikTok的多种变现模式，如何找到最合适的一种？</h3><ol><li><p><strong>创作者基金收益</strong>：TikTok的收益基金是一个用美区用户和欧洲用户的激励计划，是用来扶持创作者创作优质的内容，全部发放给美区用户，并承诺在三年内共投成20亿美金。创作者基金处于红利期，门槛很低，有播放量就有钱。这是目前比较简单好拿的一种变现模式，从这也能说明目前平台缺乏优质创作者，正式抢占流量的机会，也是我们现阶段玩儿的重点。</p></li><li><p><strong>跨境电商卖货</strong>：利用TikTok主页挂链接，通过TikTok宣传，当账号爆了有流量之后，用户从主页点击链接跳转到第三方平台购买，进行卖货，从而赚取佣金。</p></li><li><p><strong>主页引流</strong>：有人的地方，就有流量。有流量的地方就有盈利。TikTok辐射150个国家，这才是流量的聚集地。根据业务属性，进行视频创作，爆了之后主页引流，可以挂手机号、邮箱等。</p></li><li><p><strong>其他变现</strong>：</p><ul><li>账号代运营：账号做出来粉丝多少，根据粉丝量的多少给你钱；</li><li>账号交易：做出来一定量的粉丝，把账号卖掉，一锤子买卖，后期可能会像抖音一样，这方面的交易市场会非常大；</li><li>广告植入：在你的视频中根据广告主的要求植入相关的广告；</li><li>知识付费：有人觉得你的账号做得很厉害，想跟你学习，你就可以进行收费。</li></ul></li></ol><h3 id="二、如何学习定位，让你的收益更近一步？"><a href="#二、如何学习定位，让你的收益更近一步？" class="headerlink" title="二、如何学习定位，让你的收益更近一步？"></a>二、如何学习定位，让你的收益更近一步？</h3><ol><li><p><strong>什么是定位？</strong><br>比如说你想做什么领域，什么领域比较赚钱？什么领域前期比较容易起号？等等，根据自己的需要进行定位。</p></li><li><p><strong>如何去定位？</strong></p><ul><li>根据兴趣：兴趣是最好的老师，分析擅长才会做得更好（但不能走入兴趣误区）。例如，如果你喜欢美妆，就做美妆类的视频；如果你喜欢篮球，就做篮球类的视频。自己有兴趣，自己才有动力。</li><li>根据热门：萌宠、美女、搞笑等热门领域，平台首页显示出来的热门说明当下这个品类比较火，如果我们这个时候上车，我们是不是可以蹭一波热度。</li><li>根据市场：TikTok缺什么样的内容？就去创作什么样的内容，学会蓝海起步。现在最大的问题就是内容少，没有国内抖音那样的繁荣，我们就可以借这个机会，做出不同的内容，这样平台会给我们比较多的流量。</li></ul></li></ol><h3 id="常见热门领域："><a href="#常见热门领域：" class="headerlink" title="常见热门领域："></a>常见热门领域：</h3><p>舞蹈、剧情、带梗、解压、骑行、搞笑、猎奇、调酒、特效、美女、卡点、街拍、萌宠、冒险。</p><h3 id="三、玩转TikTok如何快速选品，让卖货更简单。"><a href="#三、玩转TikTok如何快速选品，让卖货更简单。" class="headerlink" title="三、玩转TikTok如何快速选品，让卖货更简单。"></a>三、玩转TikTok如何快速选品，让卖货更简单。</h3><ol><li><p><strong>如何在TikTok上选品</strong></p><ul><li>看自身：看自己有什么样的资源；</li><li>看对手：例如你想做一个品类，你在TikTok平台看好物账号，看他们在做什么品类，你也可以向他们学习，卖相关的一些产品；</li><li>找平台：目前的带货主要是亚马逊、速卖通等。</li></ul></li><li><p><strong>如何通过TikTok挂商品链接？</strong></p><ul><li>账号权限：达到一定的粉丝数量，平台随机给你开挂链接的地方；</li><li>找到商品：在独立站上找到售卖商品；</li><li>生成链接：复制连接；</li><li>挂上主页：把链接挂上主页就好了。</li></ul></li></ol><h3 id="四、如何通过TikTok，玩转平台补贴收益？"><a href="#四、如何通过TikTok，玩转平台补贴收益？" class="headerlink" title="四、如何通过TikTok，玩转平台补贴收益？"></a>四、如何通过TikTok，玩转平台补贴收益？</h3><ol><li><p><strong>创作者基金收益</strong>：TikTok创作者基金是为了回馈优质创作者而设立。本基金从2020年8月启动，TikTok US在未来一年内至少发放总计2亿美元给符合条件的创作者，未来三年全美预计10亿美金，全球总计将超过20亿美元。创造者基金我们还能做好几年，也就是说，我们做出来账号，好几年都有收益。</p></li><li><p><strong>操作简单</strong>：只要我们开通创作者基金收益，然后上传视频，有播放量就有钱，就是这么简单。</p></li><li><p><strong>容易变现</strong>：有时候1W的播放量大概在0.9-1.2美金左右。而且创作者基金是可以累计的，没有太多复杂的程序。</p></li><li><p><strong>怎样一步步玩转创作者收益？</strong></p><ul><li>有1W粉丝；</li><li>过去30天内有1W以上播放；</li><li>至少18周岁以上。</li></ul></li></ol><p>基本上两三天就可以达到。</p><ol start="5"><li><p><strong>如何提现创作者基金收益？</strong></p><ul><li>打开TikTok找到余额；</li><li>注册PayPal账号（相当于国内的支付宝）；</li><li>绑定TikTok——PayPal提现到虚拟银行，美金转入人民币——从虚拟银行转到国内的银行卡。</li></ul></li><li><p><strong>多账号提现方法</strong>：可以通过PayPal增加邮箱的方式。</p></li></ol><h2 id="运营篇"><a href="#运营篇" class="headerlink" title="运营篇"></a>运营篇</h2><h3 id="一：快速冷启动，起盘账号"><a href="#一：快速冷启动，起盘账号" class="headerlink" title="一：快速冷启动，起盘账号"></a>一：快速冷启动，起盘账号</h3><ol><li>使用合拍功能；</li><li>视频音乐卡点；</li><li>拍同款；</li><li>前期起量。</li></ol><h3 id="二：找到优质素材"><a href="#二：找到优质素材" class="headerlink" title="二：找到优质素材"></a>二：找到优质素材</h3><ol><li><strong>什么是优质素材</strong>：点赞量高，互动性强，有吸引点。</li><li><strong>去哪里寻找优质素材</strong>：<ul><li>抖音；</li><li>快手；</li><li>哔哩哔哩；</li><li>YouTube。</li></ul></li></ol><p>抖音与快手是最好的选择，他们都是短视频平台。</p><h3 id="三：素材去水印"><a href="#三：素材去水印" class="headerlink" title="三：素材去水印"></a>三：素材去水印</h3><p>找到素材-开始剪辑-进行伪原创-导出保存。这只是一个简单的流程，你想要添加更多色彩或别的东西也是可以的，自己进行一个优化，尽量让视频清晰一点，各种参数你也是可以更改的。</p><h3 id="四：分析账号属性，最大化上升空间"><a href="#四：分析账号属性，最大化上升空间" class="headerlink" title="四：分析账号属性，最大化上升空间"></a>四：分析账号属性，最大化上升空间</h3><ol><li><strong>分析账号属性的原因</strong>：知己知彼，百战百胜，找对方向，深耕细作。例如，街拍也有很多种，搞笑、剧情、情侣秀恩爱等等，我们前期可以都发发看，然后看看哪个小的类目受欢迎，然后深耕细作这个小类目。</li></ol><h3 id="五：上热门的8大技巧"><a href="#五：上热门的8大技巧" class="headerlink" title="五：上热门的8大技巧"></a>五：上热门的8大技巧</h3><ol><li><p>如何上热门：</p><ul><li>检查账号内容；</li><li>分析竞争对手；</li><li>利用合拍借力；</li><li>查看For You视频；</li><li>使用热门音乐；</li><li>使用垂直标签；</li><li>编辑引导标题；</li><li>妙用拍同款方法。</li></ul></li><li><p>上了热门之后怎么办？</p><ul><li>多发作品，趁热打铁，趁着流量还在，多发作品，一旦有一个视频热门很容易带动其他作品起来；</li><li>及时互动，及时回复评论。</li></ul></li></ol><h3 id="六：怎样筛选优质作品，筛选爆点"><a href="#六：怎样筛选优质作品，筛选爆点" class="headerlink" title="六：怎样筛选优质作品，筛选爆点"></a>六：怎样筛选优质作品，筛选爆点</h3><ol><li><strong>爆点分析</strong>；</li><li><strong>音乐契合</strong>；</li><li><strong>情绪波动</strong>；</li><li><strong>用户画像</strong>；</li><li><strong>数据分析</strong>；</li><li><strong>评论管理</strong>。</li></ol><h3 id="七：强吸引，高互动的标题怎么写？"><a href="#七：强吸引，高互动的标题怎么写？" class="headerlink" title="七：强吸引，高互动的标题怎么写？"></a>七：强吸引，高互动的标题怎么写？</h3><ol><li>根据视频内容，根据自己的视频内容自己来写标题；</li><li>跨平台找标题，我们在哪里找的素材，他们的标题我们就可以用；</li><li>评论互动提取，我们找到的素材一般是爆款视频，那么它会有很多评论，你就可以提取视频下面好的评论做你的标题；</li><li>参考同行，参考同行比较好的视频，看看他的标题怎么写，我们就可以模仿他们的标题，或者说多看几个同行，杂交来写。</li></ol><h3 id="八：视频爆款的5个指标"><a href="#八：视频爆款的5个指标" class="headerlink" title="八：视频爆款的5个指标"></a>八：视频爆款的5个指标</h3><ol><li>完播率：黄金3秒；</li><li>评论率：互动管理；</li><li>点赞率：快速热门；</li><li>关注率：引导关注；</li><li>转发率：流量叠加，作品一定要好，把所有权限打开，有助于用户对我们作品的转发。</li></ol><h3 id="九：批量打造TikTok账号，建立矩阵"><a href="#九：批量打造TikTok账号，建立矩阵" class="headerlink" title="九：批量打造TikTok账号，建立矩阵"></a>九：批量打造TikTok账号，建立矩阵</h3><p>前期不要着急去做矩阵，先玩好1个账号，找到做热门的感觉之后再批量做矩阵。</p><h2 id="问题篇"><a href="#问题篇" class="headerlink" title="问题篇"></a>问题篇</h2><h3 id="一：操作TikTok值得注意的违规问题？"><a href="#一：操作TikTok值得注意的违规问题？" class="headerlink" title="一：操作TikTok值得注意的违规问题？"></a>一：操作TikTok值得注意的违规问题？</h3><ol><li><strong>内容违规</strong>：内容不符合TikTok的审核，解决方法：直接删除视频；</li><li><strong>签名违规</strong>：引导太过明显，解决方法：重新编辑正常签名；</li><li><strong>刷粉违规</strong>：第三方途径刷假粉丝，解决方法：无解，刷粉必死；</li><li><strong>梯子问题</strong>：梯子不稳定，解决方法：重新设置梯子。</li></ol><h3 id="二：账号容易被封，应该怎么办？"><a href="#二：账号容易被封，应该怎么办？" class="headerlink" title="二：账号容易被封，应该怎么办？"></a>二：账号容易被封，应该怎么办？</h3><p>原因：作品问题、网络问题。账号多次被封，账号就不能用了。解决方法：账号多次被封，换一个新的账号。如果已经有了几万粉，更换作品内容就好了。</p><h3 id="三：突然没有流量怎么办？如何快速优化账号？"><a href="#三：突然没有流量怎么办？如何快速优化账号？" class="headerlink" title="三：突然没有流量怎么办？如何快速优化账号？"></a>三：突然没有流量怎么办？如何快速优化账号？</h3><p>解决方法：</p><ol><li>合拍：用合拍测试我们的流量；</li><li>拍同款：多用拍同款；</li><li>蹭热点：蹭热点，蹭官方平台的热点，官方经常会有热点；</li><li>提质量：提高我们产品的质量，画质不好，素材不好，音乐不对，各种影响产品的因素都要检查一下。</li></ol><h3 id="四：账号0播放，可能这些细节你没有注意？"><a href="#四：账号0播放，可能这些细节你没有注意？" class="headerlink" title="四：账号0播放，可能这些细节你没有注意？"></a>四：账号0播放，可能这些细节你没有注意？</h3><ol><li>你的网络很卡，解决方法：我们在上传视频之前，先刷刷视频，适当点点赞。上传完视频之后，10分钟之内，多刷刷TikTok视频；</li><li>IP不对，解决方法：检查自己的IP是否在国外。</li></ol><h3 id="五：如何解决TikTok开通不了创作者基金？"><a href="#五：如何解决TikTok开通不了创作者基金？" class="headerlink" title="五：如何解决TikTok开通不了创作者基金？"></a>五：如何解决TikTok开通不了创作者基金？</h3><p>解决方法：</p><ol><li>自查网络环境问题，是否属于国外地区；</li><li>注册时年龄是否超过18周岁；</li><li>24小时后重试。</li></ol><h3 id="六：账号容易限流，播放量极低怎么办？"><a href="#六：账号容易限流，播放量极低怎么办？" class="headerlink" title="六：账号容易限流，播放量极低怎么办？"></a>六：账号容易限流，播放量极低怎么办？</h3><ol><li>素材重复，没质量，解决方法：创作高质量产品；</li><li>频繁违规操作，解决方法：不要违规；</li><li>定位软件出问题，解决方法：关闭手机定位，保证模拟定位在国外；</li><li>机器软件群控操作，解决方法：尽量不要机器群控。</li></ol><h3 id="七：账号爆了一段时间，突然不爆了怎么办？"><a href="#七：账号爆了一段时间，突然不爆了怎么办？" class="headerlink" title="七：账号爆了一段时间，突然不爆了怎么办？"></a>七：账号爆了一段时间，突然不爆了怎么办？</h3><p>提升作品质量，删除低质量产品，只留下高质量产品。</p><h3 id="八：TikTok有了收益，如何进行提现？"><a href="#八：TikTok有了收益，如何进行提现？" class="headerlink" title="八：TikTok有了收益，如何进行提现？"></a>八：TikTok有了收益，如何进行提现？</h3><p>TikTok绑定PayPal——PayPal转入万里汇——万里汇转成人民币等途径。</p><h3 id="九：如何快速提升视频的完播率？"><a href="#九：如何快速提升视频的完播率？" class="headerlink" title="九：如何快速提升视频的完播率？"></a>九：如何快速提升视频的完播率？</h3><ol><li>吸睛前置；</li><li>黄金三秒；</li><li>视频时长；</li><li>音乐爆点。</li></ol><h3 id="十：如何选择一个黄金时间发布视频？"><a href="#十：如何选择一个黄金时间发布视频？" class="headerlink" title="十：如何选择一个黄金时间发布视频？"></a>十：如何选择一个黄金时间发布视频？</h3><p>以美国时间为准，发布时间在美国时间的早上的8点-11点，晚上的6点-10点。不一定是以这个为准，你的发布时间要以你的粉丝的活跃时间为准。</p><h2 id="技术篇"><a href="#技术篇" class="headerlink" title="技术篇"></a>技术篇</h2><ol><li>让拥有一个高权重的TikTok账号（稳定的网络环境，单个作品起推重20000人次播放量）；</li><li>手机+电脑处理素材视频技巧包含特效、配音、优质短视频制作；</li><li>热门技巧《高质量热门技巧》传授；</li><li>独立拥有百万级播放量的能力！</li></ol><h3 id="二：粗暴变现篇"><a href="#二：粗暴变现篇" class="headerlink" title="二：粗暴变现篇"></a>二：粗暴变现篇</h3><ol><li>TikTok创作者基金补贴如何高效率赚到手抽筋！（发作品就有数千美金领取）；</li><li>简单粗暴的TK短视频产品变现技巧！让你月入过万快速达成；</li><li>带货定向、选品一站式服务！无产品+有产品+导流不同变现模式；</li><li>CPA简单快速变现、易上手！（零成本变现）。</li></ol>]]></content>
    
    
    <categories>
      
      <category>TikTok</category>
      
      <category>社交媒体营销</category>
      
    </categories>
    
    
    <tags>
      
      <tag>TikTok</tag>
      
      <tag>短视频</tag>
      
      <tag>社交媒体</tag>
      
      <tag>变现</tag>
      
      <tag>营销</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>TikTok快速起号技巧</title>
    <link href="/2024/10/11/TikTok%E5%BF%AB%E9%80%9F%E8%B5%B7%E5%8F%B7%E6%8A%80%E5%B7%A7/"/>
    <url>/2024/10/11/TikTok%E5%BF%AB%E9%80%9F%E8%B5%B7%E5%8F%B7%E6%8A%80%E5%B7%A7/</url>
    
    <content type="html"><![CDATA[<h1 id="TikTok-快速起号技巧"><a href="#TikTok-快速起号技巧" class="headerlink" title="TikTok 快速起号技巧"></a>TikTok 快速起号技巧</h1><p>在 TikTok 上快速建立账号并吸引粉丝需要一系列策略和技巧。以下是一些有效的方法：</p><h2 id="1-账号设置"><a href="#1-账号设置" class="headerlink" title="1. 账号设置"></a>1. 账号设置</h2><ul><li><strong>固定节点 IP</strong>：使用固定的 IP 地址发布内容，避免频繁更换，以提升账号的稳定性和权重。</li><li><strong>标签选择</strong>：选择与内容相关的标签，并结合热门标签，以提高视频的曝光率。</li></ul><h3 id="TikTok-标签设置与使用技巧"><a href="#TikTok-标签设置与使用技巧" class="headerlink" title="TikTok 标签设置与使用技巧"></a>TikTok 标签设置与使用技巧</h3><p>在 TikTok 上有效地设置和使用标签是提高视频曝光率的关键。以下是如何选择相关标签以及结合热门标签的具体方法。</p><h4 id="1-设置相关标签"><a href="#1-设置相关标签" class="headerlink" title="1. 设置相关标签"></a>1. 设置相关标签</h4><ul><li><strong>自主设置标签</strong>：在编辑个人信息时，找到“添加兴趣标签”选项，选择与内容相关的标签来标记账号的类型和风格。这将帮助用户更容易找到你的账号。</li><li><strong>内容相关性</strong>：确保所选标签能够准确描述视频内容。例如，如果你发布的是化妆教程，可以使用#MakeupTutorial、#BeautyTips 等直接相关的标签。</li></ul><h4 id="2-查看和结合热门标签"><a href="#2-查看和结合热门标签" class="headerlink" title="2. 查看和结合热门标签"></a>2. 查看和结合热门标签</h4><ul><li><strong>使用热门标签</strong>：在发布视频时，可以结合一些当前流行的标签。热门标签通常会有更高的搜索量，但竞争也更激烈。建议使用 3 个直接相关的标签、2 个宽泛的标签和 2 个热门标签的组合，以达到最佳效果。</li><li><strong>利用趋势</strong>：关注 TikTok 上的热门挑战和趋势，参与这些挑战并使用相关的挑战标签，可以增加被发现的机会。</li></ul><h4 id="3-标签数量与排列"><a href="#3-标签数量与排列" class="headerlink" title="3. 标签数量与排列"></a>3. 标签数量与排列</h4><ul><li><strong>适度使用</strong>：每个视频建议使用 3 至 5 个标签，避免过多导致信息杂乱。TikTok 允许每个视频最多 300 个字符，包括所有文本和标签，因此合理安排是关键。</li><li><strong>优先顺序</strong>：将最重要的三个标签放在前面，因为 TikTok 在推荐和搜索结果中更重视这些标签。</li></ul><h4 id="4-数据分析与优化"><a href="#4-数据分析与优化" class="headerlink" title="4. 数据分析与优化"></a>4. 数据分析与优化</h4><ul><li><strong>定期检查表现</strong>：通过 TikTok Pro 帐户分析功能，查看哪些标签效果最好，并根据数据反馈不断优化你的标签策略。关注用户互动和观看数据，以调整未来的视频发布策略。</li></ul><h2 id="2-内容创作"><a href="#2-内容创作" class="headerlink" title="2. 内容创作"></a>2. 内容创作</h2><ul><li><strong>真实内容</strong>：用户偏爱真实感强的视频，因此应注重内容的真实性和亲和力。</li><li><strong>热点追踪</strong>：关注 TikTok 上的热门话题和趋势，制作相关视频并使用相应标签，以增加流量。</li></ul><h2 id="3-发布频率"><a href="#3-发布频率" class="headerlink" title="3. 发布频率"></a>3. 发布频率</h2><ul><li><strong>高频率更新</strong>：建议每天发布 4-8 次内容，保持活跃度以吸引更多观众。</li></ul><h2 id="4-视频质量"><a href="#4-视频质量" class="headerlink" title="4. 视频质量"></a>4. 视频质量</h2><ul><li><strong>精致制作</strong>：确保视频质量高且富有创意，特别是在前 3 秒内抓住观众注意力。</li><li><strong>使用特效</strong>：利用 TikTok 更新的特效，增加视频的新鲜感和吸引力。</li></ul><h2 id="5-互动与营销"><a href="#5-互动与营销" class="headerlink" title="5. 互动与营销"></a>5. 互动与营销</h2><ul><li><strong>积极互动</strong>：在评论区与粉丝互动，回复评论以增强粉丝粘性。</li><li><strong>KOL 合作</strong>：与网络红人合作，通过他们的影响力吸引更多用户关注。</li></ul><h2 id="6-数据分析"><a href="#6-数据分析" class="headerlink" title="6. 数据分析"></a>6. 数据分析</h2><ul><li><strong>分析竞争对手</strong>：研究同领域内表现优秀的账号，学习其成功之处，并进行相应调整。</li></ul><h2 id="7-持续优化"><a href="#7-持续优化" class="headerlink" title="7. 持续优化"></a>7. 持续优化</h2><ul><li><strong>复制成功模式</strong>：如果某个视频表现优异，可以尝试制作类似内容，利用相同的音乐和剪辑风格再发布。</li></ul><h2 id="8-行业名词解析"><a href="#8-行业名词解析" class="headerlink" title="8. 行业名词解析"></a>8. 行业名词解析</h2><h3 id="KOL解析"><a href="#KOL解析" class="headerlink" title="KOL解析"></a>KOL解析</h3><p>KOL是“Key Opinion Leader”的缩写，意指“关键意见领袖”。KOL通常是某一特定领域的专家，他们的观点和建议受到广泛尊重和信任。以下是KOL的一些关键特点和作用：</p><h4 id="KOL的定义"><a href="#KOL的定义" class="headerlink" title="KOL的定义"></a>KOL的定义</h4><ul><li><strong>专业性</strong>：KOL在其专业领域内拥有丰富的知识和经验，通常在医疗、科技、金融、美容等行业具有较高的权威性。</li><li><strong>影响力</strong>：KOL的意见能够显著影响公众的看法和消费决策，他们被视为可信的信息来源。</li></ul><h4 id="KOL与影响者（Influencer）的区别"><a href="#KOL与影响者（Influencer）的区别" class="headerlink" title="KOL与影响者（Influencer）的区别"></a>KOL与影响者（Influencer）的区别</h4><ul><li><strong>职业背景</strong>：KOL通常在其领域内有正式职业，如医生、学者或行业专家，而影响者则可能是社交媒体上的普通用户，主要依靠粉丝数量进行推广。</li><li><strong>目标受众</strong>：KOL的受众通常更为专业和细分，而影响者则可能面向更广泛的群体。</li></ul><h4 id="KOL的作用"><a href="#KOL的作用" class="headerlink" title="KOL的作用"></a>KOL的作用</h4><ul><li><strong>品牌推广</strong>：品牌常通过与KOL合作来提升产品的可信度和知名度，因为消费者更倾向于信任这些专家的推荐。</li><li><strong>市场引导</strong>：KOL可以帮助品牌在竞争激烈的市场中脱颖而出，塑造品牌形象，增加消费者对新产品的接受度。</li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>KOL在现代营销中扮演着重要角色，他们通过专业知识和可信度，为品牌带来更高的认可度和信任度。</p><p>通过以上方法，你可以有效地设置和使用 TikTok 标签，从而提高视频的曝光率并吸引更多目标观众。</p><hr>]]></content>
    
    
    <categories>
      
      <category>营销策略</category>
      
      <category>社交媒体</category>
      
    </categories>
    
    
    <tags>
      
      <tag>TikTok</tag>
      
      <tag>社交媒体</tag>
      
      <tag>营销</tag>
      
      <tag>内容创作</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>币圈出金教程：从币安经Kraken Pro和Wise安全转账到银行卡</title>
    <link href="/2024/10/06/%E5%B8%81%E5%9C%88%E5%87%BA%E9%87%91%E6%95%99%E7%A8%8B%EF%BC%9A%E4%BB%8E%E4%BA%A4%E6%98%93%E6%89%80%E5%AE%89%E5%85%A8%E8%BD%AC%E8%B4%A6%E5%88%B0%E9%93%B6%E8%A1%8C%E5%8D%A1/"/>
    <url>/2024/10/06/%E5%B8%81%E5%9C%88%E5%87%BA%E9%87%91%E6%95%99%E7%A8%8B%EF%BC%9A%E4%BB%8E%E4%BA%A4%E6%98%93%E6%89%80%E5%AE%89%E5%85%A8%E8%BD%AC%E8%B4%A6%E5%88%B0%E9%93%B6%E8%A1%8C%E5%8D%A1/</url>
    
    <content type="html"><![CDATA[<p>在加密货币世界中，”出金”是指将数字资产转换为法定货币并提取到您的银行账户。本文将详细介绍一个实用的出金流程：从币安（Binance）开始，经过Kraken Pro和Wise，最终将资金安全转入您的银行卡。</p><h2 id="1-币安（Binance）到Kraken-Pro"><a href="#1-币安（Binance）到Kraken-Pro" class="headerlink" title="1. 币安（Binance）到Kraken Pro"></a>1. 币安（Binance）到Kraken Pro</h2><h3 id="1-1-在币安完成准备工作"><a href="#1-1-在币安完成准备工作" class="headerlink" title="1.1 在币安完成准备工作"></a>1.1 在币安完成准备工作</h3><ul><li>确保您的币安账户已完成高级身份验证。</li><li>将您想要出金的加密货币（如BTC或USDT）准备就绪。</li></ul><h3 id="1-2-从币安转出到Kraken-Pro"><a href="#1-2-从币安转出到Kraken-Pro" class="headerlink" title="1.2 从币安转出到Kraken Pro"></a>1.2 从币安转出到Kraken Pro</h3><ul><li><p>在Kraken Pro上获取您的加密货币存款地址。<br>点击Protfolio，选择“Deposit”，然后选择您想要存入的币种，如BTC或USDT。</p><img src="/2024/10/06/%E5%B8%81%E5%9C%88%E5%87%BA%E9%87%91%E6%95%99%E7%A8%8B%EF%BC%9A%E4%BB%8E%E4%BA%A4%E6%98%93%E6%89%80%E5%AE%89%E5%85%A8%E8%BD%AC%E8%B4%A6%E5%88%B0%E9%93%B6%E8%A1%8C%E5%8D%A1/1.png" class="" width="488"> </li><li><p>注意：不管你是选择的那个网络，转账的网络一定要与这个相同，可以选择一个费用比较便宜的网络，这个费用要看你转账的交易所的费率。</p><img src="/2024/10/06/%E5%B8%81%E5%9C%88%E5%87%BA%E9%87%91%E6%95%99%E7%A8%8B%EF%BC%9A%E4%BB%8E%E4%BA%A4%E6%98%93%E6%89%80%E5%AE%89%E5%85%A8%E8%BD%AC%E8%B4%A6%E5%88%B0%E9%93%B6%E8%A1%8C%E5%8D%A1/2.png" class="" width="488"></li><li><p>复制地址去你的交易所(binance,okx或其他)提现。</p><img src="/2024/10/06/%E5%B8%81%E5%9C%88%E5%87%BA%E9%87%91%E6%95%99%E7%A8%8B%EF%BC%9A%E4%BB%8E%E4%BA%A4%E6%98%93%E6%89%80%E5%AE%89%E5%85%A8%E8%BD%AC%E8%B4%A6%E5%88%B0%E9%93%B6%E8%A1%8C%E5%8D%A1/3.png" class="" width="488"></li><li><p>在币安上发起提现，将加密货币转到Kraken Pro地址。</p> <img src="/2024/10/06/%E5%B8%81%E5%9C%88%E5%87%BA%E9%87%91%E6%95%99%E7%A8%8B%EF%BC%9A%E4%BB%8E%E4%BA%A4%E6%98%93%E6%89%80%E5%AE%89%E5%85%A8%E8%BD%AC%E8%B4%A6%E5%88%B0%E9%93%B6%E8%A1%8C%E5%8D%A1/4.png" class="" width="488"></li><li><p>注意选择正确的网络，以避免转账失败或额外费用。</p> <img src="/2024/10/06/%E5%B8%81%E5%9C%88%E5%87%BA%E9%87%91%E6%95%99%E7%A8%8B%EF%BC%9A%E4%BB%8E%E4%BA%A4%E6%98%93%E6%89%80%E5%AE%89%E5%85%A8%E8%BD%AC%E8%B4%A6%E5%88%B0%E9%93%B6%E8%A1%8C%E5%8D%A1/5.png" class="" width="488"></li><li><p>填写提现金额，并确认信息无误后提交。</p> <img src="/2024/10/06/%E5%B8%81%E5%9C%88%E5%87%BA%E9%87%91%E6%95%99%E7%A8%8B%EF%BC%9A%E4%BB%8E%E4%BA%A4%E6%98%93%E6%89%80%E5%AE%89%E5%85%A8%E8%BD%AC%E8%B4%A6%E5%88%B0%E9%93%B6%E8%A1%8C%E5%8D%A1/6.png" class="" width="488"></li></ul><h2 id="2-在Kraken-Pro操作"><a href="#2-在Kraken-Pro操作" class="headerlink" title="2. 在Kraken Pro操作"></a>2. 在Kraken Pro操作</h2><h3 id="2-1-完成Kraken-Pro的身份验证"><a href="#2-1-完成Kraken-Pro的身份验证" class="headerlink" title="2.1 完成Kraken Pro的身份验证"></a>2.1 完成Kraken Pro的身份验证</h3><ul><li>如果还未完成，请完成Kraken Pro的KYC流程。</li><li>验证可能包括提供身份证件、地址证明等。</li></ul><h3 id="2-2-将加密货币兑换为法币，发起提现到Wise"><a href="#2-2-将加密货币兑换为法币，发起提现到Wise" class="headerlink" title="2.2 将加密货币兑换为法币，发起提现到Wise"></a>2.2 将加密货币兑换为法币，发起提现到Wise</h3><ul><li><p>在Kraken Pro上将收到的加密货币卖出成您想要提取的法币（需要换成欧元，欧元不容易被wise封账号，其他货币存在被封账户风险）。</p></li><li><p>点击中间的交易按钮</p><img src="/2024/10/06/%E5%B8%81%E5%9C%88%E5%87%BA%E9%87%91%E6%95%99%E7%A8%8B%EF%BC%9A%E4%BB%8E%E4%BA%A4%E6%98%93%E6%89%80%E5%AE%89%E5%85%A8%E8%BD%AC%E8%B4%A6%E5%88%B0%E9%93%B6%E8%A1%8C%E5%8D%A1/7.png" class="" width="488"></li><li><p>交易对选择USDT&#x2F;EUR,将usdt换成欧元。</p><img src="/2024/10/06/%E5%B8%81%E5%9C%88%E5%87%BA%E9%87%91%E6%95%99%E7%A8%8B%EF%BC%9A%E4%BB%8E%E4%BA%A4%E6%98%93%E6%89%80%E5%AE%89%E5%85%A8%E8%BD%AC%E8%B4%A6%E5%88%B0%E9%93%B6%E8%A1%8C%E5%8D%A1/8.png" class="" width="488"></li><li><p>点击Profilo，选择“Withdrawal”</p><img src="/2024/10/06/%E5%B8%81%E5%9C%88%E5%87%BA%E9%87%91%E6%95%99%E7%A8%8B%EF%BC%9A%E4%BB%8E%E4%BA%A4%E6%98%93%E6%89%80%E5%AE%89%E5%85%A8%E8%BD%AC%E8%B4%A6%E5%88%B0%E9%93%B6%E8%A1%8C%E5%8D%A1/9.png" class="" width="488"></li><li><p>选择刚换的欧元去提现。</p><img src="/2024/10/06/%E5%B8%81%E5%9C%88%E5%87%BA%E9%87%91%E6%95%99%E7%A8%8B%EF%BC%9A%E4%BB%8E%E4%BA%A4%E6%98%93%E6%89%80%E5%AE%89%E5%85%A8%E8%BD%AC%E8%B4%A6%E5%88%B0%E9%93%B6%E8%A1%8C%E5%8D%A1/10.png" class="" width="488"></li><li><p>填写提现金额，选择银行(这里的银行就是wise)</p><img src="/2024/10/06/%E5%B8%81%E5%9C%88%E5%87%BA%E9%87%91%E6%95%99%E7%A8%8B%EF%BC%9A%E4%BB%8E%E4%BA%A4%E6%98%93%E6%89%80%E5%AE%89%E5%85%A8%E8%BD%AC%E8%B4%A6%E5%88%B0%E9%93%B6%E8%A1%8C%E5%8D%A1/11.png" class="" width="488"></li></ul><h3 id="2-3-添加Wise账户信息"><a href="#2-3-添加Wise账户信息" class="headerlink" title="2.3 添加Wise账户信息"></a>2.3 添加Wise账户信息</h3><ul><li><p>在Kraken Pro的提现设置中添加您的Wise账户信息。</p><img src="/2024/10/06/%E5%B8%81%E5%9C%88%E5%87%BA%E9%87%91%E6%95%99%E7%A8%8B%EF%BC%9A%E4%BB%8E%E4%BA%A4%E6%98%93%E6%89%80%E5%AE%89%E5%85%A8%E8%BD%AC%E8%B4%A6%E5%88%B0%E9%93%B6%E8%A1%8C%E5%8D%A1/12.png" class="" width="488"></li><li><p>填写账号的描述信息，如“Kraken Pro出金到银行卡”</p><img src="/2024/10/06/%E5%B8%81%E5%9C%88%E5%87%BA%E9%87%91%E6%95%99%E7%A8%8B%EF%BC%9A%E4%BB%8E%E4%BA%A4%E6%98%93%E6%89%80%E5%AE%89%E5%85%A8%E8%BD%AC%E8%B4%A6%E5%88%B0%E9%93%B6%E8%A1%8C%E5%8D%A1/13.png" class="" width="488"></li><li><p>填写银行地址，可以到wise的欧元账户详情中查看</p><img src="/2024/10/06/%E5%B8%81%E5%9C%88%E5%87%BA%E9%87%91%E6%95%99%E7%A8%8B%EF%BC%9A%E4%BB%8E%E4%BA%A4%E6%98%93%E6%89%80%E5%AE%89%E5%85%A8%E8%BD%AC%E8%B4%A6%E5%88%B0%E9%93%B6%E8%A1%8C%E5%8D%A1/14.png" class="" width="488"></li><li><p>点击wise的欧元账户</p><img src="/2024/10/06/%E5%B8%81%E5%9C%88%E5%87%BA%E9%87%91%E6%95%99%E7%A8%8B%EF%BC%9A%E4%BB%8E%E4%BA%A4%E6%98%93%E6%89%80%E5%AE%89%E5%85%A8%E8%BD%AC%E8%B4%A6%E5%88%B0%E9%93%B6%E8%A1%8C%E5%8D%A1/15.png" class="" width="488"></li><li><p>点击进入查看账户的详细信息</p><img src="/2024/10/06/%E5%B8%81%E5%9C%88%E5%87%BA%E9%87%91%E6%95%99%E7%A8%8B%EF%BC%9A%E4%BB%8E%E4%BA%A4%E6%98%93%E6%89%80%E5%AE%89%E5%85%A8%E8%BD%AC%E8%B4%A6%E5%88%B0%E9%93%B6%E8%A1%8C%E5%8D%A1/16.png" class="" width="488"></li><li><p>复制您的银行名字和地址，注意复制进入后，需要把银行名称wise去掉</p><img src="/2024/10/06/%E5%B8%81%E5%9C%88%E5%87%BA%E9%87%91%E6%95%99%E7%A8%8B%EF%BC%9A%E4%BB%8E%E4%BA%A4%E6%98%93%E6%89%80%E5%AE%89%E5%85%A8%E8%BD%AC%E8%B4%A6%E5%88%B0%E9%93%B6%E8%A1%8C%E5%8D%A1/17.png" class="" width="488"></li><li><p>粘贴地址，注意删除银行名称wise</p><img src="/2024/10/06/%E5%B8%81%E5%9C%88%E5%87%BA%E9%87%91%E6%95%99%E7%A8%8B%EF%BC%9A%E4%BB%8E%E4%BA%A4%E6%98%93%E6%89%80%E5%AE%89%E5%85%A8%E8%BD%AC%E8%B4%A6%E5%88%B0%E9%93%B6%E8%A1%8C%E5%8D%A1/18.png" class="" width="488"></li><li><p>删除后，点击next.</p><img src="/2024/10/06/%E5%B8%81%E5%9C%88%E5%87%BA%E9%87%91%E6%95%99%E7%A8%8B%EF%BC%9A%E4%BB%8E%E4%BA%A4%E6%98%93%E6%89%80%E5%AE%89%E5%85%A8%E8%BD%AC%E8%B4%A6%E5%88%B0%E9%93%B6%E8%A1%8C%E5%8D%A1/19.png" class="" width="488"></li><li><p>填写银行名称</p><img src="/2024/10/06/%E5%B8%81%E5%9C%88%E5%87%BA%E9%87%91%E6%95%99%E7%A8%8B%EF%BC%9A%E4%BB%8E%E4%BA%A4%E6%98%93%E6%89%80%E5%AE%89%E5%85%A8%E8%BD%AC%E8%B4%A6%E5%88%B0%E9%93%B6%E8%A1%8C%E5%8D%A1/20.png" class="" width="488"></li><li><p>填写BIC,可到wise的欧元账户详情中复制</p><img src="/2024/10/06/%E5%B8%81%E5%9C%88%E5%87%BA%E9%87%91%E6%95%99%E7%A8%8B%EF%BC%9A%E4%BB%8E%E4%BA%A4%E6%98%93%E6%89%80%E5%AE%89%E5%85%A8%E8%BD%AC%E8%B4%A6%E5%88%B0%E9%93%B6%E8%A1%8C%E5%8D%A1/21.png" class="" width="488"></li><li><p>填写IBAN,可到wise的欧元账户详情中复制</p><img src="/2024/10/06/%E5%B8%81%E5%9C%88%E5%87%BA%E9%87%91%E6%95%99%E7%A8%8B%EF%BC%9A%E4%BB%8E%E4%BA%A4%E6%98%93%E6%89%80%E5%AE%89%E5%85%A8%E8%BD%AC%E8%B4%A6%E5%88%B0%E9%93%B6%E8%A1%8C%E5%8D%A1/22.png" class="" width="488"></li><li><p>核对账户名字，确认无误后点击next.下一步确定完信息即可完成转账银行信息填写。</p><img src="/2024/10/06/%E5%B8%81%E5%9C%88%E5%87%BA%E9%87%91%E6%95%99%E7%A8%8B%EF%BC%9A%E4%BB%8E%E4%BA%A4%E6%98%93%E6%89%80%E5%AE%89%E5%85%A8%E8%BD%AC%E8%B4%A6%E5%88%B0%E9%93%B6%E8%A1%8C%E5%8D%A1/23.png" class="" width="488"> </li><li><p>确认转账，大概几分钟就能到账。这里扣了0.9欧手续费(人民币：6.93)</p><img src="/2024/10/06/%E5%B8%81%E5%9C%88%E5%87%BA%E9%87%91%E6%95%99%E7%A8%8B%EF%BC%9A%E4%BB%8E%E4%BA%A4%E6%98%93%E6%89%80%E5%AE%89%E5%85%A8%E8%BD%AC%E8%B4%A6%E5%88%B0%E9%93%B6%E8%A1%8C%E5%8D%A1/24.png" class="" width="488"></li></ul><h2 id="3-Wise操作"><a href="#3-Wise操作" class="headerlink" title="3. Wise操作"></a>3. Wise操作</h2><h3 id="3-1-接收资金"><a href="#3-1-接收资金" class="headerlink" title="3.1 接收资金"></a>3.1 接收资金</h3><ul><li>等待资金从Kraken Pro转入您的Wise账户，这可能需要几分钟。</li><li>收到资金后，在Wise平台上确认金额是否正确。</li></ul><h3 id="3-2-转账到您的银行卡"><a href="#3-2-转账到您的银行卡" class="headerlink" title="3.2 转账到您的银行卡"></a>3.2 转账到您的银行卡</h3><ul><li><p>在Wise上选择将资金转账到您的本地银行账户。</p></li><li><p>点击汇款按钮。</p><img src="/2024/10/06/%E5%B8%81%E5%9C%88%E5%87%BA%E9%87%91%E6%95%99%E7%A8%8B%EF%BC%9A%E4%BB%8E%E4%BA%A4%E6%98%93%E6%89%80%E5%AE%89%E5%85%A8%E8%BD%AC%E8%B4%A6%E5%88%B0%E9%93%B6%E8%A1%8C%E5%8D%A1/25.png" class="" width="488"></li><li><p>选择汇款账户</p><img src="/2024/10/06/%E5%B8%81%E5%9C%88%E5%87%BA%E9%87%91%E6%95%99%E7%A8%8B%EF%BC%9A%E4%BB%8E%E4%BA%A4%E6%98%93%E6%89%80%E5%AE%89%E5%85%A8%E8%BD%AC%E8%B4%A6%E5%88%B0%E9%93%B6%E8%A1%8C%E5%8D%A1/26.png" class="" width="488"></li><li><p>没有收款人，点击添加收款人。</p><img src="/2024/10/06/%E5%B8%81%E5%9C%88%E5%87%BA%E9%87%91%E6%95%99%E7%A8%8B%EF%BC%9A%E4%BB%8E%E4%BA%A4%E6%98%93%E6%89%80%E5%AE%89%E5%85%A8%E8%BD%AC%E8%B4%A6%E5%88%B0%E9%93%B6%E8%A1%8C%E5%8D%A1/27.png" class="" width="488"></li><li><p>选择币种CNY，点击输入您的银行详细信息。</p><img src="/2024/10/06/%E5%B8%81%E5%9C%88%E5%87%BA%E9%87%91%E6%95%99%E7%A8%8B%EF%BC%9A%E4%BB%8E%E4%BA%A4%E6%98%93%E6%89%80%E5%AE%89%E5%85%A8%E8%BD%AC%E8%B4%A6%E5%88%B0%E9%93%B6%E8%A1%8C%E5%8D%A1/28.png" class="" width="488"></li><li><p>填写收款人姓名(需要用拼音，且姓与名之间需要加空格，中文提示字符无效)</p><img src="/2024/10/06/%E5%B8%81%E5%9C%88%E5%87%BA%E9%87%91%E6%95%99%E7%A8%8B%EF%BC%9A%E4%BB%8E%E4%BA%A4%E6%98%93%E6%89%80%E5%AE%89%E5%85%A8%E8%BD%AC%E8%B4%A6%E5%88%B0%E9%93%B6%E8%A1%8C%E5%8D%A1/29.png" class="" width="488"></li><li><p>确定转账信息，扣了4.88欧手续费(人民币：37.59)</p><img src="/2024/10/06/%E5%B8%81%E5%9C%88%E5%87%BA%E9%87%91%E6%95%99%E7%A8%8B%EF%BC%9A%E4%BB%8E%E4%BA%A4%E6%98%93%E6%89%80%E5%AE%89%E5%85%A8%E8%BD%AC%E8%B4%A6%E5%88%B0%E9%93%B6%E8%A1%8C%E5%8D%A1/30.png" class="" width="488"></li><li><p>账港币到香港的手续费最低,只要1.08欧(人民币：8.32)</p><img src="/2024/10/06/%E5%B8%81%E5%9C%88%E5%87%BA%E9%87%91%E6%95%99%E7%A8%8B%EF%BC%9A%E4%BB%8E%E4%BA%A4%E6%98%93%E6%89%80%E5%AE%89%E5%85%A8%E8%BD%AC%E8%B4%A6%E5%88%B0%E9%93%B6%E8%A1%8C%E5%8D%A1/31.png" class="" width="488"></li><li><p>完成转账操作，资金通常会在几分钟内到达您的银行账户。</p></li></ul><h2 id="4-注意事项"><a href="#4-注意事项" class="headerlink" title="4. 注意事项"></a>4. 注意事项</h2><ol><li><p><strong>费用考虑</strong>：整个过程中会涉及多次转账和兑换，注意累计的手续费。</p></li><li><p><strong>汇率波动</strong>：从加密货币兑换到最终提现可能会经历一定时间，注意汇率变化。</p></li><li><p><strong>税务合规</strong>：不同国家对加密货币交易和出金有不同的税务要求，请咨询专业税务顾问。</p></li><li><p><strong>安全第一</strong>：在整个过程中，始终使用强密码和双因素认证，警惕任何形式的诈骗。</p></li><li><p><strong>保留记录</strong>：详细记录每一步操作，包括交易ID、金额、时间等，以备将来可能的审计需要。</p></li><li><p><strong>了解限制</strong>：熟悉您所在国家关于加密货币的法规，以及银行对大额转账的政策。</p></li><li><p><strong>分批操作</strong>：如果金额较大，考虑分多次小额转账，以降低风险和可能的审查。</p></li></ol><p>通过遵循这个币安 &gt; Kraken Pro &gt; Wise &gt; 银行卡的路径，您可以相对安全、高效地完成加密货币的出金过程。记住，在加密货币世界中，安全和谨慎永远是首要考虑。如果在任何步骤遇到问题，不要犹豫联系相关平台的客户支持寻求帮助。</p>]]></content>
    
    
    <categories>
      
      <category>加密货币</category>
      
    </categories>
    
    
    <tags>
      
      <tag>比特币</tag>
      
      <tag>出金</tag>
      
      <tag>币安</tag>
      
      <tag>Kraken Pro</tag>
      
      <tag>Wise</tag>
      
      <tag>银行转账</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>将Vue和Node.js系统迁移到Cloudflare：全面指南</title>
    <link href="/2024/10/06/%E5%B0%86Vue%E5%92%8CNode-js%E7%B3%BB%E7%BB%9F%E8%BF%81%E7%A7%BB%E5%88%B0Cloudflare%EF%BC%9A%E5%85%A8%E9%9D%A2%E6%8C%87%E5%8D%97/"/>
    <url>/2024/10/06/%E5%B0%86Vue%E5%92%8CNode-js%E7%B3%BB%E7%BB%9F%E8%BF%81%E7%A7%BB%E5%88%B0Cloudflare%EF%BC%9A%E5%85%A8%E9%9D%A2%E6%8C%87%E5%8D%97/</url>
    
    <content type="html"><![CDATA[<p>在当今的云计算时代，将现有系统迁移到强大的云平台已成为许多企业的首选策略。Cloudflare作为一个全球性的云网络平台，提供了卓越的性能、安全性和可扩展性。本文将指导您如何将一个由Vue.js前端、Node.js后端和Vue.js管理后台组成的系统迁移到Cloudflare。</p><h2 id="1-为什么选择Cloudflare"><a href="#1-为什么选择Cloudflare" class="headerlink" title="1. 为什么选择Cloudflare?"></a>1. 为什么选择Cloudflare?</h2><p>在开始迁移过程之前，让我们先了解为什么Cloudflare是一个理想的选择：</p><ul><li>全球CDN网络，显著提升网站加载速度</li><li>强大的DDoS保护和Web应用防火墙(WAF)</li><li>边缘计算能力，通过Cloudflare Workers</li><li>灵活的存储解决方案，如Cloudflare R2</li><li>简单易用的DNS管理</li><li>免费SSL证书</li></ul><h2 id="2-迁移Vue-js前端"><a href="#2-迁移Vue-js前端" class="headerlink" title="2. 迁移Vue.js前端"></a>2. 迁移Vue.js前端</h2><h3 id="2-1-准备工作"><a href="#2-1-准备工作" class="headerlink" title="2.1 准备工作"></a>2.1 准备工作</h3><ol><li>确保您的Vue.js项目使用最新版本，并且所有依赖都已更新。</li><li>运行全面的测试，确保应用在本地环境中正常运行。</li></ol><h3 id="2-2-部署到Cloudflare-Pages"><a href="#2-2-部署到Cloudflare-Pages" class="headerlink" title="2.2 部署到Cloudflare Pages"></a>2.2 部署到Cloudflare Pages</h3><p>Cloudflare Pages是一个极佳的静态网站托管服务，非常适合Vue.js应用。</p><ol><li>在Cloudflare Dashboard中创建一个新的Pages项目。</li><li>连接您的GitHub或GitLab仓库。</li><li>配置构建设置：<ul><li>框架预设: <code>Vue</code></li><li>构建命令: <code>npm run build</code></li><li>输出目录: <code>dist</code></li><li>Node.js 版本: 选择与您本地开发环境相匹配的版本</li><li>环境变量: 如果您的应用需要环境变量，可以在 Cloudflare Pages 的项目设置中添加</li><li>构建缓存: 默认启用，可以显著提高构建速度</li><li>自动部署: 每次推送到主分支时自动触发部署</li></ul></li><li>部署您的应用。</li></ol><p>为确保Cloudflare使用与您本地项目相同的Node.js版本，请按照以下步骤操作：</p><ol><li><p>确定您本地项目使用的Node.js版本：</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-keyword">node</span> <span class="hljs-title">--version</span><br></code></pre></td></tr></table></figure></li><li><p>在项目根目录创建或修改<code>package.json</code>文件，添加或更新<code>engines</code>字段：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;engines&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;node&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;16.x&quot;</span>  <span class="hljs-comment">// 替换为您实际使用的版本</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure></li><li><p>在项目根目录创建<code>.nvmrc</code>文件，指定Node.js版本：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-number">16</span><span class="hljs-selector-class">.x</span>  <span class="hljs-comment">// 替换为您实际使用的版本</span><br></code></pre></td></tr></table></figure></li><li><p>如果使用Cloudflare Workers，在<code>wrangler.toml</code>文件中指定Node.js兼容性日期：</p><figure class="highlight toml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs toml"><span class="hljs-attr">compatibility_date</span> = <span class="hljs-string">&quot;2023-10-30&quot;</span>  // 使用适当的日期<br></code></pre></td></tr></table></figure></li><li><p>更新依赖：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">rm</span> -rf node_modules<br>npm install  <span class="hljs-comment"># 或者 yarn install，如果您使用yarn</span><br></code></pre></td></tr></table></figure></li></ol><p>完成这些步骤后，Cloudflare应该会使用您指定的Node.js版本来部署您的项目。</p><h3 id="2-3-配置自定义域名"><a href="#2-3-配置自定义域名" class="headerlink" title="2.3 配置自定义域名"></a>2.3 配置自定义域名</h3><ol><li>在Cloudflare Pages项目设置中添加您的自定义域名。</li><li>更新DNS记录，将域名指向Cloudflare Pages。</li></ol><h2 id="3-迁移Node-js后端"><a href="#3-迁移Node-js后端" class="headerlink" title="3. 迁移Node.js后端"></a>3. 迁移Node.js后端</h2><h3 id="3-1-准备工作"><a href="#3-1-准备工作" class="headerlink" title="3.1 准备工作"></a>3.1 准备工作</h3><ol><li>审查您的Node.js应用，确保它是无状态的，适合在无服务器环境中运行。</li><li>将任何本地文件存储迁移到云存储解决方案，如Cloudflare R2。</li></ol><h3 id="3-2-使用Cloudflare-Workers部署后端"><a href="#3-2-使用Cloudflare-Workers部署后端" class="headerlink" title="3.2 使用Cloudflare Workers部署后端"></a>3.2 使用Cloudflare Workers部署后端</h3><ol><li>安装Wrangler CLI工具: <code>npm install -g wrangler</code></li><li>初始化一个新的Workers项目: <code>wrangler init my-api</code></li><li>将您的Node.js代码调整为Workers兼容的格式。</li></ol><h2 id="4-迁移图片到Cloudflare-R2"><a href="#4-迁移图片到Cloudflare-R2" class="headerlink" title="4. 迁移图片到Cloudflare R2"></a>4. 迁移图片到Cloudflare R2</h2><p>在迁移过程中，处理静态资源（如图片）是一个重要步骤。Cloudflare提供了R2存储服务，这是一个理想的解决方案。以下是将图片迁移到Cloudflare R2的步骤：</p><h3 id="4-1-设置Cloudflare-R2"><a href="#4-1-设置Cloudflare-R2" class="headerlink" title="4.1 设置Cloudflare R2"></a>4.1 设置Cloudflare R2</h3><ol><li>登录到Cloudflare仪表板。</li><li>在侧边栏中，点击”R2”。</li><li>创建一个新的存储桶，例如”my-images”。</li></ol><h3 id="4-2-上传图片到R2"><a href="#4-2-上传图片到R2" class="headerlink" title="4.2 上传图片到R2"></a>4.2 上传图片到R2</h3><p>有几种方法可以上传图片到R2：</p><p>a. 使用Cloudflare仪表板：</p><ul><li>在R2界面中，选择您的存储桶。</li><li>点击”上传”按钮，然后选择您要上传的图片。</li></ul><p>b. 使用wrangler CLI：</p><ul><li>安装wrangler: <code>npm install -g wrangler</code></li><li>配置wrangler: <code>wrangler login</code></li><li>上传文件: <code>wrangler r2 object put my-images/image.jpg --file ./path/to/image.jpg</code></li></ul><p>c. 使用API或SDK：</p><ul><li>您可以使用Cloudflare的API或各种语言的SDK来编程式上传图片。</li></ul><h3 id="4-3-更新Vue-js前端"><a href="#4-3-更新Vue-js前端" class="headerlink" title="4.3 更新Vue.js前端"></a>4.3 更新Vue.js前端</h3><p>更新Vue.js组件以使用R2中的图片：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;img :src=&quot;imageUrl&quot; alt=&quot;My Image&quot;&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>export default &#123;<br>  data() &#123;<br>    return &#123;<br>      imageUrl: &#x27;/api/images/image.jpg&#x27;<br>    &#125;<br>  &#125;<br>&#125;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><h3 id="4-4-更新Node-js后端"><a href="#4-4-更新Node-js后端" class="headerlink" title="4.4 更新Node.js后端"></a>4.4 更新Node.js后端</h3><p>在Node.js后端添加一个路由来处理图片请求：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> &#123; <span class="hljs-variable constant_">R2</span> &#125; = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;@cloudflare/workers-types&#x27;</span>);<br><br><span class="hljs-comment">// 假设您已经设置了R2客户端</span><br><span class="hljs-keyword">const</span> r2Client = <span class="hljs-keyword">new</span> <span class="hljs-title function_">R2</span>(<span class="hljs-string">&#x27;my-images&#x27;</span>);<br><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">getImage</span>(<span class="hljs-params">req, res</span>) &#123;<br>  <span class="hljs-keyword">const</span> imageName = req.<span class="hljs-property">params</span>.<span class="hljs-property">imageName</span>;<br>  <span class="hljs-keyword">const</span> object = <span class="hljs-keyword">await</span> r2Client.<span class="hljs-title function_">get</span>(imageName);<br>  <br>  <span class="hljs-keyword">if</span> (object === <span class="hljs-literal">null</span>) &#123;<br>    res.<span class="hljs-title function_">status</span>(<span class="hljs-number">404</span>).<span class="hljs-title function_">send</span>(<span class="hljs-string">&#x27;Image not found&#x27;</span>);<br>    <span class="hljs-keyword">return</span>;<br>  &#125;<br><br>  res.<span class="hljs-title function_">set</span>(<span class="hljs-string">&#x27;Content-Type&#x27;</span>, object.<span class="hljs-property">httpMetadata</span>.<span class="hljs-property">contentType</span>);<br>  res.<span class="hljs-title function_">send</span>(<span class="hljs-keyword">await</span> object.<span class="hljs-title function_">arrayBuffer</span>());<br>&#125;<br><br><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = &#123; getImage &#125;;<br></code></pre></td></tr></table></figure><h3 id="4-5-配置Cloudflare-Workers"><a href="#4-5-配置Cloudflare-Workers" class="headerlink" title="4.5 配置Cloudflare Workers"></a>4.5 配置Cloudflare Workers</h3><p>如果使用Cloudflare Workers托管Node.js后端，需要配置Workers来访问R2。首先，更新<code>wrangler.toml</code>文件：</p><figure class="highlight toml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs toml"><span class="hljs-attr">name</span> = <span class="hljs-string">&quot;my-api&quot;</span><br><span class="hljs-attr">type</span> = <span class="hljs-string">&quot;javascript&quot;</span><br><span class="hljs-attr">account_id</span> = <span class="hljs-string">&quot;&lt;your-account-id&gt;&quot;</span><br><span class="hljs-attr">workers_dev</span> = <span class="hljs-literal">true</span><br><br><span class="hljs-section">[[r2_buckets]]</span><br><span class="hljs-attr">binding</span> = <span class="hljs-string">&quot;MY_BUCKET&quot;</span><br><span class="hljs-attr">bucket_name</span> = <span class="hljs-string">&quot;my-images&quot;</span><br></code></pre></td></tr></table></figure><p>然后，在Worker中处理图片请求：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;<br>  <span class="hljs-keyword">async</span> <span class="hljs-title function_">fetch</span>(<span class="hljs-params">request, env</span>) &#123;<br>    <span class="hljs-comment">// ... 其他路由逻辑 ...</span><br><br>    <span class="hljs-keyword">if</span> (url.<span class="hljs-property">pathname</span>.<span class="hljs-title function_">startsWith</span>(<span class="hljs-string">&#x27;/api/images/&#x27;</span>)) &#123;<br>      <span class="hljs-keyword">const</span> imageName = url.<span class="hljs-property">pathname</span>.<span class="hljs-title function_">split</span>(<span class="hljs-string">&#x27;/&#x27;</span>).<span class="hljs-title function_">pop</span>();<br>      <span class="hljs-keyword">const</span> object = <span class="hljs-keyword">await</span> env.<span class="hljs-property">MY_BUCKET</span>.<span class="hljs-title function_">get</span>(imageName);<br>      <br>      <span class="hljs-keyword">if</span> (object === <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Response</span>(<span class="hljs-string">&#x27;Image not found&#x27;</span>, &#123; <span class="hljs-attr">status</span>: <span class="hljs-number">404</span> &#125;);<br>      &#125;<br><br>      <span class="hljs-keyword">const</span> headers = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Headers</span>();<br>      object.<span class="hljs-title function_">writeHttpMetadata</span>(headers);<br>      headers.<span class="hljs-title function_">set</span>(<span class="hljs-string">&#x27;etag&#x27;</span>, object.<span class="hljs-property">httpEtag</span>);<br><br>      <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Response</span>(object.<span class="hljs-property">body</span>, &#123;<br>        headers,<br>      &#125;);<br>    &#125;<br><br>    <span class="hljs-comment">// ... 其他路由逻辑 ...</span><br>  &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><h3 id="4-6-更新文章中的图片引用"><a href="#4-6-更新文章中的图片引用" class="headerlink" title="4.6 更新文章中的图片引用"></a>4.6 更新文章中的图片引用</h3><p>最后，更新Markdown文件中的图片引用，使用R2的URL：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">![<span class="hljs-string">Vue.js Logo</span>](<span class="hljs-link">https://&lt;your-account-id&gt;.r2.cloudflarestorage.com/my-images/vuejs-logo.png</span>)<br></code></pre></td></tr></table></figure><p>通过这些步骤，您可以成功地将图片迁移到Cloudflare R2，并在您的Vue.js前端和Node.js后端中使用它们。这种方法不仅可以提高您的网站性能，还可以降低存储和带宽成本。</p><h2 id="5-结论"><a href="#5-结论" class="headerlink" title="5. 结论"></a>5. 结论</h2><p>将Vue.js和Node.js系统迁移到Cloudflare是一个强大的升级，可以显著提升您的应用性能、安全性和可扩展性。通过遵循本指南中的步骤，您可以顺利完成迁移过程，充分利用Cloudflare的优势。记住，迁移是一个渐进的过程，需要仔细规划和测试。祝您迁移成功！</p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Cloudflare</tag>
      
      <tag>Vue.js</tag>
      
      <tag>Node.js</tag>
      
      <tag>云迁移</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在Ubuntu上安装KasmVNC实现轻松远程桌面访问</title>
    <link href="/2024/10/04/%E5%9C%A8Ubuntu%E4%B8%8A%E5%AE%89%E8%A3%85KasmVNC%E5%AE%9E%E7%8E%B0%E8%BD%BB%E9%87%8F%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E8%AE%BF%E9%97%AE/"/>
    <url>/2024/10/04/%E5%9C%A8Ubuntu%E4%B8%8A%E5%AE%89%E8%A3%85KasmVNC%E5%AE%9E%E7%8E%B0%E8%BD%BB%E9%87%8F%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E8%AE%BF%E9%97%AE/</url>
    
    <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>远程访问Ubuntu桌面环境对于系统管理员和远程工作者来说是一项重要功能。本文将介绍如何在Ubuntu系统上安装和配置KasmVNC,这是一个现代化的VNC服务器,能够提供流畅、安全的远程桌面体验。</p><h2 id="KasmVNC简介"><a href="#KasmVNC简介" class="headerlink" title="KasmVNC简介"></a>KasmVNC简介</h2><p>KasmVNC是一个基于TigerVNC的改进版本,专为云原生和现代web技术设计。它提供了更好的性能、安全性和用户体验。</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>在开始安装KasmVNC之前,我们需要完成一些准备工作:</p><h3 id="1-远程登录SSH"><a href="#1-远程登录SSH" class="headerlink" title="1. 远程登录SSH"></a>1. 远程登录SSH</h3><p>如果您是在远程操作Ubuntu服务器,首先需要通过SSH登录。在终端中输入以下命令:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh user@server_ip<br></code></pre></td></tr></table></figure><p>如果需要保持连接,可以使用以下命令:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh  -o ServerAliveInterval=60 -o ServerAliveCountMax=120 user@server_ip<br></code></pre></td></tr></table></figure><p>如果有指定端口,可以使用以下命令:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh -p 22 user@server_ip<br></code></pre></td></tr></table></figure><h3 id="2-更新系统"><a href="#2-更新系统" class="headerlink" title="2. 更新系统"></a>2. 更新系统</h3><p>首先,确保您的Ubuntu系统是:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt update<br>sudo apt upgrade<br></code></pre></td></tr></table></figure><h3 id="3-检查系统版本"><a href="#3-检查系统版本" class="headerlink" title="3. 检查系统版本"></a>3. 检查系统版本</h3><p>在安装KasmVNC之前，我们需要确认当前Ubuntu系统的版本。运行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">lsb_release -a<br></code></pre></td></tr></table></figure><p>这将显示您的Ubuntu版本信息，包括发行版本号和代号。请记下这些信息，因为在后续步骤中选择KasmVNC版本时会用到。<br>执行后比如显示如下信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">No LSB modules are available.<br>Distributor ID: Ubuntu<br>Description:    Ubuntu 22.04.3 LTS<br>Release:        22.04<br>Codename:       jammy<br></code></pre></td></tr></table></figure><h3 id="4-检查系统架构"><a href="#4-检查系统架构" class="headerlink" title="4. 检查系统架构"></a>4. 检查系统架构</h3><p>接下来，我们需要确认系统的架构。运行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">uname</span> -m<br></code></pre></td></tr></table></figure><p>这将显示系统的架构信息。常见的输出有：</p><ul><li><code>x86_64</code>：64位系统</li><li><code>i686</code> 或 <code>i386</code>：32位系统</li><li><code>aarch64</code>：64位ARM架构</li></ul><p>请记下这个信息，因为在选择KasmVNC安装包时需要用到。</p><h3 id="5-安装必要的依赖"><a href="#5-安装必要的依赖" class="headerlink" title="5. 安装必要的依赖"></a>5. 安装必要的依赖</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install -y curl<br></code></pre></td></tr></table></figure><h2 id="安装KasmVNC"><a href="#安装KasmVNC" class="headerlink" title="安装KasmVNC"></a>安装KasmVNC</h2><h3 id="1-下载KasmVNC"><a href="#1-下载KasmVNC" class="headerlink" title="1. 下载KasmVNC"></a>1. 下载KasmVNC</h3><p>根据您的Ubuntu版本和系统架构，从KasmVNC的GitHub发布页面下载适当的安装包。以下是不同Ubuntu版本的选择指南（使用最新版本v1.3.2）：</p><ul><li><p>对于Ubuntu 22.04 (Jammy Jellyfish):</p><ul><li>64位x86系统（<code>x86_64</code>）：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget https://github.com/kasmtech/KasmVNC/releases/download/v1.3.2/kasmvncserver_jammy_1.3.2_amd64.deb<br></code></pre></td></tr></table></figure></li><li>64位ARM架构（<code>aarch64</code>）：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget https://github.com/kasmtech/KasmVNC/releases/download/v1.3.2/kasmvncserver_jammy_1.3.2_arm64.deb<br></code></pre></td></tr></table></figure></li></ul></li><li><p>对于Ubuntu 20.04 (Focal Fossa):</p><ul><li>64位x86系统（<code>x86_64</code>）：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget https://github.com/kasmtech/KasmVNC/releases/download/v1.3.2/kasmvncserver_focal_1.3.2_amd64.deb<br></code></pre></td></tr></table></figure></li><li>64位ARM架构（<code>aarch64</code>）：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget https://github.com/kasmtech/KasmVNC/releases/download/v1.3.2/kasmvncserver_focal_1.3.2_arm64.deb<br></code></pre></td></tr></table></figure></li></ul></li><li><p>对于Ubuntu 24.04 (Noble Numbat):</p><ul><li>64位x86系统（<code>x86_64</code>）：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget https://github.com/kasmtech/KasmVNC/releases/download/v1.3.2/kasmvncserver_noble_1.3.2_amd64.deb<br></code></pre></td></tr></table></figure></li><li>64位ARM架构（<code>aarch64</code>）：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget https://github.com/kasmtech/KasmVNC/releases/download/v1.3.2/kasmvncserver_noble_1.3.2_arm64.deb<br></code></pre></td></tr></table></figure></li></ul></li></ul><p>请注意，您可以在 <a href="https://github.com/kasmtech/KasmVNC/releases">KasmVNC的GitHub发布页面</a> 查看最新版本号和可用的包。</p><p>如果您不确定您的Ubuntu版本，可以使用之前运行的 <code>lsb_release -a</code> 命令的输出结果来选择正确的包。</p><h3 id="2-安装KasmVNC"><a href="#2-安装KasmVNC" class="headerlink" title="2. 安装KasmVNC"></a>2. 安装KasmVNC</h3><p>首先，下载 KasmVNC 安装包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget https://github.com/kasmtech/KasmVNC/releases/download/v1.3.2/kasmvncserver_jammy_1.3.2_amd64.deb<br></code></pre></td></tr></table></figure><p>然后，使用 dpkg 命令安装下载的 .deb 包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo dpkg -i kasmvncserver_jammy_1.3.2_amd64.deb<br></code></pre></td></tr></table></figure><p>注意：尽管我们下载的是 1.3.2 版本，但安装后显示的版本可能仍然是 1.2.0-1。这可能是因为包的内部版本号没有更新。不过，只要安装过程没有报错，通常就意味着安装成功了。</p><p>如果安装过程中出现依赖问题，可以运行以下命令解决：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt --fix-broken install<br></code></pre></td></tr></table></figure><p>安装完成后，我们可以检查 KasmVNC 的版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">dpkg -s kasmvncserver | grep Version<br></code></pre></td></tr></table></figure><p>这个命令会显示已安装的 KasmVNC 包的版本。</p><h3 id="3-配置KasmVNC"><a href="#3-配置KasmVNC" class="headerlink" title="3. 配置KasmVNC"></a>3. 配置KasmVNC</h3><p>安装完成后，我们需要配置KasmVNC：</p><ol><li>检查 KasmVNC 版本：</li></ol><p>由于 <code>kasmvncserver --version</code> 命令可能不会直接显示版本信息，我们可以使用以下方法来查看 KasmVNC 的版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">dpkg -s kasmvncserver | grep Version<br></code></pre></td></tr></table></figure><p>这个命令会显示已安装的 KasmVNC 包的版本。</p><ol start="2"><li>初始化 KasmVNC 配置：</li></ol><p>运行以下命令来初始化 KasmVNC 配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">kasmvncserver<br></code></pre></td></tr></table></figure><p>在首次运行这个命令时，您会看到以下提示：</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">Creating default config /root/.vnc/kasmvnc.yaml<br>xauth:  file /root/.Xauthority does not exist<br><br><span class="hljs-keyword">In</span> <span class="hljs-keyword">order</span> <span class="hljs-title">to</span> control your desktop, you need a KasmVNC <span class="hljs-keyword">user</span> <span class="hljs-title">with</span> <span class="hljs-keyword">write</span><br>permissions. Select what action to take:<br><br>[<span class="hljs-number">1</span>] Create a new <span class="hljs-keyword">user</span> <span class="hljs-title">with</span> <span class="hljs-keyword">write</span> access<br>[<span class="hljs-number">2</span>] <span class="hljs-literal">Start</span> KasmVNC without a <span class="hljs-keyword">user</span> <span class="hljs-title">with</span> <span class="hljs-keyword">write</span> access<br></code></pre></td></tr></table></figure><p>选择选项 [1] 来创建一个具有写入权限的新用户。这将确保您有足够的权限来控制桌面。</p><p>创建用户后，您会看到类似以下的输出：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-keyword">New</span> <span class="hljs-string">&#x27;US706980102097:1 (root)&#x27;</span> desktop is US706980102097:<span class="hljs-number">1</span><br><br>Users configured:<br>root (can use keyboard and mouse)<br><br>Log <span class="hljs-keyword">file</span> is <span class="hljs-regexp">/root/</span>.vnc/US706980102097:<span class="hljs-number">1</span>.log<br><br>Creating <span class="hljs-keyword">default</span> startup script <span class="hljs-regexp">/root/</span>.vnc/xstartup<br>Starting applications specified in <span class="hljs-regexp">/root/</span>.vnc/xstartup<br><br>Paste <span class="hljs-keyword">this</span> url in your browser:<br>https:<span class="hljs-comment">//127.0.1.1:8444</span><br></code></pre></td></tr></table></figure><p>这个输出提供了几个重要的信息：</p><ul><li>KasmVNC 已成功创建了一个新的桌面会话。</li><li>日志文件的位置：<code>/root/.vnc/US706980102097:1.log</code></li><li>默认的启动脚本位置：<code>/root/.vnc/xstartup</code></li><li>访问 KasmVNC 的 URL：<code>https://127.0.1.1:8444</code></li></ul><p>在大多数情况下，这个默认配置已经足够使用，您可以直接尝试访问 KasmVNC。</p><ol start="3"><li>（可选）编辑KasmVNC配置文件：</li></ol><p>如果您需要自定义配置，例如更改监听端口或IP地址，可以编辑配置文件：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">sudo nano <span class="hljs-regexp">/etc/</span>kasmvnc/kasmvnc.yaml<br></code></pre></td></tr></table></figure><p>在配置文件中，更新以下设置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">http:</span><br>  <span class="hljs-attr">listen:</span> <span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span><span class="hljs-string">:8444</span><br></code></pre></td></tr></table></figure><p>这将允许KasmVNC在所有网络接口上监听8444端口。</p><ol start="4"><li>管理KasmVNC会话：</li></ol><p>安装完成后，KasmVNC 通常不会作为系统服务运行，而是以用户会话的形式运行。要查看当前运行的 VNC 会话，可以使用以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vncserver -list<br></code></pre></td></tr></table></figure><p>如果没有运行中的会话，您会看到类似这样的输出：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">No</span> VNC <span class="hljs-keyword">server</span> running <span class="hljs-keyword">for</span> this <span class="hljs-keyword">user</span>.<br></code></pre></td></tr></table></figure><p>要启动一个新的 KasmVNC 会话，可以使用以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vncserver<br></code></pre></td></tr></table></figure><p>这将启动一个新的 VNC 会话并显示会话信息，包括访问 URL。</p><p>如果您想停止某个特定的 VNC 会话，可以使用以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vncserver -<span class="hljs-built_in">kill</span> :1<br></code></pre></td></tr></table></figure><p>这里的 <code>:1</code> 是会话号，您可以根据 <code>vncserver -list</code> 的输出来确定要停止的会话号。</p><ol start="5"><li>（可选）配置KasmVNC自启动：</li></ol><p>如果您希望 KasmVNC 在系统启动时自动运行，可以创建一个系统服务。创建文件 <code>/etc/systemd/system/kasmvnc.service</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo nano /etc/systemd/system/kasmvnc.service<br></code></pre></td></tr></table></figure><p>添加以下内容：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[Unit]</span><br><span class="hljs-attr">Description</span>=KasmVNC Server<br><span class="hljs-attr">After</span>=network.target<br><br><span class="hljs-section">[Service]</span><br><span class="hljs-attr">Type</span>=forking<br><span class="hljs-attr">User</span>=your_username<br><span class="hljs-attr">ExecStart</span>=/usr/bin/vncserver<br><span class="hljs-attr">ExecStop</span>=/usr/bin/vncserver -kill :<span class="hljs-number">1</span><br><br><span class="hljs-section">[Install]</span><br><span class="hljs-attr">WantedBy</span>=multi-user.target<br></code></pre></td></tr></table></figure><p>请将 <code>your_username</code> 替换为您的实际用户名。</p><p>然后，启用并启动服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo systemctl <span class="hljs-built_in">enable</span> kasmvnc.service<br>sudo systemctl start kasmvnc.service<br></code></pre></td></tr></table></figure><p>现在，KasmVNC 将在系统启动时自动运行。</p><ol start="6"><li>配置SSL证书：</li></ol><p>如果您遇到 “&#x2F;etc&#x2F;ssl&#x2F;private&#x2F;ssl-cert-snakeoil.key: certificate file doesn’t exist or isn’t a file” 错误，这意味着KasmVNC无法找到默认的SSL证书。您可以通过以下步骤生成一个自签名证书：</p><p>a. 安装ssl-cert包（如果尚未安装）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install ssl-cert<br></code></pre></td></tr></table></figure><p>b. 生成自签名证书：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo make-ssl-cert generate-default-snakeoil --force-overwrite<br></code></pre></td></tr></table></figure><p>c. 确保KasmVNC有权限访问这些文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo <span class="hljs-built_in">chmod</span> 644 /etc/ssl/certs/ssl-cert-snakeoil.pem<br>sudo <span class="hljs-built_in">chmod</span> 640 /etc/ssl/private/ssl-cert-snakeoil.key<br>sudo <span class="hljs-built_in">chown</span> root:ssl-cert /etc/ssl/private/ssl-cert-snakeoil.key<br></code></pre></td></tr></table></figure><p>d. 将您的用户添加到ssl-cert组：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo usermod -a -G ssl-cert <span class="hljs-variable">$USER</span><br></code></pre></td></tr></table></figure><p>e. 重新登录以使组更改生效，或者运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">newgrp ssl-cert<br></code></pre></td></tr></table></figure><p>f. 重新启动KasmVNC服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">vncserver -<span class="hljs-built_in">kill</span> :1<br>vncserver<br></code></pre></td></tr></table></figure><p>这些步骤应该解决SSL证书的问题，允许KasmVNC正常启动和运行。</p><h2 id="开启端口访问"><a href="#开启端口访问" class="headerlink" title="开启端口访问"></a>开启端口访问</h2><p>为了能从外部网络访问 KasmVNC您需要确保服务器的防火墙允许 KasmVNC 使用的端口（默认为 8444）。这通常涉及两个层面的配置：操作系统级别和云服务提供商级别（如果适用）。</p><h3 id="操作系统级别（使用-UFW）"><a href="#操作系统级别（使用-UFW）" class="headerlink" title="操作系统级别（使用 UFW）"></a>操作系统级别（使用 UFW）</h3><ol><li>检查 UFW 状态：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo ufw status<br></code></pre></td></tr></table></figure><p>如果 UFW 未启用，请启用它：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo ufw <span class="hljs-built_in">enable</span><br></code></pre></td></tr></table></figure><ol start="2"><li>开启端口 8444：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo ufw allow 8444<br></code></pre></td></tr></table></figure><ol start="3"><li>重新加载 UFW 规则：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo ufw reload<br></code></pre></td></tr></table></figure><h3 id="云服务提供商级别"><a href="#云服务提供商级别" class="headerlink" title="云服务提供商级别"></a>云服务提供商级别</h3><p>如果您使用的是云服务提供商（如 AWS、Oracle Cloud、Google Cloud Platform 等），您还需要在云平台的安全组或防火墙规则中允许相应的端口访问。</p><h4 id="AWS-EC2-实例"><a href="#AWS-EC2-实例" class="headerlink" title="AWS EC2 实例"></a>AWS EC2 实例</h4><ol><li>登录 AWS 控制台</li><li>导航到 EC2 服务</li><li>选择您的实例，然后点击”安全”标签</li><li>点击安全组名称</li><li>在”入站规则”标签中，点击”编辑入站规则”</li><li>添加一条新规则：<ul><li>类型：自定义 TCP</li><li>端口范围：8444</li><li>来源据您的需求选择（例如，”任何位置”或特定 IP 地址）</li></ul></li><li>保存规则</li></ol><h4 id="Oracle-Cloud"><a href="#Oracle-Cloud" class="headerlink" title="Oracle Cloud"></a>Oracle Cloud</h4><ol><li>登录 Oracle Cloud 控制台</li><li>导航到”网络”&gt;”虚拟云网络”</li><li>选择您的 VCN，然后点击相应的安全列表</li><li>点击”添加入站规则”</li><li>添加以下规：<ul><li>源 CIDR：0.0.0.0&#x2F;0（或您指定的 IP 范围）</li><li>IP 协议：TCP</li><li>目标端口范围：8444</li></ul></li><li>点击”添加入站规则”保存</li></ol><h4 id="Google-Cloud-Platform"><a href="#Google-Cloud-Platform" class="headerlink" title="Google Cloud Platform"></a>Google Cloud Platform</h4><ol><li>登录 Google Cloud Console</li><li>导航到”VPC 网络”&gt;”防火墙”</li><li>点击”创建防火墙规则”</li><li>填写以下信息：<ul><li>名称：允许-kasmvnc（或其他描述性名称）</li><li>网络：选择您的 VPC 网络</li><li>优先级：1000（或您希望的优先级）</li><li>方向：入站</li><li>动作：允许</li><li>目标：网络中的所有实例（或选择特定标记）</li><li>来源 IP 范围：0.0.0.0&#x2F;0（或您指定的 IP 范围）</li><li>协议和端口：指定的协议和端口 &gt; TCP:8444</li></ul></li><li>点击”创建”保存规则</li></ol><p>请注意，以上步骤可能会随着云服务提供商界面的更新而略有变化。始终建议参考最新的官方文档来进行具体操作。</p><p>完成这些步骤后，KasmVNC 应该可以从外部网络访问了。请记住，出于安全考虑，建尽可能限制访问来源，只允许必要 IP 地或范围访问 KasmVNC 端口。</p><h2 id="访问KasmVNC"><a href="#访问KasmVNC" class="headerlink" title="访问KasmVNC"></a>访问KasmVNC</h2><p>现在，您可以通过Web浏览器访问KasmVNC：</p><ol><li>在浏览器中输入：<code>https://your_server_ip:8444</code></li><li>接受自签名证书的警告（如果出现）</li><li>输入之前设置的VNC密码</li></ol><h2 id="配置桌面环境"><a href="#配置桌面环境" class="headerlink" title="配置桌面环境"></a>配置桌面环境</h2><p>在成功连接到 KasmVNC 后，您可能会发现只能看到一个黑色窗口，而不是完整的 Ubuntu 桌面环境。这是因为我们还需要配置一个桌面环境来运行。以下是设置 GNOME 桌面环境的步骤：</p><h3 id="1-安装-GNOME-桌面环境"><a href="#1-安装-GNOME-桌面环境" class="headerlink" title="1. 安装 GNOME 桌面环境"></a>1. 安装 GNOME 桌面环境</h3><p>首先，我们需要安装 GNOME 桌面环境：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt update<br>sudo apt install ubuntu-desktop gnome-session gdm3<br></code></pre></td></tr></table></figure><p>这个命令会安装完整的 GNOME 桌面环境，包括所有常用的 GNOME 应用程序。</p><h3 id="2-配置-VNC-启动脚本"><a href="#2-配置-VNC-启动脚本" class="headerlink" title="2. 配置 VNC 启动脚本"></a>2. 配置 VNC 启动脚本</h3><p>编辑 VNC 的启动脚本文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nano ~/.vnc/xstartup<br></code></pre></td></tr></table></figure><p>将文件内容替换为以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-built_in">unset</span> SESSION_MANAGER<br><span class="hljs-built_in">unset</span> DBUS_SESSION_BUS_ADDRESS<br><span class="hljs-built_in">export</span> XKL_XMODMAP_DISABLE=1<br><span class="hljs-built_in">export</span> XDG_SESSION_TYPE=x11<br><span class="hljs-built_in">export</span> GDK_BACKEND=x11<br><br>gnome-session &amp;<br></code></pre></td></tr></table></figure><p>保存并退出编辑器（在 nano 中，按 Ctrl+X，然后按 Y，最后按 Enter）。</p><h3 id="3-设置执行权限"><a href="#3-设置执行权限" class="headerlink" title="3. 设置执行权限"></a>3. 设置执行权限</h3><p>确保启动脚本有执行权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chmod</span> +x ~/.vnc/xstartup<br></code></pre></td></tr></table></figure><h3 id="4-重启-VNC-服务"><a href="#4-重启-VNC-服务" class="headerlink" title="4. 重启 VNC 服务"></a>4. 重启 VNC 服务</h3><p>停止当前运行的 VNC 会话（如果有的话）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vncserver -<span class="hljs-built_in">kill</span> :1<br></code></pre></td></tr></table></figure><p>然后启动一个新的会话：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vncserver<br></code></pre></td></tr></table></figure><h3 id="5-重新连接"><a href="#5-重新连接" class="headerlink" title="5. 重新连接"></a>5. 重新连接</h3><p>现在，重新使用您的 VNC 客户端或网页浏览器连接到 KasmVNC。这次，您应该能看到完整的 GNOME 桌面环境了。</p><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ul><li>GNOME 桌面环境比 Xfce4 更消耗资源。请确保您的服务器有足够的 CPU 和内存来运行 GNOME。</li><li>如果在启动桌面环境时遇到问题，可以查看 VNC 日志文件（通常位于 <code>~/.vnc/</code> 目录下）以获取更多信息。</li><li>某些 GNOME 功能可能在 VNC 环境中不能完全正常工作。如果遇到问题，可以尝试使用 GNOME Classic 会话，这通常更适合远程桌面使用。</li></ul><p>通过以上步骤，您应该能够在 KasmVNC 中看到并操作完整的 GNOME 桌面环境了。</p><h2 id="安装-Google-Chrome"><a href="#安装-Google-Chrome" class="headerlink" title="安装 Google Chrome"></a>安装 Google Chrome</h2><p>为了提供更好的浏览体验，我们将直接安装 Google Chrome。以下是安装步骤：</p><ol><li>首先，更新系统包列表：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt update<br></code></pre></td></tr></table></figure><ol start="2"><li>安装必要的依赖：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install wget dpkg<br></code></pre></td></tr></table></figure><ol start="3"><li>下载最新的 Google Chrome .deb 包：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb<br></code></pre></td></tr></table></figure><ol start="4"><li>安装 Chrome：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo dpkg -i google-chrome-stable_current_amd64.deb<br></code></pre></td></tr></table></figure><ol start="5"><li>如果在安装过程中出现依赖问题，运行以下命令来解决：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt --fix-broken install<br></code></pre></td></tr></table></figure><ol start="6"><li>安装完成后，您可以从应用程序菜单中启动 Chrome，或者使用以下命令从终端启动：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">google-chrome-stable<br></code></pre></td></tr></table></figure><ol start="7"><li>在远程桌面环境中使用 Chrome 时，可能需要添加 <code>--no-sandbox</code> 参数来禁用沙盒模式。创建一个桌面快捷方式，使用以下命令启动 Chrome：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">google-chrome-stable --no-sandbox<br></code></pre></td></tr></table></figure><p>注意：禁用沙盒可能会降低浏览器的安全性，所以在使用这个选项时要格外小心。</p><ol start="8"><li>如果您希望将 Chrome 设置为默认浏览器，可以在 GNOME 桌面上点击 “Activities” &gt; “Settings” &gt; “Default Applications”，然后在 “Web” 部分选择 Google Chrome。</li></ol><h2 id="故障排除"><a href="#故障排除" class="headerlink" title="故障排除"></a>故障排除</h2><p>如果在使用 Chrome 时遇到问题，请尝试以下步骤：</p><ol><li>确保 DISPLAY 环境变量设置正确：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-variable">$DISPLAY</span><br></code></pre></td></tr></table></figure><p>如果没有输出或输出不正确，设置它：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> DISPLAY=:1<br></code></pre></td></tr></table></figure><ol start="2"><li>检查 Chrome 是否能从终端启动：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">google-chrome-stable --no-sandbox<br></code></pre></td></tr></table></figure><ol start="3"><li><p>如果遇到 “Missing X server or $DISPLAY” 错误，请尝试以下步骤：</p><p>a. 确保 X11 转发已启用。如果您是通过 SSH 连接的，请使用 <code>-X</code> 参数：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh -X user@server_ip<br></code></pre></td></tr></table></figure><p>b. 安装 xauth 包（如果尚未安装）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install xauth<br></code></pre></td></tr></table></figure><p>c. 确保 .Xauthority 文件存在且权限正确：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">touch</span> ~/.Xauthority<br><span class="hljs-built_in">chmod</span> 600 ~/.Xauthority<br></code></pre></td></tr></table></figure><p>d. 尝试使用 xvfb-run 来运行 Chrome：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install xvfb<br>xvfb-run google-chrome-stable --no-sandbox<br></code></pre></td></tr></table></figure></li><li><p>如果遇到 “cannot start document portal” 错误，请尝试以下步骤：</p><p>a. 设置 XDG_RUNTIME_DIR 环境变量：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> XDG_RUNTIME_DIR=<span class="hljs-string">&quot;/run/user/<span class="hljs-subst">$(id -u)</span>&quot;</span><br></code></pre></td></tr></table></figure><p>b. 创建必要的目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p <span class="hljs-variable">$XDG_RUNTIME_DIR</span>/doc<br></code></pre></td></tr></table></figure><p>c. 确保目录权限正确：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo <span class="hljs-built_in">chown</span> -R <span class="hljs-variable">$USER</span>:<span class="hljs-variable">$USER</span> <span class="hljs-variable">$XDG_RUNTIME_DIR</span><br></code></pre></td></tr></table></figure></li><li><p>检查 VNC 服务器是否正在运行：</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vncserver -list<br></code></pre></td></tr></table></figure><p>如果没有运行的会话，启动一个新会话：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vncserver<br></code></pre></td></tr></table></figure><ol start="6"><li>如果问题仍然存在，检查系统日志：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">journalctl -xe | grep chrome<br></code></pre></td></tr></table></figure><p>这将显示与 Chrome 相关的最近系统日志，可能会提供更多关于错误原因的线索。</p><p>通过以上步骤，您应该能够在 KasmVNC 的远程桌面环境中成功启动和使用 Google Chrome。如果仍然遇到问题，可能需要检查 KasmVNC 的配置，确保它正确地设置了 X 服务器环境。</p><h2 id="安全性考虑"><a href="#安全性考虑" class="headerlink" title="安全性考虑"></a>安全性考虑</h2><p>为了增强安全性，建议：</p><ol><li>配置防火墙，只允许特定IP访问8444端口</li><li>使用反向代理（如Nginx）并配置SSL&#x2F;TLS加密</li><li>启用两步验证</li></ol><h2 id="配置多用户访问"><a href="#配置多用户访问" class="headerlink" title="配置多用户访问"></a>配置多用户访问</h2><p>KasmVNC 支持多个用户同时登录使用。以下是配置多用户访问的步骤：</p><h3 id="1-创建多个用户并设置权限"><a href="#1-创建多个用户并设置权限" class="headerlink" title="1. 创建多个用户并设置权限"></a>1. 创建多个用户并设置权限</h3><p>首先，为每个需要访问的用户创建一个系统账户，并设置必要的权限：</p><ol><li>创建用户：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo adduser username<br></code></pre></td></tr></table></figure><p>将 <code>username</code> 替换为实际的用户名。按照提示设置密码和其他信息。</p><ol start="2"><li>为新用户添加 sudo 权限：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo usermod -aG sudo username<br></code></pre></td></tr></table></figure><ol start="3"><li>将新用户添加到 ssl-cert 组：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo usermod -aG ssl-cert username<br></code></pre></td></tr></table></figure><h3 id="2-为每个用户配置-VNC-会话"><a href="#2-为每个用户配置-VNC-会话" class="headerlink" title="2. 为每个用户配置 VNC 会话"></a>2. 为每个用户配置 VNC 会话</h3><p>对于每个用户，需要执行以下步骤：</p><p>a. 切换到该用户：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">su - username<br></code></pre></td></tr></table></figure><p>如果需要sudo权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo usermod -aG sudo username<br></code></pre></td></tr></table></figure><p>c. 创建 .vnc 目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p ~/.vnc<br></code></pre></td></tr></table></figure><p>d. 初始化 KasmVNC 配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">kasmvncserver<br></code></pre></td></tr></table></figure><p>按照提示设置 VNC 密码。</p><p>查看当前的 VNC 会话：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">kasmvncserver -list<br></code></pre></td></tr></table></figure><p>停止一个 VNC 会话：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 停止会话号为 1 的 VNC 会话,就是你刚才创建的，要看-list的输出</span><br>kasmvncserver -<span class="hljs-built_in">kill</span> :1<br></code></pre></td></tr></table></figure><p>c. 创建用户的 VNC 启动脚本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> &gt; ~/.vnc/xstartup &lt;&lt; <span class="hljs-string">&#x27;EOF&#x27;</span><br><span class="hljs-comment">#!/bin/bash</span><br><span class="hljs-built_in">unset</span> SESSION_MANAGER<br><span class="hljs-built_in">unset</span> DBUS_SESSION_BUS_ADDRESS<br><span class="hljs-built_in">export</span> XKL_XMODMAP_DISABLE=1<br><br>startxfce4 &amp;<br>EOF<br><br></code></pre></td></tr></table></figure><p>查看创建的 VNC 启动脚本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> ~/.vnc/xstartup<br></code></pre></td></tr></table></figure><p>启动 VNC 会话：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">kasmvncserver<br></code></pre></td></tr></table></figure><h1 id="启动-输入法"><a href="#启动-输入法" class="headerlink" title="启动 输入法"></a>启动 输入法</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">fcitx5 -d<br></code></pre></td></tr></table></figure><h1 id="添加执行权限"><a href="#添加执行权限" class="headerlink" title="添加执行权限"></a>添加执行权限</h1><p>chmod +x ~&#x2F;.vnc&#x2F;xstartup</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs clean">  <br><br>### <span class="hljs-number">3.</span> 配置不同的端口<br><br>为了避免端口冲突，我们需要为每个用户配置不同的端口。编辑 KasmVNC 配置文件：<br><br>```bash<br>sudo nano /etc/kasmvnc/kasmvnc.yaml<br></code></pre></td></tr></table></figure><p>为每个用户添加一个新的监听配置，例如：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">http:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">listen:</span> <span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span><span class="hljs-string">:8444</span>  <span class="hljs-comment"># 默认用户</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">listen:</span> <span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span><span class="hljs-string">:8445</span>  <span class="hljs-comment"># 用户1</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">listen:</span> <span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span><span class="hljs-string">:8446</span>  <span class="hljs-comment"># 用户2</span><br></code></pre></td></tr></table></figure><h3 id="4-重启-KasmVNC-服务"><a href="#4-重启-KasmVNC-服务" class="headerlink" title="4. 重启 KasmVNC 服务"></a>4. 重启 KasmVNC 服务</h3><p>对每个用户重新启动 VNC 服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">vncserver -<span class="hljs-built_in">kill</span> :1<br>vncserver<br></code></pre></td></tr></table></figure><h3 id="5-访问多用户-VNC"><a href="#5-访问多用户-VNC" class="headerlink" title="5. 访问多用户 VNC"></a>5. 访问多用户 VNC</h3><p>现在，不同的用户可以通过不同的 URL 访问各自的 VNC 会话：</p><ul><li>默认用户：<code>https://your_server_ip:8444</code></li><li>用户1：<code>https://your_server_ip:8445</code></li><li>用户2：<code>https://your_server_ip:8446</code></li></ul><h3 id="注意事项-1"><a href="#注意事项-1" class="headerlink" title="注意事项"></a>注意事项</h3><ul><li>确保为每个新端口在防火墙和云服务提供商的安全组中开放相应的访问权限。</li><li>每个用户会话都会消耗服务器资源，请确保服务器有足够的 CPU 和内存来支持多用户同时访问。</li><li>出于安全考虑，建议为每个用户设置强密码，并考虑使用 SSL&#x2F;TLS 加密连接。</li></ul><p>通过以上步骤，您可以实现多个用户同时登录并使用 KasmVNC 远程桌面。每个用户将拥有自己独立的桌面环境和会话。</p><h2 id="安装-Cursor-AI-代码编辑器"><a href="#安装-Cursor-AI-代码编辑器" class="headerlink" title="安装 Cursor AI 代码编辑器"></a>安装 Cursor AI 代码编辑器</h2><p>Cursor 是一个强大的 AI 辅助代码编辑器，可以帮助开发者提高编码效率。以下是在 Ubuntu 上安装 Cursor 的步骤：</p><ol><li>首先，确保您的系统是最新的：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt update &amp;&amp; sudo apt upgrade -y<br></code></pre></td></tr></table></figure><ol start="2"><li>安装必要的依赖：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install wget<br></code></pre></td></tr></table></figure><ol start="3"><li>下载最新版本的 Cursor .deb 包。您可以从 Cursor 的官方网站获取最新的下载链接。以下命令使用的是撰写本文时的最新版本，您可能需要根据实际情况更新链接：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget https://download.cursor.sh/linux/appimages/x64/Cursor-0.2.6.AppImage<br></code></pre></td></tr></table></figure><ol start="4"><li>将下载的 AppImage 文件移动到一个合适的位置，并赋予执行权限：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo <span class="hljs-built_in">mv</span> Cursor-0.2.6.AppImage /usr/local/bin/cursor<br>sudo <span class="hljs-built_in">chmod</span> +x /usr/local/bin/cursor<br></code></pre></td></tr></table></figure><ol start="5"><li>如何创建一个桌面快捷方式，以便在图形界面中启动 Cursor：</li></ol><p>要创建一个桌面快捷方式，请按照以下步骤操作：</p><ol><li><p>打开终端</p></li><li><p>使用文本编辑器（如 nano）创建并编辑 .desktop 文件：</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> &lt;&lt; <span class="hljs-string">EOF &gt; ~/.local/share/applications/cursor.desktop</span><br><span class="hljs-string">[Desktop Entry]</span><br><span class="hljs-string">Name=Cursor</span><br><span class="hljs-string">Exec=/usr/local/bin/cursor</span><br><span class="hljs-string">Icon=cursor</span><br><span class="hljs-string">Type=Application</span><br><span class="hljs-string">Categories=Development;</span><br><span class="hljs-string">EOF</span><br></code></pre></td></tr></table></figure><ol start="6"><li>现在，您可以通过命令行或桌面快捷方式启动 Cursor：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">cursor<br></code></pre></td></tr></table></figure><p>或者在应用程序菜单中找到 Cursor 图标并点击启动。</p><h3 id="注意事项-2"><a href="#注意事项-2" class="headerlink" title="注意事项"></a>注意事项</h3><ul><li>Cursor 需要一个有效的 OpenAI API 密钥才能使用其 AI 功能。请确保您有一个有效的 API 密钥，并在首次启动 Cursor 时按照提示进行配置。</li><li>如果您在远程桌面环境中使用 Cursor，可能需要确保您的 VNC 会话有足够的资源（CPU、内存）来运行它。</li><li>Cursor 是一个持续更新的软件，建议定期检查官方网站以获取最新版本。</li></ul><p>通过以上步骤，您应该能够在 Ubuntu 系统上成功安装和使用 Cursor AI 代码编辑器了。这将为您的远程开发环境增添一个强大的工具。</p><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>通过以上步骤，您已经成功在Ubuntu上安装和配置了KasmVNC。这为您提供了一个现代、高效的远程桌面解决方案。记得定期更新KasmVNC以获取最新的功能和安全补丁。</p><p>如果在安装或使用过程中遇到任何问题，可以查阅KasmVNC的官方文档或在其GitHub仓库中寻求帮助。</p>]]></content>
    
    
    <categories>
      
      <category>技术教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Ubuntu</tag>
      
      <tag>KasmVNC</tag>
      
      <tag>远程桌面</tag>
      
      <tag>Cursor</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何在AWS的s3存储桶上部署前端项目及通过CloudFront加速访问</title>
    <link href="/2024/09/05/%E5%A6%82%E4%BD%95%E5%9C%A8AWS%E7%9A%84s3%E5%AD%98%E5%82%A8%E6%A1%B6%E4%B8%8A%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE/"/>
    <url>/2024/09/05/%E5%A6%82%E4%BD%95%E5%9C%A8AWS%E7%9A%84s3%E5%AD%98%E5%82%A8%E6%A1%B6%E4%B8%8A%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE/</url>
    
    <content type="html"><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>作为一个前端开发者，我们经常需要将前端项目部署到服务器上，以便让别人访问。在本文中，我们将介绍如何在AWS的s3存储桶上部署前端项目。</p><h2 id="二、准备工作"><a href="#二、准备工作" class="headerlink" title="二、准备工作"></a>二、准备工作</h2><p>首先，你需要有一个AWS账号，并且需要创建一个s3存储桶。</p><h2 id="三、步骤"><a href="#三、步骤" class="headerlink" title="三、步骤"></a>三、步骤</h2><h3 id="1-登录AWS控制台，选择S3服务-存储桶，创建一个新的存储桶。"><a href="#1-登录AWS控制台，选择S3服务-存储桶，创建一个新的存储桶。" class="headerlink" title="1. 登录AWS控制台，选择S3服务-&gt;存储桶，创建一个新的存储桶。"></a>1. 登录AWS控制台，选择S3服务-&gt;存储桶，创建一个新的存储桶。</h3><p>   &nbsp;</p><img src="/2024/09/05/%E5%A6%82%E4%BD%95%E5%9C%A8AWS%E7%9A%84s3%E5%AD%98%E5%82%A8%E6%A1%B6%E4%B8%8A%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE/1.png" class="" width="488"><p>   &nbsp; </p><img src="/2024/09/05/%E5%A6%82%E4%BD%95%E5%9C%A8AWS%E7%9A%84s3%E5%AD%98%E5%82%A8%E6%A1%B6%E4%B8%8A%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE/2.png" class="" width="488"><p>   &nbsp;</p><img src="/2024/09/05/%E5%A6%82%E4%BD%95%E5%9C%A8AWS%E7%9A%84s3%E5%AD%98%E5%82%A8%E6%A1%B6%E4%B8%8A%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE/3.png" class="" width="488"><p>   &nbsp;</p><img src="/2024/09/05/%E5%A6%82%E4%BD%95%E5%9C%A8AWS%E7%9A%84s3%E5%AD%98%E5%82%A8%E6%A1%B6%E4%B8%8A%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE/4.png" class="" width="488"><p>   &nbsp;</p><h3 id="2-点击存储桶名称，进入存储桶的概览页面。"><a href="#2-点击存储桶名称，进入存储桶的概览页面。" class="headerlink" title="2. 点击存储桶名称，进入存储桶的概览页面。"></a>2. 点击存储桶名称，进入存储桶的概览页面。</h3><img src="/2024/09/05/%E5%A6%82%E4%BD%95%E5%9C%A8AWS%E7%9A%84s3%E5%AD%98%E5%82%A8%E6%A1%B6%E4%B8%8A%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE/5.png" class="" width="488"><p>&nbsp;</p><img src="/2024/09/05/%E5%A6%82%E4%BD%95%E5%9C%A8AWS%E7%9A%84s3%E5%AD%98%E5%82%A8%E6%A1%B6%E4%B8%8A%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE/6.png" class="" width="488"><p>&nbsp;</p><h3 id="3-点击“静态网站托管”选项卡，选择“开启静态网站托管”。"><a href="#3-点击“静态网站托管”选项卡，选择“开启静态网站托管”。" class="headerlink" title="3. 点击“静态网站托管”选项卡，选择“开启静态网站托管”。"></a>3. 点击“静态网站托管”选项卡，选择“开启静态网站托管”。</h3><img src="/2024/09/05/%E5%A6%82%E4%BD%95%E5%9C%A8AWS%E7%9A%84s3%E5%AD%98%E5%82%A8%E6%A1%B6%E4%B8%8A%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE/7.png" class="" width="488"><p>&nbsp;</p><img src="/2024/09/05/%E5%A6%82%E4%BD%95%E5%9C%A8AWS%E7%9A%84s3%E5%AD%98%E5%82%A8%E6%A1%B6%E4%B8%8A%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE/8.png" class="" width="488"><p>&nbsp;</p><img src="/2024/09/05/%E5%A6%82%E4%BD%95%E5%9C%A8AWS%E7%9A%84s3%E5%AD%98%E5%82%A8%E6%A1%B6%E4%B8%8A%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE/9.png" class="" width="488"><p>&nbsp;</p><h3 id="4-点击“静态网站托管”页面中的“Endpoint”链接，复制该链接。"><a href="#4-点击“静态网站托管”页面中的“Endpoint”链接，复制该链接。" class="headerlink" title="4. 点击“静态网站托管”页面中的“Endpoint”链接，复制该链接。"></a>4. 点击“静态网站托管”页面中的“Endpoint”链接，复制该链接。</h3><img src="/2024/09/05/%E5%A6%82%E4%BD%95%E5%9C%A8AWS%E7%9A%84s3%E5%AD%98%E5%82%A8%E6%A1%B6%E4%B8%8A%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE/10.png" class="" width="488"><p>&nbsp;</p><h3 id="5-点击权限，添加存储桶策略。"><a href="#5-点击权限，添加存储桶策略。" class="headerlink" title="5.点击权限，添加存储桶策略。"></a>5.点击权限，添加存储桶策略。</h3><p>策略内容：</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs prolog">&#123;<br>    <span class="hljs-string">&quot;Version&quot;</span>: <span class="hljs-string">&quot;2012-10-17&quot;</span>,<br>    <span class="hljs-string">&quot;Statement&quot;</span>: [<br>        &#123;<br>            <span class="hljs-string">&quot;Sid&quot;</span>: <span class="hljs-string">&quot;PublicRead&quot;</span>,<br>            <span class="hljs-string">&quot;Effect&quot;</span>: <span class="hljs-string">&quot;Allow&quot;</span>,<br>            <span class="hljs-string">&quot;Principal&quot;</span>: <span class="hljs-string">&quot;*&quot;</span>,<br>            <span class="hljs-string">&quot;Action&quot;</span>: [<br>                <span class="hljs-string">&quot;s3:GetObject&quot;</span>,<br>                <span class="hljs-string">&quot;s3:GetObjectVersion&quot;</span><br>            ],<br>            <span class="hljs-string">&quot;Resource&quot;</span>: <span class="hljs-string">&quot;arn:aws:s3:::dist2024/*&quot;</span><br>        &#125;<br>    ]<br>&#125;<br></code></pre></td></tr></table></figure><div class="note note-warning @title">            <ul><li>注意：请将dist2024替换为你自己的s3存储桶名称。</li></ul>          </div><img src="/2024/09/05/%E5%A6%82%E4%BD%95%E5%9C%A8AWS%E7%9A%84s3%E5%AD%98%E5%82%A8%E6%A1%B6%E4%B8%8A%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE/11.png" class="" width="488"><p>&nbsp;</p><img src="/2024/09/05/%E5%A6%82%E4%BD%95%E5%9C%A8AWS%E7%9A%84s3%E5%AD%98%E5%82%A8%E6%A1%B6%E4%B8%8A%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE/12.png" class="" width="488"><p>  &nbsp;</p><h3 id="6-打开你本地的前端项目文件夹，找到“dist”文件夹，将其中的所有文件上传到s3存储桶的根目录。"><a href="#6-打开你本地的前端项目文件夹，找到“dist”文件夹，将其中的所有文件上传到s3存储桶的根目录。" class="headerlink" title="6. 打开你本地的前端项目文件夹，找到“dist”文件夹，将其中的所有文件上传到s3存储桶的根目录。"></a>6. 打开你本地的前端项目文件夹，找到“dist”文件夹，将其中的所有文件上传到s3存储桶的根目录。</h3><p>&nbsp;</p><img src="/2024/09/05/%E5%A6%82%E4%BD%95%E5%9C%A8AWS%E7%9A%84s3%E5%AD%98%E5%82%A8%E6%A1%B6%E4%B8%8A%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE/13.png" class="" width="488"><p>&nbsp;</p><img src="/2024/09/05/%E5%A6%82%E4%BD%95%E5%9C%A8AWS%E7%9A%84s3%E5%AD%98%E5%82%A8%E6%A1%B6%E4%B8%8A%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE/14.png" class="" width="488"><p>&nbsp;</p><img src="/2024/09/05/%E5%A6%82%E4%BD%95%E5%9C%A8AWS%E7%9A%84s3%E5%AD%98%E5%82%A8%E6%A1%B6%E4%B8%8A%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE/15.png" class="" width="488"><div class="note note-warning @title">            <ul><li>注意：上传的方式可以采用上面的手动上传方式，也可以通过gitlab自动编译部署。可以参考我的另一篇文章《如何使用gitlab-ci部署前端项目》。</li></ul>          </div><h3 id="7-打开浏览器，输入刚才复制的Endpoint链接，即可访问你的前端项目。"><a href="#7-打开浏览器，输入刚才复制的Endpoint链接，即可访问你的前端项目。" class="headerlink" title="7. 打开浏览器，输入刚才复制的Endpoint链接，即可访问你的前端项目。"></a>7. 打开浏览器，输入刚才复制的Endpoint链接，即可访问你的前端项目。</h3><h2 id="四、通过CloudFront加速访问-绑定自己的域名"><a href="#四、通过CloudFront加速访问-绑定自己的域名" class="headerlink" title="四、通过CloudFront加速访问,绑定自己的域名"></a>四、通过CloudFront加速访问,绑定自己的域名</h2><p>如果需要通过CloudFront加速访问，可以绑定自己的域名。</p><h3 id="1-登录AWS控制台，选择CloudFront服务-创建Distribution。"><a href="#1-登录AWS控制台，选择CloudFront服务-创建Distribution。" class="headerlink" title="1. 登录AWS控制台，选择CloudFront服务-&gt;创建Distribution。"></a>1. 登录AWS控制台，选择CloudFront服务-&gt;创建Distribution。</h3><img src="/2024/09/05/%E5%A6%82%E4%BD%95%E5%9C%A8AWS%E7%9A%84s3%E5%AD%98%E5%82%A8%E6%A1%B6%E4%B8%8A%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE/16.png" class="" width="488"><p>&nbsp;</p><img src="/2024/09/05/%E5%A6%82%E4%BD%95%E5%9C%A8AWS%E7%9A%84s3%E5%AD%98%E5%82%A8%E6%A1%B6%E4%B8%8A%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE/17.png" class="" width="488"><p>&nbsp;</p><img src="/2024/09/05/%E5%A6%82%E4%BD%95%E5%9C%A8AWS%E7%9A%84s3%E5%AD%98%E5%82%A8%E6%A1%B6%E4%B8%8A%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE/18.png" class="" width="488"><p>&nbsp;</p><h3 id="2-添加域名和证书"><a href="#2-添加域名和证书" class="headerlink" title="2. 添加域名和证书"></a>2. 添加域名和证书</h3><p>&nbsp;</p><img src="/2024/09/05/%E5%A6%82%E4%BD%95%E5%9C%A8AWS%E7%9A%84s3%E5%AD%98%E5%82%A8%E6%A1%B6%E4%B8%8A%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE/19.png" class="" width="488"><p>&nbsp;</p><img src="/2024/09/05/%E5%A6%82%E4%BD%95%E5%9C%A8AWS%E7%9A%84s3%E5%AD%98%E5%82%A8%E6%A1%B6%E4%B8%8A%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE/20.png" class="" width="488"><p>&nbsp;<br>去域名服务商购买域名，并配置DNS解析。添加一条CNAME记录。<br>&nbsp;</p><img src="/2024/09/05/%E5%A6%82%E4%BD%95%E5%9C%A8AWS%E7%9A%84s3%E5%AD%98%E5%82%A8%E6%A1%B6%E4%B8%8A%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE/21.png" class="" width="488"><p>&nbsp;</p><img src="/2024/09/05/%E5%A6%82%E4%BD%95%E5%9C%A8AWS%E7%9A%84s3%E5%AD%98%E5%82%A8%E6%A1%B6%E4%B8%8A%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE/22.png" class="" width="488"><p>&nbsp;<br>选择创建的证书<br>&nbsp;</p><img src="/2024/09/05/%E5%A6%82%E4%BD%95%E5%9C%A8AWS%E7%9A%84s3%E5%AD%98%E5%82%A8%E6%A1%B6%E4%B8%8A%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE/23.png" class="" width="488"><h3 id="3-完成创建后，添加域名解析到CloudFront的域名。"><a href="#3-完成创建后，添加域名解析到CloudFront的域名。" class="headerlink" title="3. 完成创建后，添加域名解析到CloudFront的域名。"></a>3. 完成创建后，添加域名解析到CloudFront的域名。</h3><p>&nbsp;</p><img src="/2024/09/05/%E5%A6%82%E4%BD%95%E5%9C%A8AWS%E7%9A%84s3%E5%AD%98%E5%82%A8%E6%A1%B6%E4%B8%8A%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE/24.png" class="" width="488"><p>&nbsp;</p><img src="/2024/09/05/%E5%A6%82%E4%BD%95%E5%9C%A8AWS%E7%9A%84s3%E5%AD%98%E5%82%A8%E6%A1%B6%E4%B8%8A%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE/25.png" class="" width="488"><h2 id="五、如何清除CloudFront缓存"><a href="#五、如何清除CloudFront缓存" class="headerlink" title="五、如何清除CloudFront缓存"></a>五、如何清除CloudFront缓存</h2><p>在我们更新完项目后，需要清楚CloudFront缓存，让用户看到最新的内容。<br>登录AWS控制台，选择CloudFront服务-&gt;选择你的分发-&gt;失效-&gt;创建失效。</p><p>&nbsp;</p><img src="/2024/09/05/%E5%A6%82%E4%BD%95%E5%9C%A8AWS%E7%9A%84s3%E5%AD%98%E5%82%A8%E6%A1%B6%E4%B8%8A%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE/26.png" class="" width="488"><p>&nbsp;</p><img src="/2024/09/05/%E5%A6%82%E4%BD%95%E5%9C%A8AWS%E7%9A%84s3%E5%AD%98%E5%82%A8%E6%A1%B6%E4%B8%8A%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE/27.png" class="" width="488"><h2 id="六、如何用CloudFront加速后端应用"><a href="#六、如何用CloudFront加速后端应用" class="headerlink" title="六、如何用CloudFront加速后端应用"></a>六、如何用CloudFront加速后端应用</h2><p>如果你的前端项目和后端应用部署在不同的服务器上，可以用CloudFront加速后端应用。</p><h3 id="1-登录AWS控制台，选择CloudFront服务-创建Distribution。-1"><a href="#1-登录AWS控制台，选择CloudFront服务-创建Distribution。-1" class="headerlink" title="1. 登录AWS控制台，选择CloudFront服务-&gt;创建Distribution。"></a>1. 登录AWS控制台，选择CloudFront服务-&gt;创建Distribution。</h3><p>添加源站，填写后端服务器的域名：比如api.example.com,确保通过<a href="https://api.example.com可以访问到后端应用./">https://api.example.com可以访问到后端应用。</a><br>&nbsp;</p><img src="/2024/09/05/%E5%A6%82%E4%BD%95%E5%9C%A8AWS%E7%9A%84s3%E5%AD%98%E5%82%A8%E6%A1%B6%E4%B8%8A%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE/28.png" class="" width="488"><p>&nbsp;</p><img src="/2024/09/05/%E5%A6%82%E4%BD%95%E5%9C%A8AWS%E7%9A%84s3%E5%AD%98%E5%82%A8%E6%A1%B6%E4%B8%8A%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE/29.png" class="" width="488"><p>&nbsp;</p><img src="/2024/09/05/%E5%A6%82%E4%BD%95%E5%9C%A8AWS%E7%9A%84s3%E5%AD%98%E5%82%A8%E6%A1%B6%E4%B8%8A%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE/30.png" class="" width="488"><p>&nbsp;</p><h3 id="2-配置域名和证书"><a href="#2-配置域名和证书" class="headerlink" title="2.配置域名和证书"></a>2.配置域名和证书</h3><p>&nbsp;<br>为这个新域名创建https证书，并绑定到CloudFront。</p><img src="/2024/09/05/%E5%A6%82%E4%BD%95%E5%9C%A8AWS%E7%9A%84s3%E5%AD%98%E5%82%A8%E6%A1%B6%E4%B8%8A%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE/33.png" class="" width="488"><img src="/2024/09/05/%E5%A6%82%E4%BD%95%E5%9C%A8AWS%E7%9A%84s3%E5%AD%98%E5%82%A8%E6%A1%B6%E4%B8%8A%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE/34.png" class="" width="488"><p>&nbsp;</p><img src="/2024/09/05/%E5%A6%82%E4%BD%95%E5%9C%A8AWS%E7%9A%84s3%E5%AD%98%E5%82%A8%E6%A1%B6%E4%B8%8A%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE/32.png" class="" width="488"> <p>&nbsp;<br>确保通过CloudFront的域名可以访问到后端应用。</p><img src="/2024/09/05/%E5%A6%82%E4%BD%95%E5%9C%A8AWS%E7%9A%84s3%E5%AD%98%E5%82%A8%E6%A1%B6%E4%B8%8A%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE/35.png" class="" width="488"><p>&nbsp;<br>添加一条CNAME记录到你的域名服务商，解析到CloudFront的域名。</p><img src="/2024/09/05/%E5%A6%82%E4%BD%95%E5%9C%A8AWS%E7%9A%84s3%E5%AD%98%E5%82%A8%E6%A1%B6%E4%B8%8A%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE/36.png" class="" width="488"><h3 id="3-总结后端应用配置"><a href="#3-总结后端应用配置" class="headerlink" title="3. 总结后端应用配置"></a>3. 总结后端应用配置</h3><p>1.首先是配置好源，确保源站可以正常访问。比如你的源站是<a href="https://api.example.com,确保这个域名可以正常访问./">https://api.example.com，确保这个域名可以正常访问。</a></p><p>2.然后配置好域名和证书，并绑定到CloudFront。比如你的域名是<a href="https://www.example.com,解析到cloudfront的域名./">https://www.example.com，解析到CloudFront的域名。</a></p><p>3.最后，确保通过CloudFront的域名可以访问到后端应用。比如<a href="https://xxx.cloudfront.net/%E5%8F%AF%E4%BB%A5%E8%AE%BF%E9%97%AE%E5%88%B0%E5%90%8E%E7%AB%AF%E5%BA%94%E7%94%A8%E3%80%82">https://xxx.cloudfront.net/可以访问到后端应用。</a></p><p>4.解析你的域名到CloudFront的域名，就可以通过你的域名访问后端应用。</p><p>5.源站域名与你配置的域名不是同一个，他的整个流程是：你的域名 -&gt; CloudFront -&gt; 后端域名 -&gt; 后端应用。</p>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技术分享</tag>
      
      <tag>前端开发</tag>
      
      <tag>AWS</tag>
      
      <tag>s3</tag>
      
      <tag>静态网站托管</tag>
      
      <tag>项目部署</tag>
      
      <tag>自动化部署</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>通过gitlab实现自动部署前端项目到服务器</title>
    <link href="/2024/08/28/%E9%80%9A%E8%BF%87gitlab%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <url>/2024/08/28/%E9%80%9A%E8%BF%87gitlab%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在日常的开发中，我们经常会遇到需要部署前端项目到服务器的情况，比如发布新版本、更新功能等。一般情况下，我们需要手动将代码上传到服务器，然后手动执行部署命令，这显然是非常麻烦的。因此，我们需要找到一种自动化的方法来实现部署，这样就可以大大节省我们的部署时间。</p><h2 id="方案"><a href="#方案" class="headerlink" title="方案"></a>方案</h2><p>采用gitlab-runner + docker + 自动化部署脚本</p><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>安装docker,gitlab,gitlab-runner可以参考下面的文章</p><a href="/2024/08/20/%E5%AE%9D%E5%A1%94%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AEgitlab-ce/" title="宝塔安装配置gitlab-ce">安装配置gitlab-ce-点击查看</a><br/><a href="/2024/08/27/%E9%80%9A%E8%BF%87gitlab-ci%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E5%88%B0AWSS3/" title="通过gitlab实现自动部署前端项目到AWS S3">安装GitLab Runner-点击查看</a><br/><h3 id="自动化部署脚本"><a href="#自动化部署脚本" class="headerlink" title="自动化部署脚本"></a>自动化部署脚本</h3><p>我们可以编写一个自动化部署脚本，在gitlab-runner中执行，将前端项目编译成dist目录，然后将dist目录同步到发布服务器的指定目录，实现自动部署。<br>通过 GitLab CI&#x2F;CD 来实现自动打包及发布。你需要在你的项目根目录下创建一个 .gitlab-ci.yml 文件，然后在这个文件中定义一个 job 来将 dist 目录同步到发布服务器的指定目录 。</p><p>这是一个 .gitlab-ci.yml 文件的示例：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">stages:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">build</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">deploy</span><br><br><span class="hljs-attr">build:</span><br>  <span class="hljs-attr">stage:</span> <span class="hljs-string">build</span><br>  <span class="hljs-attr">image:</span> <span class="hljs-string">node:$&#123;NODE_VERSION&#125;</span><br>  <span class="hljs-attr">cache:</span><br>    <span class="hljs-attr">paths:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">node_modules/</span><br>  <span class="hljs-attr">script:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">yarn</span> <span class="hljs-string">install</span> <span class="hljs-string">--frozen-lockfile</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">yarn</span> <span class="hljs-string">build</span><br>  <span class="hljs-attr">artifacts:</span><br>    <span class="hljs-attr">paths:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">dist/</span><br><br><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">stage:</span> <span class="hljs-string">deploy</span><br>  <span class="hljs-attr">image:</span> <span class="hljs-string">alpine:latest</span><br>  <span class="hljs-attr">before_script:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">apk</span> <span class="hljs-string">add</span> <span class="hljs-string">--no-cache</span> <span class="hljs-string">openssh-client</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">eval</span> <span class="hljs-string">$(ssh-agent</span> <span class="hljs-string">-s)</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">echo</span> <span class="hljs-string">&quot;Debugging SSH key...&quot;</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">mkdir</span> <span class="hljs-string">-p</span> <span class="hljs-string">~/.ssh</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">chmod</span> <span class="hljs-number">700</span> <span class="hljs-string">~/.ssh</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">echo</span> <span class="hljs-string">&quot;$SSH_PRIVATE_KEY&quot;</span> <span class="hljs-string">|</span> <span class="hljs-string">base64</span> <span class="hljs-string">-d</span> <span class="hljs-string">&gt;</span> <span class="hljs-string">~/.ssh/id_rsa</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">chmod</span> <span class="hljs-number">600</span> <span class="hljs-string">~/.ssh/id_rsa</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">echo</span> <span class="hljs-string">&quot;SSH key file content (first and last lines):&quot;</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">head</span> <span class="hljs-string">-n</span> <span class="hljs-number">1</span> <span class="hljs-string">~/.ssh/id_rsa</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">tail</span> <span class="hljs-string">-n</span> <span class="hljs-number">1</span> <span class="hljs-string">~/.ssh/id_rsa</span><br>  <span class="hljs-attr">script:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">ssh-add</span> <span class="hljs-string">~/.ssh/id_rsa</span> <span class="hljs-string">||</span> <span class="hljs-string">(echo</span> <span class="hljs-string">&quot;Failed to add SSH key&quot;</span> <span class="hljs-string">&amp;&amp;</span> <span class="hljs-string">exit</span> <span class="hljs-number">1</span><span class="hljs-string">)</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">ssh-add</span> <span class="hljs-string">-l</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">ssh-keygen</span> <span class="hljs-string">-lf</span> <span class="hljs-string">~/.ssh/id_rsa</span> <span class="hljs-string">||</span> <span class="hljs-string">echo</span> <span class="hljs-string">&quot;Failed to show key fingerprint&quot;</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">ssh-keyscan</span> <span class="hljs-string">$SERVER_IP&gt;&gt;</span> <span class="hljs-string">~/.ssh/known_hosts</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">chmod</span> <span class="hljs-number">644</span> <span class="hljs-string">~/.ssh/known_hosts</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">scp</span> <span class="hljs-string">-v</span> <span class="hljs-string">-r</span> <span class="hljs-string">dist/*</span> <span class="hljs-string">$SERVER_USER@$SERVER_IP:$REMOTE_DIR</span><br>  <span class="hljs-attr">only:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">main</span><br><span class="hljs-attr">variables:</span><br>  <span class="hljs-attr">NODE_VERSION:</span> <span class="hljs-string">&quot;16.14.2&quot;</span><br>  <span class="hljs-attr">SERVER_IP:</span> <span class="hljs-string">&quot;发布服务器IP&quot;</span><br>  <span class="hljs-attr">SERVER_USER:</span> <span class="hljs-string">&quot;发布服务器用户名&quot;</span><br>  <span class="hljs-attr">REMOTE_DIR:</span> <span class="hljs-string">&quot;发布目录&quot;</span><br>  <span class="hljs-attr">SSH_PRIVATE_KEY:</span> <span class="hljs-string">&quot;SSH私钥(BASE64编码)&quot;</span><br><br></code></pre></td></tr></table></figure><p>如果服务器的ssh端口不是22，比如端口改成了37582，我们需要按照下面的模板修改：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">stages:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">build</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">deploy</span><br><br><span class="hljs-attr">build:</span><br>  <span class="hljs-attr">stage:</span> <span class="hljs-string">build</span><br>  <span class="hljs-attr">image:</span> <span class="hljs-string">node:$&#123;NODE_VERSION&#125;</span><br>  <span class="hljs-attr">cache:</span><br>    <span class="hljs-attr">paths:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">node_modules/</span><br>  <span class="hljs-attr">script:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">yarn</span> <span class="hljs-string">install</span> <span class="hljs-string">--frozen-lockfile</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">yarn</span> <span class="hljs-string">build</span><br>  <span class="hljs-attr">artifacts:</span><br>    <span class="hljs-attr">paths:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">dist/</span><br><br><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">stage:</span> <span class="hljs-string">deploy</span><br>  <span class="hljs-attr">image:</span> <span class="hljs-string">alpine:latest</span><br>  <span class="hljs-attr">before_script:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">apk</span> <span class="hljs-string">add</span> <span class="hljs-string">--no-cache</span> <span class="hljs-string">openssh-client</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">eval</span> <span class="hljs-string">$(ssh-agent</span> <span class="hljs-string">-s)</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">echo</span> <span class="hljs-string">&quot;Debugging SSH key...&quot;</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">mkdir</span> <span class="hljs-string">-p</span> <span class="hljs-string">~/.ssh</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">chmod</span> <span class="hljs-number">700</span> <span class="hljs-string">~/.ssh</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">echo</span> <span class="hljs-string">&quot;$SSH_PRIVATE_KEY&quot;</span> <span class="hljs-string">|</span> <span class="hljs-string">base64</span> <span class="hljs-string">-d</span> <span class="hljs-string">&gt;</span> <span class="hljs-string">~/.ssh/id_rsa</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">chmod</span> <span class="hljs-number">600</span> <span class="hljs-string">~/.ssh/id_rsa</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">echo</span> <span class="hljs-string">&quot;SSH key file content (first and last lines):&quot;</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">head</span> <span class="hljs-string">-n</span> <span class="hljs-number">1</span> <span class="hljs-string">~/.ssh/id_rsa</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">tail</span> <span class="hljs-string">-n</span> <span class="hljs-number">1</span> <span class="hljs-string">~/.ssh/id_rsa</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">echo</span> <span class="hljs-string">-e</span> <span class="hljs-string">&quot;Host $SERVER_IP\n\tPort 37582&quot;</span> <span class="hljs-string">&gt;</span> <span class="hljs-string">~/.ssh/config</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">chmod</span> <span class="hljs-number">600</span> <span class="hljs-string">~/.ssh/config</span><br>  <span class="hljs-attr">script:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">ssh-add</span> <span class="hljs-string">~/.ssh/id_rsa</span> <span class="hljs-string">||</span> <span class="hljs-string">(echo</span> <span class="hljs-string">&quot;Failed to add SSH key&quot;</span> <span class="hljs-string">&amp;&amp;</span> <span class="hljs-string">exit</span> <span class="hljs-number">1</span><span class="hljs-string">)</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">ssh-add</span> <span class="hljs-string">-l</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">ssh-keygen</span> <span class="hljs-string">-lf</span> <span class="hljs-string">~/.ssh/id_rsa</span> <span class="hljs-string">||</span> <span class="hljs-string">echo</span> <span class="hljs-string">&quot;Failed to show key fingerprint&quot;</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">ssh-keyscan</span> <span class="hljs-string">-p</span> <span class="hljs-number">37582</span> <span class="hljs-string">$SERVER_IP</span> <span class="hljs-string">&gt;&gt;</span> <span class="hljs-string">~/.ssh/known_hosts</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">chmod</span> <span class="hljs-number">644</span> <span class="hljs-string">~/.ssh/known_hosts</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">scp</span> <span class="hljs-string">-v</span> <span class="hljs-string">-P</span> <span class="hljs-number">37582</span> <span class="hljs-string">-r</span> <span class="hljs-string">dist/*</span> <span class="hljs-string">$SERVER_USER@$SERVER_IP:$REMOTE_DIR</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">ssh</span> <span class="hljs-string">-vv</span> <span class="hljs-string">$SERVER_USER@$SERVER_IP</span> <span class="hljs-string">&quot;echo &#x27;SSH connection successful&#x27;&quot;</span><br>  <span class="hljs-attr">only:</span><br>   <span class="hljs-bullet">-</span> <span class="hljs-string">main</span><br><span class="hljs-attr">variables:</span><br>  <span class="hljs-attr">NODE_VERSION:</span> <span class="hljs-string">&quot;16.14.2&quot;</span><br>  <span class="hljs-attr">SERVER_IP:</span> <span class="hljs-string">&quot;发布服务器IP&quot;</span><br>  <span class="hljs-attr">SERVER_USER:</span> <span class="hljs-string">&quot;发布服务器用户名&quot;</span><br>  <span class="hljs-attr">REMOTE_DIR:</span> <span class="hljs-string">&quot;发布目录&quot;</span><br>  <span class="hljs-attr">SSH_PRIVATE_KEY:</span> <span class="hljs-string">&quot;SSH私钥(BASE64编码)&quot;</span><br></code></pre></td></tr></table></figure><p>&nbsp;</p><img src="/2024/08/28/%E9%80%9A%E8%BF%87gitlab%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/1.png" class="" width="488"><p>&nbsp;</p><div class="note note-warning @title">            <p>注意：如果按照上面的配置，前面的步骤都是没有问题，但是执行最后一步退出了，可能是因为没有开启ssh密钥登录</p>          </div><p>你需要修改这个文件中的以下部分：</p><ul><li>NODE_VERSION:你想使用的 Node.js 版本，与你的开发环境一致，可用 <code>node -v</code> 命令查看</li><li>SERVER_IP:你要部署到的服务器的 IP 地址</li><li>SERVER_USER:你要部署到的服务器的用户名</li><li>REMOTE_DIR:你要部署到的服务器的目录</li><li>SSH_PRIVATE_KEY:你的 SSH 私钥，需要用 base64 编码，可用 <code>cat ~/.ssh/id_rsa | base64</code> 命令获取</li><li>main:你想部署的分支（这里是 main 分支）</li></ul><p>遇到的问题：</p><ul><li>aws默认的用户不是root,这个时候用root登录上传会提示权限不足，需要修改一下登录的用户名。<br>  比如当前登录的用户是ubuntu，而我们的发布目录所有者是root，那么我们需要修改一下发布目录的权限。.gitlab-ci.yml 文件中，SERVER_USER也需要更改成ubuntu。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo <span class="hljs-built_in">chown</span> -R ubuntu:ubuntu path/to/your/project<br></code></pre></td></tr></table></figure><h3 id="生成SSH公钥"><a href="#生成SSH公钥" class="headerlink" title="生成SSH公钥"></a>生成SSH公钥</h3><h4 id="1-生成-SSH-密钥对：您可以在以下任意位置生成-SSH-密钥对："><a href="#1-生成-SSH-密钥对：您可以在以下任意位置生成-SSH-密钥对：" class="headerlink" title="1.生成 SSH 密钥对：您可以在以下任意位置生成 SSH 密钥对："></a>1.生成 SSH 密钥对：您可以在以下任意位置生成 SSH 密钥对：</h4><ul><li>您的本地机器（个人计算机）</li><li>目标服务器</li></ul><p>如果您对 SSH 密钥管理感到舒适，在本地机器上生成可能更方便。如果您更喜欢直接在目标环境中操作，可以在目标服务器上生成。</p><h4 id="2-无论您在哪里生成密钥，请确保："><a href="#2-无论您在哪里生成密钥，请确保：" class="headerlink" title="2.无论您在哪里生成密钥，请确保："></a>2.无论您在哪里生成密钥，请确保：</h4><ul><li>私钥（base64 编码后）被添加到 GitLab CI&#x2F;CD 变量中</li><li>公钥被添加到目标服务器的 ~&#x2F;.ssh&#x2F;authorized_keys 文件中</li></ul><p>我在目标服务器上生成 SSH 密钥对：<br>1.登录到目标服务器，然后运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen -t rsa -b 4096 -C <span class="hljs-string">&quot;deploy_key&quot;</span> -f ~/.ssh/gitlab_deploy_key<br></code></pre></td></tr></table></figure><p>2.将公钥添加到授权键文件中。仍在目标服务器上，运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> ~/.ssh/gitlab_deploy_key.pub &gt;&gt; ~/.ssh/authorized_keys<br></code></pre></td></tr></table></figure><p>3.获取私钥并转换为 base64。仍在目标服务器上，运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> ~/.ssh/gitlab_deploy_key | <span class="hljs-built_in">base64</span> -w 0<br></code></pre></td></tr></table></figure><p>复制输出的 base64 编码字符串。</p><div class="note note-warning @title">            <p>注意：如果您使用的是 OpenSSH 格式的私钥（以 “—–BEGIN OPENSSH PRIVATE KEY—–” 开头），可能需要转换为 RSA 格式<br>ssh-keygen -p -m PEM -f ~&#x2F;.ssh&#x2F;gitlab_deploy_key</p>          </div><p>4.更新 GitLab CI&#x2F;CD 变量(可选)：</p><ul><li>在 GitLab 项目中，转到 Settings &gt; CI&#x2F;CD &gt; Variables<ul><li>更新 SSH_PRIVATE_KEY 变量：</li><li>Value: 粘贴您刚刚生成的 base64 编码字符串</li><li>Type: Variable (不是 File)</li></ul></li></ul><p>5.使用之前提供的 CI&#x2F;CD 配置文件。(可选)</p><div class="note note-warning @title">            <p>第4,5步是我写的是可选，因为我在设置环境变量后，运行脚本一直无法获取到私钥，懒得折腾，直接把变量写到本地文件中了。</p>          </div><h3 id="运行脚本"><a href="#运行脚本" class="headerlink" title="运行脚本"></a>运行脚本</h3><p>在配置好runner后，我们可以直接在gitlab上push代码，gitlab-runner会自动执行CI&#x2F;CD脚本，将前端项目编译成dist目录，然后将dist目录同步到发布服务器的指定目录，实现自动部署。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过gitlab-runner + docker + 自动化部署脚本，我们可以实现自动化部署前端项目到服务器，大大节省了我们的部署时间。<br>上面的脚本要根据实际情况来调整，我的环境用的是yarn，如果用npm，需要修改脚本中的命令。</p>]]></content>
    
    
    <categories>
      
      <category>工具分享</category>
      
      <category>技术分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>docker</tag>
      
      <tag>gitlab-ce</tag>
      
      <tag>技术分享</tag>
      
      <tag>项目部署</tag>
      
      <tag>自动化部署</tag>
      
      <tag>宝塔</tag>
      
      <tag>gitlab-runner</tag>
      
      <tag>前端项目</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>通过gitlab实现自动部署前端项目到AWS S3</title>
    <link href="/2024/08/27/%E9%80%9A%E8%BF%87gitlab-ci%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E5%88%B0AWSS3/"/>
    <url>/2024/08/27/%E9%80%9A%E8%BF%87gitlab-ci%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E5%88%B0AWSS3/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在日常的开发工作中，我们经常会遇到将前端项目部署到 AWS S3 存储桶的需求。本文将介绍如何使用 GitLab CI&#x2F;CD 实现自动部署前端项目到 AWS S3 存储桶。</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>首先，你需要准备以下环境：</p><ul><li>一个 GitLab 账号</li><li>一个 AWS 账号</li><li>一个 S3 存储桶</li></ul><p>如果你没有 GitLab 账号，你可以注册一个 GitLab 账号。如果你没有 AWS 账号，你可以注册一个 AWS 账号。如果你没有 S3 存储桶，你可以在 AWS 控制台创建一个 S3 存储桶。</p><h2 id="本地代码同步到-GitLab"><a href="#本地代码同步到-GitLab" class="headerlink" title="本地代码同步到 GitLab"></a>本地代码同步到 GitLab</h2><h3 id="首先，你需要在本地-git-仓库中添加-GitLab-的远程地址："><a href="#首先，你需要在本地-git-仓库中添加-GitLab-的远程地址：" class="headerlink" title="首先，你需要在本地 git 仓库中添加 GitLab 的远程地址："></a>首先，你需要在本地 git 仓库中添加 GitLab 的远程地址：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git remote add origin your-gitlab-repo-url<br></code></pre></td></tr></table></figure><h3 id="然后，你可以将你的代码推送到-GitLab："><a href="#然后，你可以将你的代码推送到-GitLab：" class="headerlink" title="然后，你可以将你的代码推送到 GitLab："></a>然后，你可以将你的代码推送到 GitLab：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git add .<br>git commit -m <span class="hljs-string">&quot;Your commit message&quot;</span><br>git push origin master<br></code></pre></td></tr></table></figure><p>自动将 dist 目录同步到 AWS S3 存储桶：</p><p>这一步可以通过 GitLab CI&#x2F;CD 来实现。你需要在你的项目根目录下创建一个 .gitlab-ci.yml 文件，然后在这个文件中定义一个 job 来将 dist 目录同步到 S3。并且在推送到S3之后，清除CloudFront缓存。<br>这个job分两个阶段，第一阶段通过build命令将前端项目编译成dist目录，第二阶段通过deploy_to_s3命令将dist目录同步到S3，并清除CloudFront缓存。</p><p>这是一个 .gitlab-ci.yml 文件的示例：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">stages:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">build</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">deploy</span><br><br><span class="hljs-attr">build:</span><br>  <span class="hljs-attr">stage:</span> <span class="hljs-string">build</span><br>  <span class="hljs-attr">image:</span> <span class="hljs-string">node:$&#123;NODE_VERSION&#125;</span><br>  <span class="hljs-attr">cache:</span><br>    <span class="hljs-attr">paths:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">node_modules/</span><br>  <span class="hljs-attr">script:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">yarn</span> <span class="hljs-string">install</span> <span class="hljs-string">--frozen-lockfile</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">yarn</span> <span class="hljs-string">build</span><br>  <span class="hljs-attr">artifacts:</span><br>    <span class="hljs-attr">paths:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">dist/</span><br><br><span class="hljs-attr">deploy_to_s3:</span><br>  <span class="hljs-attr">stage:</span> <span class="hljs-string">deploy</span><br>  <span class="hljs-attr">image:</span> <span class="hljs-string">python:3.7</span><br>  <span class="hljs-attr">script:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">pip</span> <span class="hljs-string">install</span> <span class="hljs-string">awscli</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">echo</span> <span class="hljs-string">&quot;Deploying to S3...&quot;</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">aws</span> <span class="hljs-string">configure</span> <span class="hljs-string">set</span> <span class="hljs-string">aws_access_key_id</span> <span class="hljs-string">$AWS_ACCESS_KEY_ID</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">aws</span> <span class="hljs-string">configure</span> <span class="hljs-string">set</span> <span class="hljs-string">aws_secret_access_key</span> <span class="hljs-string">$AWS_SECRET_ACCESS_KEY</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">aws</span> <span class="hljs-string">s3</span> <span class="hljs-string">sync</span> <span class="hljs-string">dist/</span> <span class="hljs-string">s3://your-s3-bucket-name</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">echo</span> <span class="hljs-string">&quot;Invalidating CloudFront cache...&quot;</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">aws</span> <span class="hljs-string">cloudfront</span> <span class="hljs-string">create-invalidation</span> <span class="hljs-string">--distribution-id</span> <span class="hljs-string">$CLOUDFRONT_DISTRIBUTION_ID</span> <span class="hljs-string">--paths</span> <span class="hljs-string">&quot;/*&quot;</span><br>  <span class="hljs-attr">only:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">main</span><br><span class="hljs-attr">variables:</span><br>  <span class="hljs-attr">AWS_ACCESS_KEY_ID:</span> <span class="hljs-string">&quot;你的AWS访问密钥ID&quot;</span><br>  <span class="hljs-attr">AWS_SECRET_ACCESS_KEY:</span> <span class="hljs-string">&quot;你的AWS秘密访问密钥&quot;</span><br>  <span class="hljs-attr">AWS_DEFAULT_REGION:</span> <span class="hljs-string">&quot;ap-east-1&quot;</span><br>  <span class="hljs-attr">CLOUDFRONT_DISTRIBUTION_ID:</span> <span class="hljs-string">&quot;你的CloudFront分配ID&quot;</span><br></code></pre></td></tr></table></figure><p>  这个 job 会在每次你推送到 main 分支时运行，它首先安装了 AWS CLI，然后使用 aws s3 sync 命令将 dist 目录同步到你的 S3 存储桶。</p><p>  你需要修改这个文件中的以下部分：</p><ul><li>dist:你的前端项目的编译产物目录</li><li>your-s3-bucket-name:你的 S3 存储桶名称</li><li>AWS_ACCESS_KEY_ID,AWS_SECRET_ACCESS_KEY:你的 AWS 访问密钥 ID 和秘密访问密钥</li><li>main:你想部署的分支（这里是 main 分支）</li><li>AWS_DEFAULT_REGION:你想使用的 AWS 区域（这里是 ap-east-1）</li><li>CLOUDFRONT_DISTRIBUTION_ID:你的 CloudFront 分配 ID</li></ul><div class="note note-warning @title">            <p>请注意，variables 中的 AWS_ACCESS_KEY_ID 和 AWS_SECRET_ACCESS_KEY 变量是必须的。你也可以在 GitLab CI&#x2F;CD 的环境变量中设置你的 AWS 访问密钥和秘密访问密钥，以便 AWS CLI 可以访问你的 S3 存储桶。</p>          </div><p>以上就是将本地代码同步到 GitLab，并自动将 dist 目录同步到 AWS S3 存储桶的方法。</p><h2 id="安装-GitLab-Runner"><a href="#安装-GitLab-Runner" class="headerlink" title="安装 GitLab Runner"></a>安装 GitLab Runner</h2><p>GitLab Runner 是一个开源的项目，它可以帮助你在 GitLab 中自动执行 CI&#x2F;CD 任务。你需要在你的 GitLab 服务器上安装 GitLab Runner。<br>推荐使用 Docker 容器来安装GitLab及 GitLab Runner。能够快速、轻松的安装 GitLab及 GitLab Runner。<br>操作步骤如下：</p><h3 id="1-拉取-GitLab-Runner-镜像"><a href="#1-拉取-GitLab-Runner-镜像" class="headerlink" title="1.拉取 GitLab Runner 镜像"></a>1.拉取 GitLab Runner 镜像</h3><p>可以使用以下命令拉取gitlab镜像，也可以通过宝塔面板来拉取<br>docker pull gitlab&#x2F;gitlab-runner:latest<br>&nbsp;</p><img src="/2024/08/27/%E9%80%9A%E8%BF%87gitlab-ci%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E5%88%B0AWSS3/1.png" class="" width="488"><p>&nbsp;</p><img src="/2024/08/27/%E9%80%9A%E8%BF%87gitlab-ci%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E5%88%B0AWSS3/2.png" class="" width="488"><p>&nbsp;</p><h3 id="2-创建-GitLab-Runner-容器"><a href="#2-创建-GitLab-Runner-容器" class="headerlink" title="2.创建 GitLab Runner 容器"></a>2.创建 GitLab Runner 容器</h3><p>你可以使用以下命令创建一个 GitLab Runner 容器。这个命令会创建一个新的 GitLab Runner 容器，并将其配置文件储存在你主机的 &#x2F;srv&#x2F;gitlab-runner&#x2F;config 目录中（你可以根据需要更改这个目录）。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run -d --name gitlab-runner --restart always \<br>  -v /srv/gitlab-runner/config:/etc/gitlab-runner \<br>  -v /var/run/docker.sock:/var/run/docker.sock \<br>  gitlab/gitlab-runner:latest<br><br></code></pre></td></tr></table></figure><h3 id="3-注册-GitLab-Runner："><a href="#3-注册-GitLab-Runner：" class="headerlink" title="3.注册 GitLab Runner："></a>3.注册 GitLab Runner：</h3><p>接下来，你需要注册你的 GitLab Runner。首先，你需要获取你的 GitLab 实例的 URL 和注册令牌。你可以在你的 GitLab 项目的 “Settings -&gt; CI&#x2F;CD -&gt; Runners” 页面找到这些信息。<br>&nbsp;</p><img src="/2024/08/27/%E9%80%9A%E8%BF%87gitlab-ci%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E5%88%B0AWSS3/3.png" class="" width="488"><p>&nbsp;<br>然后，你可以运行以下命令来注册你的 Runner：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run --<span class="hljs-built_in">rm</span> -t -i -v /srv/gitlab-runner/config:/etc/gitlab-runner gitlab/gitlab-runner:latest register \<br>  --non-interactive \<br>  --executor <span class="hljs-string">&quot;docker&quot;</span> \<br>  --docker-image alpine:latest \<br>  --url <span class="hljs-string">&quot;https://GITLAB_INSTANCE_URL&quot;</span> \<br>  --registration-token <span class="hljs-string">&quot;PROJECT_REGISTRATION_TOKEN&quot;</span> \<br>  --description <span class="hljs-string">&quot;docker-runner&quot;</span> \<br>  --tag-list <span class="hljs-string">&quot;docker,aws&quot;</span> \<br>  --run-untagged=<span class="hljs-string">&quot;true&quot;</span> \<br>  --locked=<span class="hljs-string">&quot;false&quot;</span> \<br>  --access-level=<span class="hljs-string">&quot;not_protected&quot;</span><br><br></code></pre></td></tr></table></figure><ul><li>GITLAB_INSTANCE_URL：你的 GitLab 实例的 URL</li><li>PROJECT_REGISTRATION_TOKEN：你的 GitLab 项目的注册令牌</li><li>docker-runner：Runner 的名称<br>  &nbsp;<br>  下图展示了注册 GitLab Runner后的结果<br>  &nbsp;  <img src="/2024/08/27/%E9%80%9A%E8%BF%87gitlab-ci%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E5%88%B0AWSS3/4.png" class="" width="488">  &nbsp;</li></ul>]]></content>
    
    
    <categories>
      
      <category>工具分享</category>
      
      <category>技术分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>docker</tag>
      
      <tag>gitlab-ce</tag>
      
      <tag>工具分享</tag>
      
      <tag>技术分享</tag>
      
      <tag>s3</tag>
      
      <tag>宝塔</tag>
      
      <tag>gitlab-runner</tag>
      
      <tag>aws</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>宝塔安装配置gitlab-ce</title>
    <link href="/2024/08/20/%E5%AE%9D%E5%A1%94%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AEgitlab-ce/"/>
    <url>/2024/08/20/%E5%AE%9D%E5%A1%94%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AEgitlab-ce/</url>
    
    <content type="html"><![CDATA[<h1 id="宝塔安装配置gitlab-ce"><a href="#宝塔安装配置gitlab-ce" class="headerlink" title="宝塔安装配置gitlab-ce"></a>宝塔安装配置gitlab-ce</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>宝塔是一款基于Linux的Web面板，可以实现Web服务器的管理、网站的部署、数据库的管理、FTP的管理、SSL证书的管理、系统监控等功能。本文将介绍如何在宝塔上安装并配置gitlab-ce。<br>本想直接在宝塔的软件商店中搜索并安装gitlab-ce，但发现软件商店中安装失败，因此打算手动安装。<br>于是通过命令行手动安装，但是命令行执行安装命令也失败，懒得折腾环境，所以使用docker安装。</p></blockquote><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li>宝塔面板：购买或租用一台云服务器，安装宝塔面板，并配置好SSH登录。</li><li>域名：购买一个域名，并将域名解析到服务器IP。</li><li>服务器：CentOS 7.x 64位。</li></ul><h2 id="安装gitlab-ce"><a href="#安装gitlab-ce" class="headerlink" title="安装gitlab-ce"></a>安装gitlab-ce</h2><h3 id="1-登录宝塔面板"><a href="#1-登录宝塔面板" class="headerlink" title="1. 登录宝塔面板"></a>1. 登录宝塔面板</h3><p>打开浏览器，输入服务器IP，进入宝塔面板登录页面。</p><h3 id="2-点击左侧菜单栏的“软件商店”，搜索并安装“docker”。"><a href="#2-点击左侧菜单栏的“软件商店”，搜索并安装“docker”。" class="headerlink" title="2. 点击左侧菜单栏的“软件商店”，搜索并安装“docker”。"></a>2. 点击左侧菜单栏的“软件商店”，搜索并安装“docker”。</h3><img src="/2024/08/20/%E5%AE%9D%E5%A1%94%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AEgitlab-ce/1.png" class="" width="488"><p>&nbsp;</p><h3 id="3-点击左侧菜单栏的docker，根据提示安装docker-compose。"><a href="#3-点击左侧菜单栏的docker，根据提示安装docker-compose。" class="headerlink" title="3. 点击左侧菜单栏的docker，根据提示安装docker-compose。"></a>3. 点击左侧菜单栏的docker，根据提示安装docker-compose。</h3><img src="/2024/08/20/%E5%AE%9D%E5%A1%94%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AEgitlab-ce/2.png" class="" width="488"><p>&nbsp;</p><h3 id="4-点击本地镜像-从仓库拉去-常规拉取-镜像名输入：gitlab-gitlab-ce-latest"><a href="#4-点击本地镜像-从仓库拉去-常规拉取-镜像名输入：gitlab-gitlab-ce-latest" class="headerlink" title="4. 点击本地镜像-从仓库拉去-常规拉取-镜像名输入：gitlab&#x2F;gitlab-ce:latest"></a>4. 点击本地镜像-从仓库拉去-常规拉取-镜像名输入：gitlab&#x2F;gitlab-ce:latest</h3><img src="/2024/08/20/%E5%AE%9D%E5%A1%94%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AEgitlab-ce/3.png" class="" width="488"><p>&nbsp;</p><img src="/2024/08/20/%E5%AE%9D%E5%A1%94%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AEgitlab-ce/4.png" class="" width="488"><p>&nbsp;</p><div class="note note-warning @title">            <p>注意：不同的宝塔版本看到的界面可能不同，请根据实际情况选择。最终的目的是先获取gitlab-ce镜像，然后在宝塔中启动容器。</p>          </div><img src="/2024/08/20/%E5%AE%9D%E5%A1%94%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AEgitlab-ce/5.png" class="" width="488"><p>&nbsp;</p><h3 id="5-运行Gitlab镜像"><a href="#5-运行Gitlab镜像" class="headerlink" title="5. 运行Gitlab镜像"></a>5. 运行Gitlab镜像</h3><p>在服务器上打开终端，输入以下命令创建docker容器：</p><div class="note note-warning @title">            <p>注意：gitlab.xxx.com一定要改成你为gitlab配置的域名或者IP地址。不然后面需要去更改gitlab的配置。我后面通过修改配置一直无法成功，最后是删除容器重新通过下面的命令配置好域名才行。</p>          </div><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs groovy">docker run -d \<br>--hostname gitlab.xxx.com \<br>--name gitlab \<br>--restart always \<br>-p <span class="hljs-number">8002</span>:<span class="hljs-number">443</span> -p <span class="hljs-number">8003</span>:<span class="hljs-number">80</span> -p <span class="hljs-number">8004</span>:<span class="hljs-number">22</span> \<br>-v <span class="hljs-regexp">/etc/</span><span class="hljs-attr">localtime:</span><span class="hljs-regexp">/etc/</span><span class="hljs-attr">localtime:</span>ro \<br>-v <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/gitlab_data/</span>gitlab<span class="hljs-regexp">/config:/</span>etc/gitlab \<br>-v <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/gitlab_data/</span>gitlab<span class="hljs-regexp">/logs:/</span><span class="hljs-keyword">var</span><span class="hljs-regexp">/log/</span>gitlab \<br>-v <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/gitlab_data/</span>gitlab<span class="hljs-regexp">/data:/</span><span class="hljs-keyword">var</span><span class="hljs-regexp">/opt/</span>gitlab \<br>gitlab/gitlab-ce<br></code></pre></td></tr></table></figure><p>&nbsp;<br>参数说明</p><p>-d 指定后台运行<br>–hostname 指定主机名(域名或IP地址)<br>–name 指定容器名<br>-p 端口映射 443 https端口 80 http端口 22 ssh端口<br>–restart always  容器停止后的重启策略: 容器退出时总是重启<br>-v 指定挂载存储卷首先在宿主主机创建对应的目录<br>&nbsp;</p><img src="/2024/08/20/%E5%AE%9D%E5%A1%94%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AEgitlab-ce/6.png" class="" width="488"><p>&nbsp;</p><img src="/2024/08/20/%E5%AE%9D%E5%A1%94%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AEgitlab-ce/7.png" class="" width="488"><p>&nbsp;</p><h3 id="6-宝塔放开gitlab所需端口"><a href="#6-宝塔放开gitlab所需端口" class="headerlink" title="6. 宝塔放开gitlab所需端口"></a>6. 宝塔放开gitlab所需端口</h3><p>在宝塔面板的“防火墙”中，放开gitlab所需的端口，包括8002、8003、8004。如果采用的大厂云服务器，则需要在云服务器的安全组中放开相应的端口。</p><img src="/2024/08/20/%E5%AE%9D%E5%A1%94%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AEgitlab-ce/8.png" class="" width="488"><p>&nbsp;</p><h3 id="7-查找gitlab的初始密码"><a href="#7-查找gitlab的初始密码" class="headerlink" title="7. 查找gitlab的初始密码"></a>7. 查找gitlab的初始密码</h3><p>默认用户名：root<br>容器启动后，在服务器上打开终端或docker容器的终端，输入以下命令查看初始密码：</p><p>如果是在宝塔面板的终端中查看，需要进入容器内部，然后查看密码。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker <span class="hljs-built_in">exec</span> -it gitlab的容器名 bash<br><span class="hljs-built_in">cat</span> /etc/gitlab/initial_root_password<br></code></pre></td></tr></table></figure><p>如果是在docker容器的终端中查看，直接查看密码即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> /etc/gitlab/initial_root_password<br></code></pre></td></tr></table></figure><p>&nbsp;</p><img src="/2024/08/20/%E5%AE%9D%E5%A1%94%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AEgitlab-ce/902.png" class="" width="488"><p>&nbsp;</p><img src="/2024/08/20/%E5%AE%9D%E5%A1%94%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AEgitlab-ce/901.png" class="" width="488"><p>&nbsp;</p><img src="/2024/08/20/%E5%AE%9D%E5%A1%94%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AEgitlab-ce/9.png" class="" width="488"><p>&nbsp;</p><div class="note note-warning @title">            <p>如果在执行cat &#x2F;etc&#x2F;gitlab&#x2F;initial_root_password命令时，提示找不到文件，则可以通过下面的命令重置密码：</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">docker exec -<span class="hljs-keyword">it</span> gitlab容器名 gitlab-rake <span class="hljs-string">&quot;gitlab:password:reset[root]&quot;</span><br></code></pre></td></tr></table></figure>          </div><h3 id="4-配置域名"><a href="#4-配置域名" class="headerlink" title="4. 配置域名"></a>4. 配置域名</h3><p>由于是通过宝塔来给docker的gitlab配置域名，需要通过反向代理来实现</p><h4 id="4-1-将域名解析到服务器IP，然后在宝塔-网站-反向代理，然后点击“添加反代”。"><a href="#4-1-将域名解析到服务器IP，然后在宝塔-网站-反向代理，然后点击“添加反代”。" class="headerlink" title="4.1 将域名解析到服务器IP，然后在宝塔-网站-反向代理，然后点击“添加反代”。"></a>4.1 将域名解析到服务器IP，然后在宝塔-网站-反向代理，然后点击“添加反代”。</h4><p>&nbsp;</p><img src="/2024/08/20/%E5%AE%9D%E5%A1%94%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AEgitlab-ce/10.png" class="" width="488"><p>&nbsp;</p><h4 id="4-2-添加反向代理"><a href="#4-2-添加反向代理" class="headerlink" title="4.2 添加反向代理"></a>4.2 添加反向代理</h4><p>配置反向代理时，先查看docker容器的IP，然后在反向代理的配置中，输入http:&#x2F;&#x2F;容器IP，注意这里不需要填写端口号。在前面创建docker容器时已将8003端口指向了容器的80端口，所以这里不需要填写端口号</p><img src="/2024/08/20/%E5%AE%9D%E5%A1%94%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AEgitlab-ce/14.png" class="" width="488"><p>&nbsp;<br>&nbsp;</p><img src="/2024/08/20/%E5%AE%9D%E5%A1%94%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AEgitlab-ce/11.png" class="" width="488"><p>&nbsp; </p><h4 id="4-3-获取SSL免费证书"><a href="#4-3-获取SSL免费证书" class="headerlink" title="4.3 获取SSL免费证书"></a>4.3 获取SSL免费证书</h4><p>&nbsp;</p><img src="/2024/08/20/%E5%AE%9D%E5%A1%94%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AEgitlab-ce/12.png" class="" width="488"><p>&nbsp;</p><h3 id="5-访问GitLab"><a href="#5-访问GitLab" class="headerlink" title="5. 访问GitLab"></a>5. 访问GitLab</h3><p>打开浏览器，输入域名，访问GitLab。 </p><h2 id="踩过的坑"><a href="#踩过的坑" class="headerlink" title="踩过的坑"></a>踩过的坑</h2><h3 id="1-宝塔的应用商店直接安装gitlab-ce失败或服务器直接安装docker环境安装失败"><a href="#1-宝塔的应用商店直接安装gitlab-ce失败或服务器直接安装docker环境安装失败" class="headerlink" title="1. 宝塔的应用商店直接安装gitlab-ce失败或服务器直接安装docker环境安装失败"></a>1. 宝塔的应用商店直接安装gitlab-ce失败或服务器直接安装docker环境安装失败</h3><p>不想折腾的，建议使用宝塔的docker环境安装gitlab-ce。</p><h3 id="2-按照上面的步骤安装gitlab-ce，但是访问GitLab时，提示502-Bad-Gateway或服务器拒绝响应"><a href="#2-按照上面的步骤安装gitlab-ce，但是访问GitLab时，提示502-Bad-Gateway或服务器拒绝响应" class="headerlink" title="2. 按照上面的步骤安装gitlab-ce，但是访问GitLab时，提示502 Bad Gateway或服务器拒绝响应"></a>2. 按照上面的步骤安装gitlab-ce，但是访问GitLab时，提示502 Bad Gateway或服务器拒绝响应</h3><p>1.检查防火墙问题：检查宝塔防火墙是否放开了8002、8003、8004端口。<br>2.服务安全组问题：如果是云服务器，需要在云服务器的安全组中放开相应的端口8002、8003、8004。<br>3.确保你的gitlab-ce容器已经启动，然后在浏览器中输入服务器IP+端口，比如：<a href="http://192.168.127.12:8003。如果通过这种方式无法访问，那就是你的gitlab-ce没有部署成功。也有可能是你的端口号写错，注意检查。">http://192.168.127.12:8003。如果通过这种方式无法访问，那就是你的gitlab-ce没有部署成功。也有可能是你的端口号写错，注意检查。</a><br>4.如果通过服务器IP+端口能访问gitlab，确保你的域名已经解析到服务器IP。</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>本文介绍了如何在宝塔上安装并配置gitlab-ce。<br>gitlab-ce是一个开源的Git版本管理软件，可以实现代码的版本控制、代码的分支管理、代码的合并、代码的回滚等功能。<br>宝塔是一款基于Linux的Web面板，可以实现Web服务器的管理、网站的部署、数据库的管理、FTP的管理、SSL证书的管理、系统监控等功能。<br>通过宝塔可以方便地管理服务器、部署网站、管理数据库、管理FTP、管理SSL证书、系统监控等。<br>希望本文对你有所帮助。</p>]]></content>
    
    
    <categories>
      
      <category>工具分享</category>
      
      <category>技术分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>centos7</tag>
      
      <tag>docker</tag>
      
      <tag>gitlab-ce</tag>
      
      <tag>工具分享</tag>
      
      <tag>技术分享</tag>
      
      <tag>宝塔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>前端开发利器—图片生成代码</title>
    <link href="/2024/06/05/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%88%A9%E5%99%A8%E2%80%94%E2%80%94%E5%9B%BE%E7%89%87%E7%94%9F%E6%88%90%E4%BB%A3%E7%A0%81/"/>
    <url>/2024/06/05/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%88%A9%E5%99%A8%E2%80%94%E2%80%94%E5%9B%BE%E7%89%87%E7%94%9F%E6%88%90%E4%BB%A3%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<h3 id="一、背景"><a href="#一、背景" class="headerlink" title="一、背景"></a>一、背景</h3><p>最近在开发前端应用的时候，发现了一个很有趣的工具——<a href="https://github.com/abi/screenshot-to-code">screenshot-to-code</a>，可以将图片转化为代码，支持多种大型AI模型，可以生成HTML、CSS，可以用来快速搭建页面。</p><h3 id="二、安装环境及条件"><a href="#二、安装环境及条件" class="headerlink" title="二、安装环境及条件"></a>二、安装环境及条件</h3><p><b>系统环境</b>:可以选择安装在Windows、Mac、Linux等系统上。<br><b>网络条件</b>:<br>1.必须是除了中国大陆和香港以外地区的网络。对于中国大陆和香港的用户来说，只能使用这两个地区以外的服务器<br>2.有公网ip，能通过公网ip和服务端口可以访问都你部署的服务。针对国外的用户，如果想要在本机上运行，需要做端口映射才能正常使用。对于服务器不用考虑这个问题。<br>3.API KEY:支持GPT-4或Claude3,所以需要GPT-4 API KEY或者Claude3 API KEY。</p><h3 id="三、部署运行步骤"><a href="#三、部署运行步骤" class="headerlink" title="三、部署运行步骤"></a>三、部署运行步骤</h3><h4 id="1-下载screenshot-to-code-下载地址-screenshot-to-code"><a href="#1-下载screenshot-to-code-下载地址-screenshot-to-code" class="headerlink" title="1.下载screenshot-to-code 下载地址:screenshot-to-code"></a>1.下载screenshot-to-code 下载地址:<a href="https://github.com/abi/screenshot-to-code">screenshot-to-code</a></h4><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">git <span class="hljs-keyword">clone</span> <span class="hljs-title">git</span>@github.com:abi/screenshot-to-code.git<br></code></pre></td></tr></table></figure><h4 id="2-配置环境"><a href="#2-配置环境" class="headerlink" title="2.配置环境"></a>2.配置环境</h4><p>我只说官方没有提及或者很多人都不知道的地方。<br>其他可参考<a href="https://github.com/abi/screenshot-to-code">screenshot-to-code</a>的README.md文档。<br><b>配置环境变量:</b><br>在<b>frontend</b>目录下,新建<b>.env</b>文件,添加VITE_WS_BACKEND_URL</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">VITE_WS_BACKEND_URL</span>=ws://服务器ip:后端服务端口号<br></code></pre></td></tr></table></figure><div class="note note-warning">            <p> 注意:<br>1.我这里写的服务器IP目的是让大家避免这个坑，我一开始在自己的电脑上运行的时候，后端服务部署在默认端口7001，能正常运行，也能打开前端网页，但是在运行程序的时候就有会出websocket连接失败，Connection closed 1000。所以这个ip一定是外网ip，因为通过AI生成代码的时候需要访问你的对外IP和端口号。<br>2.服务运行的环境必须是支持能访问GPT的网络，也就是中国大陆和香港是无法使用的，这个时候时候就会报Connection closed 1006。所以要么用国外的服务器，国内本机翻墙也是不可用的。 </p>          </div><h4 id="3-部署运行screenshot-to-code-最简单的方式还是docker，可以直接拉取镜像运行。-以docker为例来运行，在你的项目根目录下，运行如下命令"><a href="#3-部署运行screenshot-to-code-最简单的方式还是docker，可以直接拉取镜像运行。-以docker为例来运行，在你的项目根目录下，运行如下命令" class="headerlink" title="3. 部署运行screenshot-to-code 最简单的方式还是docker，可以直接拉取镜像运行。 以docker为例来运行，在你的项目根目录下，运行如下命令:"></a>3. 部署运行screenshot-to-code 最简单的方式还是docker，可以直接拉取镜像运行。 以docker为例来运行，在你的项目根目录下，运行如下命令:</h4><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">docker-compose up -d <span class="hljs-comment">--build</span><br></code></pre></td></tr></table></figure><p>然后打开浏览器，输入http:&#x2F;&#x2F;服务器ip:5173，就可以看到screenshot-to-code的页面了。 <img src="/2024/06/05/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%88%A9%E5%99%A8%E2%80%94%E2%80%94%E5%9B%BE%E7%89%87%E7%94%9F%E6%88%90%E4%BB%A3%E7%A0%81/1.png" class="" width="488"> &nbsp;</p><h4 id="4-输入API-KEY-设置你的API-KEY，需要GPT-4-API-KEY或者Claude3-API-KEY。"><a href="#4-输入API-KEY-设置你的API-KEY，需要GPT-4-API-KEY或者Claude3-API-KEY。" class="headerlink" title="4. 输入API KEY 设置你的API KEY，需要GPT-4 API KEY或者Claude3 API KEY。"></a>4. 输入API KEY 设置你的API KEY，需要GPT-4 API KEY或者Claude3 API KEY。</h4> <img src="/2024/06/05/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%88%A9%E5%99%A8%E2%80%94%E2%80%94%E5%9B%BE%E7%89%87%E7%94%9F%E6%88%90%E4%BB%A3%E7%A0%81/2.png" class="" width="488"> <p>  &nbsp;<br> <img src="/2024/06/05/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%88%A9%E5%99%A8%E2%80%94%E2%80%94%E5%9B%BE%E7%89%87%E7%94%9F%E6%88%90%E4%BB%A3%E7%A0%81/3.png" class="" width="488"><br>   &nbsp;</p><h4 id="5-选择输出语言"><a href="#5-选择输出语言" class="headerlink" title="5.选择输出语言"></a>5.选择输出语言</h4><p>他支持多种前端框架，可以根据自己的喜好选择。<br>   <img src="/2024/06/05/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%88%A9%E5%99%A8%E2%80%94%E2%80%94%E5%9B%BE%E7%89%87%E7%94%9F%E6%88%90%E4%BB%A3%E7%A0%81/6.png" class="" width="488"> &nbsp;</p><h4 id="6-选择AI模型-支持最新的GTP-4o或Claude3模型，我目前用的GPT-4o模型-网上介绍说Claude3模型效果可能更好。"><a href="#6-选择AI模型-支持最新的GTP-4o或Claude3模型，我目前用的GPT-4o模型-网上介绍说Claude3模型效果可能更好。" class="headerlink" title="6. 选择AI模型 支持最新的GTP-4o或Claude3模型，我目前用的GPT-4o模型,网上介绍说Claude3模型效果可能更好。"></a>6. 选择AI模型 支持最新的GTP-4o或Claude3模型，我目前用的GPT-4o模型,网上介绍说Claude3模型效果可能更好。</h4> <img src="/2024/06/05/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%88%A9%E5%99%A8%E2%80%94%E2%80%94%E5%9B%BE%E7%89%87%E7%94%9F%E6%88%90%E4%BB%A3%E7%A0%81/4.png" class="" width="488"> &nbsp;<h4 id="7-选择图片-生成代码"><a href="#7-选择图片-生成代码" class="headerlink" title="7.选择图片,生成代码"></a>7.选择图片,生成代码</h4> <img src="/2024/06/05/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%88%A9%E5%99%A8%E2%80%94%E2%80%94%E5%9B%BE%E7%89%87%E7%94%9F%E6%88%90%E4%BB%A3%E7%A0%81/5.png" class="" width="488"> &nbsp;<h3 id="四、效果展示"><a href="#四、效果展示" class="headerlink" title="四、效果展示"></a>四、效果展示</h3><p>我的站点<a href="https://stc.zymn.cc/">https://stc.zymn.cc/</a>，可以看到效果。需要设置自己的GPT-4 API KEY或者Claude3 API KEY。<br>&nbsp;<br><video src="/2024/06/05/前端开发利器——图片生成代码/demo.mp4" position= "absolute" width="100%" height="100%" controls="controls"></video><br>&nbsp;</p><h3 id="五、高级用法"><a href="#五、高级用法" class="headerlink" title="五、高级用法"></a>五、高级用法</h3><p>国内用户一般只能部署在海外服务器上，如果想要绑定域名，需要做如下更改。<br>到frontend目录下,修改.env文件的VITE_WS_BACKEND_URL的内容，没有就添加一条。<br>默认后端运行的端口是7001,前端服务运行在5173端口。如果你有域名绑定到7001端口,那么将下面的地址直接更改成你的域名</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">VITE_WS_BACKEND_URL</span>=ws://后端服务的域名<br></code></pre></td></tr></table></figure><p>如果你的前端使用了https,那么你还需要为后端服务也配置https。<br>注意：ws要更改成wss,否则会出现连接失败的情况。</p><img src="/2024/06/05/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%88%A9%E5%99%A8%E2%80%94%E2%80%94%E5%9B%BE%E7%89%87%E7%94%9F%E6%88%90%E4%BB%A3%E7%A0%81/7.png" class="" width="488"> &nbsp;<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">VITE_WS_BACKEND_URL</span>=wss://后端服务的域名<br></code></pre></td></tr></table></figure><div class="note note-warning">            <p> 注意:<br>这个地方也是我踩过的坑，我前端用的https。忘记了上面填写的地址是后端服务的，只解析了前端一个域名，所以把前端域名填写进去，一直访问不了或者更换成服务器ip+端口号也是不行，会提示https不能访问ws。后来才想起这是个后端服务，需要绑定一个域名才行。而且要加https。</p>          </div><h3 id="六、遇到的问题"><a href="#六、遇到的问题" class="headerlink" title="六、遇到的问题"></a>六、遇到的问题</h3><p>今天在更改配置之后，运行docker-compose up -d –build后，后端服务器起不来，查看了docker容器的日志，发现是python运行报错，网上也没有找到解决办法，尝试了从github下载最新的，但是还是不行，最后凭着自己的经验应该是python的版本问题，我尝试将python版本升高，发现还是同样的错误，后面再尝试把版本降低，才能正常启动后端服务。</p><img src="/2024/06/05/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%88%A9%E5%99%A8%E2%80%94%E2%80%94%E5%9B%BE%E7%89%87%E7%94%9F%E6%88%90%E4%BB%A3%E7%A0%81/8.png" class="" width="488"> <p>&nbsp;</p><h3 id="七、相关视频"><a href="#七、相关视频" class="headerlink" title="七、相关视频"></a>七、相关视频</h3><iframe width="100%"  minHeight="480" src="https://www.youtube.com/embed/zrILBq-Q9Ek" title="前端开发的福利：再也不用写那么多繁琐的页面布局代码，有了这个图片转代码的工具，能提升90%的开发效率！" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe> ]]></content>
    
    
    <categories>
      
      <category>工具分享</category>
      
      <category>视频教程</category>
      
      <category>技术分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>GPT</tag>
      
      <tag>AI</tag>
      
      <tag>前端开发</tag>
      
      <tag>Claude3</tag>
      
      <tag>GPT-4</tag>
      
      <tag>图片转代码</tag>
      
      <tag>代码生成器</tag>
      
      <tag>代码生成</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>软路由拦截流量实现广告屏蔽</title>
    <link href="/2024/05/20/%E8%BD%AF%E8%B7%AF%E7%94%B1%E6%8B%A6%E6%88%AA%E6%B5%81%E9%87%8F%E5%AE%9E%E7%8E%B0%E5%B9%BF%E5%91%8A%E5%B1%8F%E8%94%BD/"/>
    <url>/2024/05/20/%E8%BD%AF%E8%B7%AF%E7%94%B1%E6%8B%A6%E6%88%AA%E6%B5%81%E9%87%8F%E5%AE%9E%E7%8E%B0%E5%B9%BF%E5%91%8A%E5%B1%8F%E8%94%BD/</url>
    
    <content type="html"><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>最近看视频的时候总是多次出现广告，让人太烦。在浏览器上安装了广告拦截插件也没用，于是想到软路由上是否也能实现广告屏蔽呢？</p><h3 id="一、软路由上安装AdGuardHome"><a href="#一、软路由上安装AdGuardHome" class="headerlink" title="一、软路由上安装AdGuardHome"></a>一、软路由上安装AdGuardHome</h3><p>AdGuardHome是一款开源的广告拦截软件，可以实现广告屏蔽、过滤、跟踪、隐私保护等功能。</p><h4 id="1-首先到github下载安装包，然后到istore应用商店的手动安装页面将下载好的安装包上传"><a href="#1-首先到github下载安装包，然后到istore应用商店的手动安装页面将下载好的安装包上传" class="headerlink" title="1.首先到github下载安装包，然后到istore应用商店的手动安装页面将下载好的安装包上传"></a>1.首先到<a href="https://github.com/AUK9527/Are-u-ok/tree/main/x86">github</a>下载安装包，然后到istore应用商店的手动安装页面将下载好的安装包上传</h4><img src="/2024/05/20/%E8%BD%AF%E8%B7%AF%E7%94%B1%E6%8B%A6%E6%88%AA%E6%B5%81%E9%87%8F%E5%AE%9E%E7%8E%B0%E5%B9%BF%E5%91%8A%E5%B1%8F%E8%94%BD/1.png" class="" width="488"><p>&nbsp;</p><img src="/2024/05/20/%E8%BD%AF%E8%B7%AF%E7%94%B1%E6%8B%A6%E6%88%AA%E6%B5%81%E9%87%8F%E5%AE%9E%E7%8E%B0%E5%B9%BF%E5%91%8A%E5%B1%8F%E8%94%BD/2.png" class="" width="488"><p>&nbsp;</p><h4 id="2-安装完成后，打开AdGuardHome的管理页面，点击左侧的“基本设置”，然后点击“启用”"><a href="#2-安装完成后，打开AdGuardHome的管理页面，点击左侧的“基本设置”，然后点击“启用”" class="headerlink" title="2.安装完成后，打开AdGuardHome的管理页面，点击左侧的“基本设置”，然后点击“启用”"></a>2.安装完成后，打开AdGuardHome的管理页面，点击左侧的“基本设置”，然后点击“启用”</h4><div class="note note-info">            <p>注意要更新一下核心版本，完成之后点击保存并应用</p>          </div><img src="/2024/05/20/%E8%BD%AF%E8%B7%AF%E7%94%B1%E6%8B%A6%E6%88%AA%E6%B5%81%E9%87%8F%E5%AE%9E%E7%8E%B0%E5%B9%BF%E5%91%8A%E5%B1%8F%E8%94%BD/3.png" class="" width="488"><p>&nbsp;</p><h4 id="3-然后到AdGuardHome的设置页面，点击页面中的“AdGuardHome-Web-3000”，然后点击“添加规则”"><a href="#3-然后到AdGuardHome的设置页面，点击页面中的“AdGuardHome-Web-3000”，然后点击“添加规则”" class="headerlink" title="3.然后到AdGuardHome的设置页面，点击页面中的“AdGuardHome Web:3000”，然后点击“添加规则”"></a>3.然后到AdGuardHome的设置页面，点击页面中的“AdGuardHome Web:3000”，然后点击“添加规则”</h4><div class="note note-info">            <p>AdGuardHome的管理界面地址是 <a href="http://192.168.1.1:3000，用户名密码都是admin">http://192.168.1.1:3000，用户名密码都是admin</a><br>192.168.1.1是你的软路由的IP地址，如果是其他的IP地址，请自行修改<br>3000是AdGuardHome的管理端口，如果端口不是3000，请自行修改</p>          </div><img src="/2024/05/20/%E8%BD%AF%E8%B7%AF%E7%94%B1%E6%8B%A6%E6%88%AA%E6%B5%81%E9%87%8F%E5%AE%9E%E7%8E%B0%E5%B9%BF%E5%91%8A%E5%B1%8F%E8%94%BD/4.png" class="" width="488"><p>&nbsp;</p><h4 id="4-点击过滤器-DNS黑名单，然后添加黑名单，输入名称和URL，点击“保存”"><a href="#4-点击过滤器-DNS黑名单，然后添加黑名单，输入名称和URL，点击“保存”" class="headerlink" title="4.点击过滤器&gt;DNS黑名单，然后添加黑名单，输入名称和URL，点击“保存”"></a>4.点击过滤器&gt;DNS黑名单，然后添加黑名单，输入名称和URL，点击“保存”</h4><img src="/2024/05/20/%E8%BD%AF%E8%B7%AF%E7%94%B1%E6%8B%A6%E6%88%AA%E6%B5%81%E9%87%8F%E5%AE%9E%E7%8E%B0%E5%B9%BF%E5%91%8A%E5%B1%8F%E8%94%BD/6.png" class="" width="488"><p>&nbsp;</p><img src="/2024/05/20/%E8%BD%AF%E8%B7%AF%E7%94%B1%E6%8B%A6%E6%88%AA%E6%B5%81%E9%87%8F%E5%AE%9E%E7%8E%B0%E5%B9%BF%E5%91%8A%E5%B1%8F%E8%94%BD/7.png" class="" width="488"><p>&nbsp;</p><div class="note note-info">            <p>将下面的规则加入到过滤规则中，点击“保存”<br>下面这条规则是我测试发现目前能屏蔽掉视频广告的地址，地址原来于<a href="https://github.com/sbwml/halflife-list">github halflife-list</a><br>github上给的地址域名加入到我的软路由提示访问不了，所以我就用下面的域名替换，可以实现访问。如果下面的地址访问不了，请使用github上给的地址或者其他的能访问的域名。</p>          </div><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>fastly.jsdelivr.net<span class="hljs-regexp">/gh/</span>sbwml<span class="hljs-regexp">/halflife-list@master/</span>ad-mo.txt <br></code></pre></td></tr></table></figure><img src="/2024/05/20/%E8%BD%AF%E8%B7%AF%E7%94%B1%E6%8B%A6%E6%88%AA%E6%B5%81%E9%87%8F%E5%AE%9E%E7%8E%B0%E5%B9%BF%E5%91%8A%E5%B1%8F%E8%94%BD/8.png" class="" width="488"><p>&nbsp;</p><h4 id="5-DNS设置，设置你的上游DNS服务器，加速访问速度。"><a href="#5-DNS设置，设置你的上游DNS服务器，加速访问速度。" class="headerlink" title="5.DNS设置，设置你的上游DNS服务器，加速访问速度。"></a>5.DNS设置，设置你的上游DNS服务器，加速访问速度。</h4><div class="note note-info">            <p>下面是我使用的DNS服务器，可以自行替换。<br>设置完成后，点击页面中的测试上游，验证一下DNS是否可用，不可用的删除掉，没有问题之后，点击应用。</p>          </div><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs accesslog"><span class="hljs-number">223.5.5.5</span><br>https://dns10.quad9.net/dns-query<br><span class="hljs-number">8.8.8.8</span><br><span class="hljs-number">114.114.114.114</span><br><span class="hljs-number">101.226.4.6</span><br><span class="hljs-number">180.76.76.76</span><br><span class="hljs-number">58.20.127.238</span><br><span class="hljs-number">58.20.127.170</span><br></code></pre></td></tr></table></figure><img src="/2024/05/20/%E8%BD%AF%E8%B7%AF%E7%94%B1%E6%8B%A6%E6%88%AA%E6%B5%81%E9%87%8F%E5%AE%9E%E7%8E%B0%E5%B9%BF%E5%91%8A%E5%B1%8F%E8%94%BD/9.png" class="" width="488"><p>&nbsp;</p><img src="/2024/05/20/%E8%BD%AF%E8%B7%AF%E7%94%B1%E6%8B%A6%E6%88%AA%E6%B5%81%E9%87%8F%E5%AE%9E%E7%8E%B0%E5%B9%BF%E5%91%8A%E5%B1%8F%E8%94%BD/10.png" class="" width="488"><p>&nbsp;</p><h3 id="二、遇到的问题"><a href="#二、遇到的问题" class="headerlink" title="二、遇到的问题"></a>二、遇到的问题</h3><h4 id="1-配置好之后，发现无法科学上网。手机无法访问youtube"><a href="#1-配置好之后，发现无法科学上网。手机无法访问youtube" class="headerlink" title="1.配置好之后，发现无法科学上网。手机无法访问youtube"></a>1.配置好之后，发现无法科学上网。手机无法访问youtube</h4><p>1.1可以尝试更换软路由的节点，先确保科学上网是正常的。<br>1.2点击adguardhome的管理页面中的禁用保护，尝试访问。<br>1.3如果还是无法访问，请关闭adguardhome，再尝试访问。如果关闭之后能访问，再开启adguardhome及启用保护。</p><img src="/2024/05/20/%E8%BD%AF%E8%B7%AF%E7%94%B1%E6%8B%A6%E6%88%AA%E6%B5%81%E9%87%8F%E5%AE%9E%E7%8E%B0%E5%B9%BF%E5%91%8A%E5%B1%8F%E8%94%BD/12.png" class="" width="488"><p>&nbsp;</p><img src="/2024/05/20/%E8%BD%AF%E8%B7%AF%E7%94%B1%E6%8B%A6%E6%88%AA%E6%B5%81%E9%87%8F%E5%AE%9E%E7%8E%B0%E5%B9%BF%E5%91%8A%E5%B1%8F%E8%94%BD/11.png" class="" width="488"><p>&nbsp;</p><h3 id="三、浏览器安装广告拦截插件"><a href="#三、浏览器安装广告拦截插件" class="headerlink" title="三、浏览器安装广告拦截插件"></a>三、浏览器安装广告拦截插件</h3><h4 id="1-如果没有软路由，想屏蔽浏览器的视频广告，可以安装浏览器插件tampermonkey。"><a href="#1-如果没有软路由，想屏蔽浏览器的视频广告，可以安装浏览器插件tampermonkey。" class="headerlink" title="1.如果没有软路由，想屏蔽浏览器的视频广告，可以安装浏览器插件tampermonkey。"></a>1.如果没有软路由，想屏蔽浏览器的视频广告，可以安装<a href="https://www.tampermonkey.net/">浏览器插件tampermonkey</a>。</h4><h4 id="2-插件安装成功后，再到tampermonkey的管理页面，点击下面的地址安装广告屏蔽脚本。"><a href="#2-插件安装成功后，再到tampermonkey的管理页面，点击下面的地址安装广告屏蔽脚本。" class="headerlink" title="2.插件安装成功后，再到tampermonkey的管理页面，点击下面的地址安装广告屏蔽脚本。"></a>2.插件安装成功后，再到tampermonkey的管理页面，点击下面的地址安装广告屏蔽脚本。</h4><p><a href="https://github.com/TheRealJoelmatic/RemoveAdblockThing/raw/main/Youtube-Ad-blocker-Reminder-Remover.user.js">点击去安装脚本</a></p><img src="/2024/05/20/%E8%BD%AF%E8%B7%AF%E7%94%B1%E6%8B%A6%E6%88%AA%E6%B5%81%E9%87%8F%E5%AE%9E%E7%8E%B0%E5%B9%BF%E5%91%8A%E5%B1%8F%E8%94%BD/13.png" class="" width="488"><p>&nbsp;</p><h4 id="3-安装成功之后，启用脚本，刷新页面，就可以屏蔽掉视频广告了。"><a href="#3-安装成功之后，启用脚本，刷新页面，就可以屏蔽掉视频广告了。" class="headerlink" title="3.安装成功之后，启用脚本，刷新页面，就可以屏蔽掉视频广告了。"></a>3.安装成功之后，启用脚本，刷新页面，就可以屏蔽掉视频广告了。</h4><img src="/2024/05/20/%E8%BD%AF%E8%B7%AF%E7%94%B1%E6%8B%A6%E6%88%AA%E6%B5%81%E9%87%8F%E5%AE%9E%E7%8E%B0%E5%B9%BF%E5%91%8A%E5%B1%8F%E8%94%BD/14.png" class="" width="488"><p>&nbsp;</p>]]></content>
    
    
    <categories>
      
      <category>技术教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>软路由</tag>
      
      <tag>广告拦截</tag>
      
      <tag>广告屏蔽</tag>
      
      <tag>AdGuardHome</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>利用CloudFlare和Telegraph实现免费托管图片</title>
    <link href="/2024/04/23/%E5%88%A9%E7%94%A8CloudFlare%E5%92%8CTelegraph%E5%AE%9E%E7%8E%B0%E5%85%8D%E8%B4%B9%E6%89%98%E7%AE%A1%E5%9B%BE%E7%89%87/"/>
    <url>/2024/04/23/%E5%88%A9%E7%94%A8CloudFlare%E5%92%8CTelegraph%E5%AE%9E%E7%8E%B0%E5%85%8D%E8%B4%B9%E6%89%98%E7%AE%A1%E5%9B%BE%E7%89%87/</url>
    
    <content type="html"><![CDATA[<h3 id="一-前言"><a href="#一-前言" class="headerlink" title="一.前言"></a>一.前言</h3><p>之前一直是将图片存放在阿里云的oss上，它是按照存储和流量来计费，一年也是笔不小的费用。最近一直在了解CloudFlare,发现通过他的pages，可以将图片无限制的存储到Telegraph上。这对于我们这种独立开发者或者初创型的小公司来说，简直太适合了！</p><h4 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h4><p>1.因为是存放到Telegraph，图片无存储限制<br>2.完全免费<br>3.无需购买服务器<br>4.支持图片审查<br>5.支持后台图片管理</p><h4 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h4><p>1.因为是存放到Telegraph，单张图片&#x2F;视频大小不能超过5M<br>2.使用cloudflare提供访问，每日浏览量不超过100万<br>虽然有上述缺点，但是对于大部分用户来说，其实已经足够，如果真的超过了100万的浏览量，购买cloudflare的付费服务，每月也只需要5美元。</p><h3 id="二-所需工具"><a href="#二-所需工具" class="headerlink" title="二.所需工具"></a>二.所需工具</h3><p>1.github账号<br>2.cloudflare账号<br>3.域名(cloudflare分配的域名国内直接访问不了，需要科学上网，如果需要国内访问，需要绑定自己的域名)<br>4.需要将域名托管到cloudflare(可选)<br>参考教程： <a href="/2024/04/09/%E5%B0%86%E5%9F%9F%E5%90%8D%E6%89%98%E7%AE%A1%E5%88%B0Cloudflare%EF%BC%8C%E5%AE%9E%E7%8E%B0%E5%85%A8%E7%AB%99https%E8%AE%BF%E9%97%AE/" title="将域名托管到Cloudflare，实现全站https访问">如何将域名托管到CloudFlare-点击查看</a></p><div class="note note-warning">            <p>注意：<br>1.如果只是实现图片的托管，域名可以不用托管到cloudflare;<br>2.如果要实现图片的图片压缩缩放、剪裁、水印、滤镜，需要将域名托管到cloudflare,因为使用的是workers，workers如果要绑定自定义域名，必须将域名托管到cloudflare</p>          </div><p>5.git</p><h3 id="三-实现图片托管"><a href="#三-实现图片托管" class="headerlink" title="三.实现图片托管"></a>三.实现图片托管</h3><h4 id="1-fork代码到自己的github"><a href="#1-fork代码到自己的github" class="headerlink" title="1.fork代码到自己的github"></a>1.fork代码到自己的github</h4><p>开源项目：Telegraph-Image<br><a href="https://github.com/cf-pages/Telegraph-Image">原项目地址</a><br><a href="https://github.com/njzzzz/Telegraph-Image">增加auth项目地址</a><br><a href="https://github.com/kkhh26864/Telegraph-Image">我的项目地址</a></p><div class="note note-warning">            <p>注意：<br>1.原项目指的是这个项目的原作者开源的代码<br>2.增加auth是其他人在原项目的基础上增加auth身份验证，防止任何人都可以上传<br>3.我的项目是合并了原项目和auth的功能，因为原项目已经做了更新，我这个既保存了原项目的最新功能，又同时拥有auth功能</p>          </div><img src="/2024/04/23/%E5%88%A9%E7%94%A8CloudFlare%E5%92%8CTelegraph%E5%AE%9E%E7%8E%B0%E5%85%8D%E8%B4%B9%E6%89%98%E7%AE%A1%E5%9B%BE%E7%89%87/1.png" class="" width="488"><p>&nbsp;<br>fork之后会在你的代码仓库看到这个开源项目，后面cloudflare中需要用到</p><img src="/2024/04/23/%E5%88%A9%E7%94%A8CloudFlare%E5%92%8CTelegraph%E5%AE%9E%E7%8E%B0%E5%85%8D%E8%B4%B9%E6%89%98%E7%AE%A1%E5%9B%BE%E7%89%87/2.png" class="" width="488"><h4 id="2-cloudflare创建pages"><a href="#2-cloudflare创建pages" class="headerlink" title="2.cloudflare创建pages"></a>2.cloudflare创建pages</h4><h5 id="2-1-登录到CloudFlare-Workers和Pages-概述，点击创建应用程序"><a href="#2-1-登录到CloudFlare-Workers和Pages-概述，点击创建应用程序" class="headerlink" title="2.1 登录到CloudFlare&gt;Workers和Pages&gt;概述，点击创建应用程序"></a>2.1 登录到CloudFlare&gt;Workers和Pages&gt;概述，点击创建应用程序</h5><img src="/2024/04/23/%E5%88%A9%E7%94%A8CloudFlare%E5%92%8CTelegraph%E5%AE%9E%E7%8E%B0%E5%85%8D%E8%B4%B9%E6%89%98%E7%AE%A1%E5%9B%BE%E7%89%87/3.png" class="" width="488"><p>&nbsp;</p><h5 id="2-2-进入创建应用程序页面，点击Pages-连接到Git"><a href="#2-2-进入创建应用程序页面，点击Pages-连接到Git" class="headerlink" title="2.2 进入创建应用程序页面，点击Pages&gt;连接到Git"></a>2.2 进入创建应用程序页面，点击Pages&gt;连接到Git</h5><img src="/2024/04/23/%E5%88%A9%E7%94%A8CloudFlare%E5%92%8CTelegraph%E5%AE%9E%E7%8E%B0%E5%85%8D%E8%B4%B9%E6%89%98%E7%AE%A1%E5%9B%BE%E7%89%87/4.png" class="" width="488"><p>&nbsp;</p><h5 id="2-3-添加你的github账户，选择一个存储库，点击开始设置"><a href="#2-3-添加你的github账户，选择一个存储库，点击开始设置" class="headerlink" title="2.3 添加你的github账户，选择一个存储库，点击开始设置"></a>2.3 添加你的github账户，选择一个存储库，点击开始设置</h5><div class="note note-warning">            <p>注意：<br>1.连接github需要二次验证，需要输入验证码授权才能登录和授权cloudflare访问你的github,ios使用的Authenticator App获取github验证码<br>2.存储库必须要点击一下，开始设置按钮才能点击</p>          </div> <img src="/2024/04/23/%E5%88%A9%E7%94%A8CloudFlare%E5%92%8CTelegraph%E5%AE%9E%E7%8E%B0%E5%85%8D%E8%B4%B9%E6%89%98%E7%AE%A1%E5%9B%BE%E7%89%87/5.png" class="" width="488"><p>&nbsp;</p><h5 id="2-4-选择你的github仓库中的Telegraph-Image，或者你也可以授权让他访问整个账号下的仓库"><a href="#2-4-选择你的github仓库中的Telegraph-Image，或者你也可以授权让他访问整个账号下的仓库" class="headerlink" title="2.4 选择你的github仓库中的Telegraph-Image，或者你也可以授权让他访问整个账号下的仓库"></a>2.4 选择你的github仓库中的Telegraph-Image，或者你也可以授权让他访问整个账号下的仓库</h5><img src="/2024/04/23/%E5%88%A9%E7%94%A8CloudFlare%E5%92%8CTelegraph%E5%AE%9E%E7%8E%B0%E5%85%8D%E8%B4%B9%E6%89%98%E7%AE%A1%E5%9B%BE%E7%89%87/6.png" class="" width="488"><p>&nbsp;</p><h6 id="2-4-1-输入github二次验证码"><a href="#2-4-1-输入github二次验证码" class="headerlink" title="2.4.1 输入github二次验证码"></a>2.4.1 输入github二次验证码</h6><img src="/2024/04/23/%E5%88%A9%E7%94%A8CloudFlare%E5%92%8CTelegraph%E5%AE%9E%E7%8E%B0%E5%85%8D%E8%B4%B9%E6%89%98%E7%AE%A1%E5%9B%BE%E7%89%87/7.png" class="" width="488"><p>&nbsp;</p><img src="/2024/04/23/%E5%88%A9%E7%94%A8CloudFlare%E5%92%8CTelegraph%E5%AE%9E%E7%8E%B0%E5%85%8D%E8%B4%B9%E6%89%98%E7%AE%A1%E5%9B%BE%E7%89%87/8.png" class="" width="488"><p>&nbsp;</p><h6 id="2-4-2-选择存储库，点击开始设置"><a href="#2-4-2-选择存储库，点击开始设置" class="headerlink" title="2.4.2 选择存储库，点击开始设置"></a>2.4.2 选择存储库，点击开始设置</h6><img src="/2024/04/23/%E5%88%A9%E7%94%A8CloudFlare%E5%92%8CTelegraph%E5%AE%9E%E7%8E%B0%E5%85%8D%E8%B4%B9%E6%89%98%E7%AE%A1%E5%9B%BE%E7%89%87/9.png" class="" width="488"><p>&nbsp;</p><h6 id="2-4-3-参数默认就行-也可以根据更改项目名称，环境变量也可以根据需要填写或者后面再更改，点击保存并部署"><a href="#2-4-3-参数默认就行-也可以根据更改项目名称，环境变量也可以根据需要填写或者后面再更改，点击保存并部署" class="headerlink" title="2.4.3 参数默认就行,也可以根据更改项目名称，环境变量也可以根据需要填写或者后面再更改，点击保存并部署"></a>2.4.3 参数默认就行,也可以根据更改项目名称，环境变量也可以根据需要填写或者后面再更改，点击保存并部署</h6><img src="/2024/04/23/%E5%88%A9%E7%94%A8CloudFlare%E5%92%8CTelegraph%E5%AE%9E%E7%8E%B0%E5%85%8D%E8%B4%B9%E6%89%98%E7%AE%A1%E5%9B%BE%E7%89%87/10.png" class="" width="488"><p>&nbsp;</p><img src="/2024/04/23/%E5%88%A9%E7%94%A8CloudFlare%E5%92%8CTelegraph%E5%AE%9E%E7%8E%B0%E5%85%8D%E8%B4%B9%E6%89%98%E7%AE%A1%E5%9B%BE%E7%89%87/11.png" class="" width="488"><p>&nbsp;</p><div class="note note-warning">            <p>注意：通过cloudflare给我们分配的域名如果访问失败，需要开启科学上网工具。这就是需要一个自己域名的原因，域名的绑定可以继续看后续的操作。</p>          </div><img src="/2024/04/23/%E5%88%A9%E7%94%A8CloudFlare%E5%92%8CTelegraph%E5%AE%9E%E7%8E%B0%E5%85%8D%E8%B4%B9%E6%89%98%E7%AE%A1%E5%9B%BE%E7%89%87/12.png" class="" width="488"><p>&nbsp;</p><h3 id="四-绑定域名"><a href="#四-绑定域名" class="headerlink" title="四.绑定域名"></a>四.绑定域名</h3><h4 id="4-1-在workers和pages下的概述中，找到创建的pages"><a href="#4-1-在workers和pages下的概述中，找到创建的pages" class="headerlink" title="4.1 在workers和pages下的概述中，找到创建的pages"></a>4.1 在workers和pages下的概述中，找到创建的pages</h4><img src="/2024/04/23/%E5%88%A9%E7%94%A8CloudFlare%E5%92%8CTelegraph%E5%AE%9E%E7%8E%B0%E5%85%8D%E8%B4%B9%E6%89%98%E7%AE%A1%E5%9B%BE%E7%89%87/14.png" class="" width="488"><p>&nbsp;</p><h4 id="4-2-点击自定义域下的设置自定义域"><a href="#4-2-点击自定义域下的设置自定义域" class="headerlink" title="4.2 点击自定义域下的设置自定义域"></a>4.2 点击自定义域下的设置自定义域</h4><img src="/2024/04/23/%E5%88%A9%E7%94%A8CloudFlare%E5%92%8CTelegraph%E5%AE%9E%E7%8E%B0%E5%85%8D%E8%B4%B9%E6%89%98%E7%AE%A1%E5%9B%BE%E7%89%87/13.png" class="" width="488"><p>&nbsp;</p><h4 id="4-3-填写域名或二级域名，点击继续"><a href="#4-3-填写域名或二级域名，点击继续" class="headerlink" title="4.3 填写域名或二级域名，点击继续"></a>4.3 填写域名或二级域名，点击继续</h4><img src="/2024/04/23/%E5%88%A9%E7%94%A8CloudFlare%E5%92%8CTelegraph%E5%AE%9E%E7%8E%B0%E5%85%8D%E8%B4%B9%E6%89%98%E7%AE%A1%E5%9B%BE%E7%89%87/15.png" class="" width="488"><p>&nbsp;</p><h4 id="4-4-根据cloudflare提供的DNS信息，到你的域名管理DNS中添加一条CNAME解析"><a href="#4-4-根据cloudflare提供的DNS信息，到你的域名管理DNS中添加一条CNAME解析" class="headerlink" title="4.4 根据cloudflare提供的DNS信息，到你的域名管理DNS中添加一条CNAME解析"></a>4.4 根据cloudflare提供的DNS信息，到你的域名管理DNS中添加一条CNAME解析</h4><div class="note note-warning">            <p>注意：如果域名是托管在cloudflare中，点击激活域名会自动添加一条解析记录。其他的需要到自己的域名供应商的管理中添加</p>          </div><img src="/2024/04/23/%E5%88%A9%E7%94%A8CloudFlare%E5%92%8CTelegraph%E5%AE%9E%E7%8E%B0%E5%85%8D%E8%B4%B9%E6%89%98%E7%AE%A1%E5%9B%BE%E7%89%87/16.png" class="" width="488"><p>&nbsp;</p><img src="/2024/04/23/%E5%88%A9%E7%94%A8CloudFlare%E5%92%8CTelegraph%E5%AE%9E%E7%8E%B0%E5%85%8D%E8%B4%B9%E6%89%98%E7%AE%A1%E5%9B%BE%E7%89%87/17.png" class="" width="488"><p>&nbsp;</p><img src="/2024/04/23/%E5%88%A9%E7%94%A8CloudFlare%E5%92%8CTelegraph%E5%AE%9E%E7%8E%B0%E5%85%8D%E8%B4%B9%E6%89%98%E7%AE%A1%E5%9B%BE%E7%89%87/18.png" class="" width="488"><p>&nbsp;</p><img src="/2024/04/23/%E5%88%A9%E7%94%A8CloudFlare%E5%92%8CTelegraph%E5%AE%9E%E7%8E%B0%E5%85%8D%E8%B4%B9%E6%89%98%E7%AE%A1%E5%9B%BE%E7%89%87/19.png" class="" width="488"><p>&nbsp;</p><h4 id="4-5-生效后，即可使用自定义域名访问"><a href="#4-5-生效后，即可使用自定义域名访问" class="headerlink" title="4.5 生效后，即可使用自定义域名访问"></a>4.5 生效后，即可使用自定义域名访问</h4><img src="/2024/04/23/%E5%88%A9%E7%94%A8CloudFlare%E5%92%8CTelegraph%E5%AE%9E%E7%8E%B0%E5%85%8D%E8%B4%B9%E6%89%98%E7%AE%A1%E5%9B%BE%E7%89%87/20.png" class="" width="488"><p>&nbsp;</p><img src="/2024/04/23/%E5%88%A9%E7%94%A8CloudFlare%E5%92%8CTelegraph%E5%AE%9E%E7%8E%B0%E5%85%8D%E8%B4%B9%E6%89%98%E7%AE%A1%E5%9B%BE%E7%89%87/21.png" class="" width="488"><p>&nbsp;</p><h3 id="五-配置参数-实现图片管理"><a href="#五-配置参数-实现图片管理" class="headerlink" title="五.配置参数,实现图片管理"></a>五.配置参数,实现图片管理</h3><h4 id="5-1-获取图片审查API的key"><a href="#5-1-获取图片审查API的key" class="headerlink" title="5.1 获取图片审查API的key"></a>5.1 获取图片审查API的key</h4><p>前往<a href="https://moderatecontent.com/">https://moderatecontent.com/</a> 注册并获得一个免费的用于审查图像内容的 API key</p><img src="/2024/04/23/%E5%88%A9%E7%94%A8CloudFlare%E5%92%8CTelegraph%E5%AE%9E%E7%8E%B0%E5%85%8D%E8%B4%B9%E6%89%98%E7%AE%A1%E5%9B%BE%E7%89%87/22.png" class="" width="488"><p>&nbsp;</p><h4 id="5-2-配置函数-开启后台管理"><a href="#5-2-配置函数-开启后台管理" class="headerlink" title="5.2 配置函数,开启后台管理"></a>5.2 配置函数,开启后台管理</h4><h5 id="5-2-1-配置KV"><a href="#5-2-1-配置KV" class="headerlink" title="5.2.1 配置KV"></a>5.2.1 配置KV</h5><p>进入workers和pages菜单下的KV，点击创建命名空间</p><img src="/2024/04/23/%E5%88%A9%E7%94%A8CloudFlare%E5%92%8CTelegraph%E5%AE%9E%E7%8E%B0%E5%85%8D%E8%B4%B9%E6%89%98%E7%AE%A1%E5%9B%BE%E7%89%87/25.png" class="" width="488"><p>&nbsp;</p><img src="/2024/04/23/%E5%88%A9%E7%94%A8CloudFlare%E5%92%8CTelegraph%E5%AE%9E%E7%8E%B0%E5%85%8D%E8%B4%B9%E6%89%98%E7%AE%A1%E5%9B%BE%E7%89%87/26.png" class="" width="488"><p>&nbsp;</p><h5 id="5-2-2-配置函数"><a href="#5-2-2-配置函数" class="headerlink" title="5.2.2 配置函数"></a>5.2.2 配置函数</h5><p>进入pages项目下，点击设置&gt;函数&gt;KV 命名空间绑定，点击添加绑定</p><img src="/2024/04/23/%E5%88%A9%E7%94%A8CloudFlare%E5%92%8CTelegraph%E5%AE%9E%E7%8E%B0%E5%85%8D%E8%B4%B9%E6%89%98%E7%AE%A1%E5%9B%BE%E7%89%87/27.png" class="" width="488"><p>&nbsp;<br>添加变量名和上一步设置的命名空间，注意变量名一定不要填错<br>变量名：img_url</p><img src="/2024/04/23/%E5%88%A9%E7%94%A8CloudFlare%E5%92%8CTelegraph%E5%AE%9E%E7%8E%B0%E5%85%8D%E8%B4%B9%E6%89%98%E7%AE%A1%E5%9B%BE%E7%89%87/28.png" class="" width="488"><p>&nbsp; </p><h5 id="5-2-3-重新部署，访问管理后台"><a href="#5-2-3-重新部署，访问管理后台" class="headerlink" title="5.2.3 重新部署，访问管理后台"></a>5.2.3 重新部署，访问管理后台</h5><p>进入pages项目下，点击部署&gt;重试部署<br>待部署成功之后，通过域名+&#x2F;admin即可访问管理后台</p><img src="/2024/04/23/%E5%88%A9%E7%94%A8CloudFlare%E5%92%8CTelegraph%E5%AE%9E%E7%8E%B0%E5%85%8D%E8%B4%B9%E6%89%98%E7%AE%A1%E5%9B%BE%E7%89%87/29.png" class="" width="488"><p>&nbsp;</p><img src="/2024/04/23/%E5%88%A9%E7%94%A8CloudFlare%E5%92%8CTelegraph%E5%AE%9E%E7%8E%B0%E5%85%8D%E8%B4%B9%E6%89%98%E7%AE%A1%E5%9B%BE%E7%89%87/30.png" class="" width="488"><p>&nbsp; </p><h4 id="5-3-配置变量，开启auth-账号访问-白名单-图片审查"><a href="#5-3-配置变量，开启auth-账号访问-白名单-图片审查" class="headerlink" title="5.3 配置变量，开启auth,账号访问,白名单,图片审查"></a>5.3 配置变量，开启auth,账号访问,白名单,图片审查</h4><h5 id="5-3-1-进入pages项目下，点击设置-环境变量-为生产环境定义变量-添加变量"><a href="#5-3-1-进入pages项目下，点击设置-环境变量-为生产环境定义变量-添加变量" class="headerlink" title="5.3.1 进入pages项目下，点击设置&gt;环境变量&gt;为生产环境定义变量,添加变量"></a>5.3.1 进入pages项目下，点击设置&gt;环境变量&gt;为生产环境定义变量,添加变量</h5><img src="/2024/04/23/%E5%88%A9%E7%94%A8CloudFlare%E5%92%8CTelegraph%E5%AE%9E%E7%8E%B0%E5%85%8D%E8%B4%B9%E6%89%98%E7%AE%A1%E5%9B%BE%E7%89%87/23.png" class="" width="488"><p>&nbsp;</p><div class="note note-warning">            <p>注意：<br>环境变量的变量名必须与下面的相同，内容根据自己的设定。<br>BASIC_USER:图片管理的登录用户名<br>BASIC_PASS:图片管理的登录密码<br>ModerateContentApiKey:图片审查API的key。配置图片审查之后，一些不合规的图片会自动屏蔽，不会显示。<br>WhiteList_Mode:开启白名单，true表示开启，false表示关闭。开启白名单之后，所有上传的图片默认都是不能访问，需要到管理中把图片加入白名单才可访问<br>AUTH_CODE:设置一个密码后，访问上传页面需要输入你设置的这个密码才能上传。这个功能原项目中并没有，需要从fork我的项目才能使用。</p>          </div><img src="/2024/04/23/%E5%88%A9%E7%94%A8CloudFlare%E5%92%8CTelegraph%E5%AE%9E%E7%8E%B0%E5%85%8D%E8%B4%B9%E6%89%98%E7%AE%A1%E5%9B%BE%E7%89%87/48.png" class="" width="488"><p>&nbsp;</p><h5 id="5-3-2-重新部署，访问管理后台"><a href="#5-3-2-重新部署，访问管理后台" class="headerlink" title="5.3.2 重新部署，访问管理后台"></a>5.3.2 重新部署，访问管理后台</h5><p>设置更改环境变量后函数，都需要重新部署</p><img src="/2024/04/23/%E5%88%A9%E7%94%A8CloudFlare%E5%92%8CTelegraph%E5%AE%9E%E7%8E%B0%E5%85%8D%E8%B4%B9%E6%89%98%E7%AE%A1%E5%9B%BE%E7%89%87/29.png" class="" width="488"><p>&nbsp;<br>设置了管理后台的登录账号和密码，需要输入正确的账号和才能访问管理后台</p><img src="/2024/04/23/%E5%88%A9%E7%94%A8CloudFlare%E5%92%8CTelegraph%E5%AE%9E%E7%8E%B0%E5%85%8D%E8%B4%B9%E6%89%98%E7%AE%A1%E5%9B%BE%E7%89%87/31.png" class="" width="488"><p>&nbsp;<br>设置了auth之后，需要输入密码才能上传图片</p><img src="/2024/04/23/%E5%88%A9%E7%94%A8CloudFlare%E5%92%8CTelegraph%E5%AE%9E%E7%8E%B0%E5%85%8D%E8%B4%B9%E6%89%98%E7%AE%A1%E5%9B%BE%E7%89%87/49.png" class="" width="488"><p>&nbsp;<br>开启白名单功能后，上传的图片无法直接访问，需要到管理后台把上传的图片加入白名单才能访问</p><img src="/2024/04/23/%E5%88%A9%E7%94%A8CloudFlare%E5%92%8CTelegraph%E5%AE%9E%E7%8E%B0%E5%85%8D%E8%B4%B9%E6%89%98%E7%AE%A1%E5%9B%BE%E7%89%87/50.png" class="" width="488"><p>&nbsp;</p><h3 id="六-进阶玩法：实现图片压缩缩放、剪裁、水印、滤镜"><a href="#六-进阶玩法：实现图片压缩缩放、剪裁、水印、滤镜" class="headerlink" title="六.进阶玩法：实现图片压缩缩放、剪裁、水印、滤镜"></a>六.进阶玩法：实现图片压缩缩放、剪裁、水印、滤镜</h3><p>上面实现了图片的存储，访问及管理，但是还缺少一个类似oss的图片处理功能，比如oss上可以在图片地址后加一些参数即可改变返回图片的大小，这个还是非常有用的，对于优化图片的加载速度非常好！ 利用cloudflare的workers同样可以实现。<br>这个功能是利用开源项目cloudflare-worker-image来实现，<a href="https://github.com/ccbikai/cloudflare-worker-image">项目地址</a></p><h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><p>1.支持 PNG、JPEG、BMP、ICO、TIFF 格式图片处理<br>2.可输出 JPEG、PNG、WEBP 格式图片，默认输出 WEBP 格式图片<br>3.支持管道操作，可以执行多个操作<br>4.支持 Cloudflare 缓存<br>5.支持图片地址白名单，防滥用</p><h4 id="6-1-下载cloudflare-worker-image到本机"><a href="#6-1-下载cloudflare-worker-image到本机" class="headerlink" title="6.1 下载cloudflare-worker-image到本机"></a>6.1 下载cloudflare-worker-image到本机</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 克隆此项目</span><br>git <span class="hljs-built_in">clone</span> https://github.com/ccbikai/cloudflare-worker-image.git<br><span class="hljs-built_in">cd</span> cloudflare-worker-image<br></code></pre></td></tr></table></figure><img src="/2024/04/23/%E5%88%A9%E7%94%A8CloudFlare%E5%92%8CTelegraph%E5%AE%9E%E7%8E%B0%E5%85%8D%E8%B4%B9%E6%89%98%E7%AE%A1%E5%9B%BE%E7%89%87/37.png" class="" width="488"><p>&nbsp;</p><h4 id="6-2-安装依赖"><a href="#6-2-安装依赖" class="headerlink" title="6.2 安装依赖"></a>6.2 安装依赖</h4><p>需要安装pnpm,node的版本要大于18</p><img src="/2024/04/23/%E5%88%A9%E7%94%A8CloudFlare%E5%92%8CTelegraph%E5%AE%9E%E7%8E%B0%E5%85%8D%E8%B4%B9%E6%89%98%E7%AE%A1%E5%9B%BE%E7%89%87/38.png" class="" width="488"><p>&nbsp;</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ada"># patch 功能依赖 pnpm, 如果不使用 pnpm, 需要自己处理 patch-<span class="hljs-keyword">package</span> <span class="hljs-title">https://www.npmjs.com/<span class="hljs-keyword">package</span>/patch-<span class="hljs-keyword">package</span></span><br>npm i -g pnpm <br><br># 安装依赖<br>pnpm install  <br><br></code></pre></td></tr></table></figure><h4 id="6-3修改白名单配置，改为图片域名或者留空不限制图片地址"><a href="#6-3修改白名单配置，改为图片域名或者留空不限制图片地址" class="headerlink" title="6.3修改白名单配置，改为图片域名或者留空不限制图片地址"></a>6.3修改白名单配置，改为图片域名或者留空不限制图片地址</h4><p>白名单设置的域名就是你图片地址的访问域名，比如<a href="http://img.xxx.com/file/2329032093.png,%E4%BD%A0%E5%8F%AF%E4%BB%A5%E8%AE%BE%E7%BD%AE%E5%AE%8C%E6%95%B4%E7%9A%84%E4%BA%8C%E7%BA%A7%E5%9F%9F%E5%90%8Dimg.xxx.com%E4%B9%9F%E5%8F%AF%E4%BB%A5%E8%AE%BE%E7%BD%AE%E9%A1%B6%E7%BA%A7%E5%9F%9F%E5%90%8Dxxx.com%EF%BC%8C%E5%BB%BA%E8%AE%AE%E8%AE%BE%E7%BD%AE%E9%A1%B6%E7%BA%A7%E5%9F%9F%E5%90%8D%E3%80%82">http://img.xxx.com/file/2329032093.png,你可以设置完整的二级域名img.xxx.com也可以设置顶级域名xxx.com，建议设置顶级域名。</a></p><img src="/2024/04/23/%E5%88%A9%E7%94%A8CloudFlare%E5%92%8CTelegraph%E5%AE%9E%E7%8E%B0%E5%85%8D%E8%B4%B9%E6%89%98%E7%AE%A1%E5%9B%BE%E7%89%87/39.png" class="" width="488"><p>&nbsp;</p><h4 id="6-4-部署项目"><a href="#6-4-部署项目" class="headerlink" title="6.4 部署项目"></a>6.4 部署项目</h4><p>在项目的根目录下运行npm run deploy将项目部署到cloudflare workers<br>部署成功后可以通过cloudflare分配的域名访问(如果访问不了，需要开启科学上网)</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment"># 发布</span><br>npm <span class="hljs-built_in">run</span> deploy<br></code></pre></td></tr></table></figure><img src="/2024/04/23/%E5%88%A9%E7%94%A8CloudFlare%E5%92%8CTelegraph%E5%AE%9E%E7%8E%B0%E5%85%8D%E8%B4%B9%E6%89%98%E7%AE%A1%E5%9B%BE%E7%89%87/39.png" class="" width="488"><p>&nbsp;</p><img src="/2024/04/23/%E5%88%A9%E7%94%A8CloudFlare%E5%92%8CTelegraph%E5%AE%9E%E7%8E%B0%E5%85%8D%E8%B4%B9%E6%89%98%E7%AE%A1%E5%9B%BE%E7%89%87/40.png" class="" width="488"><p>&nbsp;</p><img src="/2024/04/23/%E5%88%A9%E7%94%A8CloudFlare%E5%92%8CTelegraph%E5%AE%9E%E7%8E%B0%E5%85%8D%E8%B4%B9%E6%89%98%E7%AE%A1%E5%9B%BE%E7%89%87/41.png" class="" width="488"><p>&nbsp;</p><img src="/2024/04/23/%E5%88%A9%E7%94%A8CloudFlare%E5%92%8CTelegraph%E5%AE%9E%E7%8E%B0%E5%85%8D%E8%B4%B9%E6%89%98%E7%AE%A1%E5%9B%BE%E7%89%87/42.png" class="" width="488"><p>&nbsp;</p><img src="/2024/04/23/%E5%88%A9%E7%94%A8CloudFlare%E5%92%8CTelegraph%E5%AE%9E%E7%8E%B0%E5%85%8D%E8%B4%B9%E6%89%98%E7%AE%A1%E5%9B%BE%E7%89%87/43.png" class="" width="488"><p>&nbsp;</p><img src="/2024/04/23/%E5%88%A9%E7%94%A8CloudFlare%E5%92%8CTelegraph%E5%AE%9E%E7%8E%B0%E5%85%8D%E8%B4%B9%E6%89%98%E7%AE%A1%E5%9B%BE%E7%89%87/44.png" class="" width="488"><p>&nbsp;</p><h4 id="6-5-绑定域名"><a href="#6-5-绑定域名" class="headerlink" title="6.5 绑定域名"></a>6.5 绑定域名</h4><p>由于这个项目是用workers方式，和pages的方式不同，pages中有个自定义域选项，这个workers是没有的。如果要绑定域名，必须要先把域名托管到cloudflare上。<br>域名托管cloudflare参考教程： <a href="/2024/04/09/%E5%B0%86%E5%9F%9F%E5%90%8D%E6%89%98%E7%AE%A1%E5%88%B0Cloudflare%EF%BC%8C%E5%AE%9E%E7%8E%B0%E5%85%A8%E7%AB%99https%E8%AE%BF%E9%97%AE/" title="将域名托管到Cloudflare，实现全站https访问">如何将域名托管到CloudFlare-点击查看</a><br>在你的cloudflare域名管理中，点击菜单 Workers路由&gt;添加路由</p><img src="/2024/04/23/%E5%88%A9%E7%94%A8CloudFlare%E5%92%8CTelegraph%E5%AE%9E%E7%8E%B0%E5%85%8D%E8%B4%B9%E6%89%98%E7%AE%A1%E5%9B%BE%E7%89%87/45.png" class="" width="488"><p>&nbsp;</p><img src="/2024/04/23/%E5%88%A9%E7%94%A8CloudFlare%E5%92%8CTelegraph%E5%AE%9E%E7%8E%B0%E5%85%8D%E8%B4%B9%E6%89%98%E7%AE%A1%E5%9B%BE%E7%89%87/46.png" class="" width="488"><p>&nbsp;</p><h4 id="6-6-使用方式"><a href="#6-6-使用方式" class="headerlink" title="6.6 使用方式"></a>6.6 使用方式</h4><p>修改域名和参数即可使用<br>参考：<a href="https://image.fxcxy.com/?url=https://img.fxcxy.com/file/889edfffef4776f6d1cf8.png&action=resize!40,40,5">https://image.fxcxy.com/?url=https://img.fxcxy.com/file/889edfffef4776f6d1cf8.png&amp;action=resize!40,40,5</a></p><img src="/2024/04/23/%E5%88%A9%E7%94%A8CloudFlare%E5%92%8CTelegraph%E5%AE%9E%E7%8E%B0%E5%85%8D%E8%B4%B9%E6%89%98%E7%AE%A1%E5%9B%BE%E7%89%87/47.png" class="" width="488"><p>&nbsp;<br>image.fxcxy.com是你给workers分配的域名<br>image1.fxcxy.com是分配给图片存储的域名<br>参数说明</p><p>url:原图地址，需要使用 encodeURIComponent 编码</p><p>action:操作指令, 支持 Photon 各种操作指令，指令与参数直接使用!分割，参考 resize!830,400,2</p><p>支持管道操作，多个操作指令使用|分割，参考 resize!830,400,2|watermark!https%3A%2F%2Fstatic.miantiao.me%2Fshare%2F6qIq4w%2FFhSUzU.png,10,10</p><p>如果参数中有 URL 或其他特殊字符，需要使用 encodeURIComponent 编码 URL 和 特殊字符</p><p>format:输出图片格式，支持：jpg,webp,png，可选，默认 webp</p><p>quality:图片质量，1-100 只有 webp 和 jpg 格式支持，可选，默认 99</p><h3 id="七-遇到的问题"><a href="#七-遇到的问题" class="headerlink" title="七.遇到的问题"></a>七.遇到的问题</h3><h4 id="7-1-开启了白名单模式后，发现白名单并没有起作用"><a href="#7-1-开启了白名单模式后，发现白名单并没有起作用" class="headerlink" title="7.1.开启了白名单模式后，发现白名单并没有起作用"></a>7.1.开启了白名单模式后，发现白名单并没有起作用</h4><p>遇到这个问题，需要开启浏览器的无痕模式或者用其他浏览器打开，你当前使用的浏览器可能已经记住你的身份信息。另外还可能有延时，当时能访问，过一会就会访问不了。</p><h3 id="八-相关视频"><a href="#八-相关视频" class="headerlink" title="八.相关视频"></a>八.相关视频</h3><iframe width="auto" height="auto" src="https://www.youtube.com/embed/RevnQvMGZqw" title="还在使用收费的oss存储图片？CloudFlare和Telegraph可以实现图片和视频的免费存储且不限容量，你值得拥有！" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>]]></content>
    
    
    <categories>
      
      <category>视频教程</category>
      
      <category>技术分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>图片托管</tag>
      
      <tag>免费图床</tag>
      
      <tag>CloudFlare</tag>
      
      <tag>Telegraph</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Nginx Proxy Manager的配置和使用</title>
    <link href="/2024/04/11/Manager%E7%9A%84%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BD%BF%E7%94%A8/"/>
    <url>/2024/04/11/Manager%E7%9A%84%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>使用nginx配置有点麻烦，每次在更改完配置之后，需要重启服务，如果配置的服务比较多的时候，管理还很混乱，容易出错。所以找到了目前比较流行的nginx的管理工具Nginx Proxy Manager。可视化的操作界面，操作简单，采用docker部署安装，方便快捷。<br><a href="https://nginxproxymanager.com/">Nginx Proxy Manager官网</a></p><h4 id="Nginx-Proxy-Manager优点"><a href="#Nginx-Proxy-Manager优点" class="headerlink" title="Nginx Proxy Manager优点"></a>Nginx Proxy Manager优点</h4><p>无需命令<br>Docker安装<br>非常好的可视化界面<br>快速配置反向代理<br>快速配置重定向<br>一键SSL<br>页面权限控制(Nginx认证)<br>多用户管理<br>操作日志查看<br>分布式部署</p><h3 id="一-安装Nginx-Proxy-Manager"><a href="#一-安装Nginx-Proxy-Manager" class="headerlink" title="一.安装Nginx Proxy Manager"></a>一.安装Nginx Proxy Manager</h3><h4 id="系统环境"><a href="#系统环境" class="headerlink" title="系统环境"></a>系统环境</h4><p>操作系统：linux&#x2F;macOS&#x2F;windows<br>docker<br>docker-compose </p><img src="/2024/04/11/Manager%E7%9A%84%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BD%BF%E7%94%A8/1.png" class="" width="488"><p>&nbsp;<br><a href="https://docs.docker.com/engine/install/">Docker安装教程</a><br><a href="https://docs.docker.com/compose/install/">Docker compose安装教程</a><br><a href="https://learnku.com/server/wikis/39229">Docker for mac安装教程</a><br><a href="https://help.aliyun.com/zh/ecs/use-cases/deploy-and-use-docker-on-alibaba-cloud-linux-2-instances#2afc861105osq">Docker for 阿里云服务器安装教程</a></p><h4 id="Docker镜像"><a href="#Docker镜像" class="headerlink" title="Docker镜像"></a>Docker镜像</h4><p>英文镜像 - jc21&#x2F;nginx-proxy-manager<br>中文镜像 - chishin&#x2F;nginx-proxy-manager-zh</p><h4 id="1-创建nginx-proxy-manager数据存放目录"><a href="#1-创建nginx-proxy-manager数据存放目录" class="headerlink" title="1.创建nginx-proxy-manager数据存放目录"></a>1.创建nginx-proxy-manager数据存放目录</h4><p>方便以后的的迁移和备份，具体路径和文件名字可以自定义。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p docker/data/nginx_proxy_manager<br></code></pre></td></tr></table></figure><h4 id="2-在nginx-proxy-manager目录下创建docker-compose-yml配置文件"><a href="#2-在nginx-proxy-manager目录下创建docker-compose-yml配置文件" class="headerlink" title="2.在nginx-proxy-manager目录下创建docker-compose.yml配置文件"></a>2.在nginx-proxy-manager目录下创建docker-compose.yml配置文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> docker/data/nginx_proxy_manager<br>vim docker-compose.yml<br></code></pre></td></tr></table></figure><p>输入下面的内容，我更改了版本和镜像，用的中文镜像</p><div class="note note-warning">            <p>注意：因为官网上给的是on,我的docker-compose不是最新的版，运行会报错，这里需要将on改成version</p>          </div><img src="/2024/04/11/Manager%E7%9A%84%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BD%BF%E7%94%A8/2.png" class="" width="488"><p>&nbsp;</p><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs nestedtext"><span class="hljs-attribute">version</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&#x27;3.3&#x27;</span><br><span class="hljs-attribute">services</span><span class="hljs-punctuation">:</span><br>  <span class="hljs-attribute">app</span><span class="hljs-punctuation">:</span><br>    <span class="hljs-attribute">image</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&#x27;chishin/nginx-proxy-manager-zh&#x27;</span><br>    <span class="hljs-attribute">restart</span><span class="hljs-punctuation">:</span> <span class="hljs-string">unless-stopped</span><br>    <span class="hljs-attribute">ports</span><span class="hljs-punctuation">:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;80:80&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;81:81&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;443:443&#x27;</span><br>    <span class="hljs-attribute">volumes</span><span class="hljs-punctuation">:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./data:/data</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./letsencrypt:/etc/letsencrypt</span><br></code></pre></td></tr></table></figure><p>最后按ESC,输入下面的命令保存，退出<br>文件保存并退出</p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs clojure"><span class="hljs-symbol">:wq</span><br></code></pre></td></tr></table></figure><h4 id="3-启动docker"><a href="#3-启动docker" class="headerlink" title="3.启动docker"></a>3.启动docker</h4><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">docker-compose up -d</span><br></code></pre></td></tr></table></figure><p>docker-compose up -d 报端口被使用的错误，这是因为我的服务器之前用的nginx，已经将端口占用了，需要先停止原来的服务</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">./nginx -s stop<br></code></pre></td></tr></table></figure><img src="/2024/04/11/Manager%E7%9A%84%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BD%BF%E7%94%A8/3.png" class="" width="488"><p>&nbsp;</p><p>运行成功后，访问Nginx Proxy Manager管理面板：http:&#x2F;&#x2F;服务器ip:81</p><div class="note note-warning">            <p>注意：服务器的网络与安全的安全组中把上面配置的访问端口打开，80,81,443</p>          </div><img src="/2024/04/11/Manager%E7%9A%84%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BD%BF%E7%94%A8/4.png" class="" width="488"><p>&nbsp;</p><h3 id="二-配置Nginx-Proxy-Manager"><a href="#二-配置Nginx-Proxy-Manager" class="headerlink" title="二.配置Nginx Proxy Manager"></a>二.配置Nginx Proxy Manager</h3><p>1.输入http:&#x2F;&#x2F;服务器ip:81打开Nginx Proxy Manager管理面板<br>默认管理账号和密码：</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">Email:</span>    admin@example.com<br><span class="hljs-symbol">Password:</span> changeme<br></code></pre></td></tr></table></figure><p>2.登录后修改名称,邮箱，密码</p><img src="/2024/04/11/Manager%E7%9A%84%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BD%BF%E7%94%A8/5.png" class="" width="488"><p>&nbsp;</p><img src="/2024/04/11/Manager%E7%9A%84%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BD%BF%E7%94%A8/6.png" class="" width="488"><p>&nbsp;</p><h3 id="三-创建CloudFlare-API-令牌"><a href="#三-创建CloudFlare-API-令牌" class="headerlink" title="三.创建CloudFlare API 令牌"></a>三.创建CloudFlare API 令牌</h3><p>进入到托管的域名中-概述-获取您的API令牌-创建令牌</p><img src="/2024/04/11/Manager%E7%9A%84%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BD%BF%E7%94%A8/8.png" class="" width="488"><p>&nbsp;</p><img src="/2024/04/11/Manager%E7%9A%84%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BD%BF%E7%94%A8/9.png" class="" width="488"><p>&nbsp;</p><img src="/2024/04/11/Manager%E7%9A%84%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BD%BF%E7%94%A8/10.png" class="" width="488"><p>&nbsp;<br>更改令牌名称，将区域选择所有区域-点击继续-创建令牌<br>该令牌只展示一次，注意保存。</p><img src="/2024/04/11/Manager%E7%9A%84%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BD%BF%E7%94%A8/11.png" class="" width="488"><p>&nbsp;</p><img src="/2024/04/11/Manager%E7%9A%84%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BD%BF%E7%94%A8/12.png" class="" width="488"><p>&nbsp;</p><h3 id="四-Nginx-proxy-manager配置SSL证书"><a href="#四-Nginx-proxy-manager配置SSL证书" class="headerlink" title="四.Nginx proxy manager配置SSL证书"></a>四.Nginx proxy manager配置SSL证书</h3><h4 id="1-到SSL证书下添加证书-添加-Let’s-Encrypt-证书"><a href="#1-到SSL证书下添加证书-添加-Let’s-Encrypt-证书" class="headerlink" title="1.到SSL证书下添加证书-添加 Let’s Encrypt 证书"></a>1.到SSL证书下添加证书-添加 Let’s Encrypt 证书</h4><img src="/2024/04/11/Manager%E7%9A%84%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BD%BF%E7%94%A8/17.png" class="" width="488"><p>&nbsp;</p><h4 id="2-将cloudflare中创建的令牌替换"><a href="#2-将cloudflare中创建的令牌替换" class="headerlink" title="2.将cloudflare中创建的令牌替换"></a>2.将cloudflare中创建的令牌替换</h4><div class="note note-warning">            <p>注意：这一步在保存的时候会提示超时，多尝试几次就可以了。</p>          </div><img src="/2024/04/11/Manager%E7%9A%84%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BD%BF%E7%94%A8/13.png" class="" width="488"><p>&nbsp; </p><h3 id="五-配置代理服务"><a href="#五-配置代理服务" class="headerlink" title="五.配置代理服务"></a>五.配置代理服务</h3><h4 id="I-部署vue项目，将原来的nginx服务迁移到nginx-proxy-manager。"><a href="#I-部署vue项目，将原来的nginx服务迁移到nginx-proxy-manager。" class="headerlink" title="I.部署vue项目，将原来的nginx服务迁移到nginx proxy manager。"></a>I.部署vue项目，将原来的nginx服务迁移到nginx proxy manager。</h4><h5 id="1-从仪表盘或者主机菜单中，点击添加代理服务器"><a href="#1-从仪表盘或者主机菜单中，点击添加代理服务器" class="headerlink" title="1.从仪表盘或者主机菜单中，点击添加代理服务器"></a>1.从仪表盘或者主机菜单中，点击添加代理服务器</h5><img src="/2024/04/11/Manager%E7%9A%84%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BD%BF%E7%94%A8/18.png" class="" width="488"><p>&nbsp;</p><div class="note note-warning">            <p>注意：<br>1.协议一定要选http，而不是https，否则访问不了。虽然你用的是https，但是这里的https需要自签证书才能使用，我使用的cloudflare证书，所以使用https访问不了。<br>2.转发主机&#x2F;ip这里分两种情况，第一种是填写docker的ip，用下面的查看本机的内网ip命令可以查看，这种方式不用暴露服务的端口，就不需要去服务器的安全策略中添加后面的访问端口。<br>第二种是填写服务器的真实ip，后面填写的端口需要去服务器的安全策略中添加才能访问。这种情况会把服务器端口对外暴露<br>3.缓存资源一定要关闭，不然访问css,js，图片都是返回404。这个坑花了好几个小时才找到。</p>          </div><img src="/2024/04/11/Manager%E7%9A%84%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BD%BF%E7%94%A8/19.png" class="" width="488"><p>&nbsp;</p><div class="note note-warning">            <p>注意这个目录的问题，要将项目资源拷贝到nginx-proxy-manager的数据存放目录中。因为&#x2F;指向的是docker的数据目录，而不是服务器的&#x2F;目录。</p>          </div><img src="/2024/04/11/Manager%E7%9A%84%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BD%BF%E7%94%A8/20.png" class="" width="488"><p>&nbsp;</p><h5 id="2-添加DNS域名解析"><a href="#2-添加DNS域名解析" class="headerlink" title="2.添加DNS域名解析"></a>2.添加DNS域名解析</h5><p>到CloudFlare的域名中，找到DNS-记录，点击添加记录</p><img src="/2024/04/11/Manager%E7%9A%84%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BD%BF%E7%94%A8/21.png" class="" width="488"><p>&nbsp;<br>添加A类型,名称写子域名，ipv4填写服务器ip,代理状态关闭(不然通过CF的CDN国内用户访问慢)</p><img src="/2024/04/11/Manager%E7%9A%84%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BD%BF%E7%94%A8/22.png" class="" width="488"><p>&nbsp;</p><h5 id="3-配置SSL"><a href="#3-配置SSL" class="headerlink" title="3.配置SSL"></a>3.配置SSL</h5><p>对于不需要ssl的这一步可以省略，完成上面两步就可以通过<a href="http://admin.xxx.com访问./">http://admin.xxx.com访问。</a><br>编辑之前添加的代理服务配置，找到SSL,选择前面创建的SSL证书</p><img src="/2024/04/11/Manager%E7%9A%84%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BD%BF%E7%94%A8/23.png" class="" width="488"><p>&nbsp;</p><h4 id="II-部署服务器上的其他服务-主要是运行需要在特定的端口，比如frp服务运行在8090端口"><a href="#II-部署服务器上的其他服务-主要是运行需要在特定的端口，比如frp服务运行在8090端口" class="headerlink" title="II.部署服务器上的其他服务,主要是运行需要在特定的端口，比如frp服务运行在8090端口"></a>II.部署服务器上的其他服务,主要是运行需要在特定的端口，比如frp服务运行在8090端口</h4><div class="note note-warning">            <p>操作步骤与上面相同，唯一需要注意的是端口要设置为服务运行的端口。<br>如果没有特殊要求，自定义nginx配置不需要添加任何内容，之前nginx的方式是添加proxy_pass <a href="http://127.0.0.1:8090;现在不需要再加这个！">http://127.0.0.1:8090;现在不需要再加这个！</a><br>我的做法是把所有的静态项目都拷贝到nginx-proxy-manager数据存放目录下，让nginx proxy manager的端口来做转发。其他带特定端口的服务不需要移动！</p>          </div> <img src="/2024/04/11/Manager%E7%9A%84%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BD%BF%E7%94%A8/24.png" class="" width="488"><p>&nbsp;</p><h3 id="六-用到的命令"><a href="#六-用到的命令" class="headerlink" title="六.用到的命令"></a>六.用到的命令</h3><p>查看安装后的docker及docker-compose的版本号</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><br><span class="hljs-attribute">docker -v</span><br><span class="hljs-attribute">docker-compose -v</span><br><br></code></pre></td></tr></table></figure><p>文件保存并退出</p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs clojure"><span class="hljs-symbol">:wq</span><br></code></pre></td></tr></table></figure><p>启动docker</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">docker-compose up -d</span><br></code></pre></td></tr></table></figure><p>查看docker运行的容器</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">docker ps</span><br></code></pre></td></tr></table></figure><p>停止容器</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">docker stop b0c6a7d0459e<br></code></pre></td></tr></table></figure><p>创建新的容器</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">docker</span> run -d -p <span class="hljs-number">6443</span>:<span class="hljs-number">80</span> --name frp nginx<br></code></pre></td></tr></table></figure><div class="note note-warning">            <p>6443是对nginx服务的端口，如果使用内网访问，不用去打开6443。这样可以避免端口暴露的风险</p>          </div><p>删除容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker <span class="hljs-built_in">rm</span> b0c6a7d0459e<br></code></pre></td></tr></table></figure><p>删除镜像</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dns">docker rmi c6<span class="hljs-number">13f16b6642</span><br></code></pre></td></tr></table></figure><p>查看端口使用情况</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">netstat -tunlp</span><br></code></pre></td></tr></table></figure><p>查询本机公网ip</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">curl ifconfig.<span class="hljs-keyword">me</span><br></code></pre></td></tr></table></figure><p>查看本机的内网ip</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">ip <span class="hljs-keyword">addr </span><span class="hljs-keyword">show </span>docker0<br></code></pre></td></tr></table></figure><p>停止nginx服务</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">./nginx -s stop<br></code></pre></td></tr></table></figure><h3 id="七-遇到的问题"><a href="#七-遇到的问题" class="headerlink" title="七.遇到的问题"></a>七.遇到的问题</h3><h4 id="1-我照着原来的nginx配置把location配置直接拷贝到nginx自定义中，结果访问一直显示找不到资源。"><a href="#1-我照着原来的nginx配置把location配置直接拷贝到nginx自定义中，结果访问一直显示找不到资源。" class="headerlink" title="1.我照着原来的nginx配置把location配置直接拷贝到nginx自定义中，结果访问一直显示找不到资源。"></a>1.我照着原来的nginx配置把location配置直接拷贝到nginx自定义中，结果访问一直显示找不到资源。</h4><p>查看nginx的配置文件才发现问题，原来是我忘了docker本来就相当于一台主机，他里面的目录是docker内部目录，需要将要部署的内容拷贝到我们开始创建的docker&#x2F;data&#x2F;nginx_proxy_manager&#x2F;data目录中。</p><img src="/2024/04/11/Manager%E7%9A%84%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BD%BF%E7%94%A8/16.png" class="" width="488"><p>&nbsp;<br>这是原nginx配置</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">server</span> &#123;<br>     <span class="hljs-attribute">listen</span> <span class="hljs-number">443</span> ssl;<br>     <span class="hljs-attribute">server_name</span> www.xxx.com;<br>     <span class="hljs-attribute">ssl_certificate</span> /usr/local/nginx/2024CA/www.xxx.com.pem;<br>     <span class="hljs-attribute">ssl_certificate_key</span> /usr/local/nginx/2024CA/www.xxx.com.key;<br>     <span class="hljs-attribute">ssl_session_timeout</span> <span class="hljs-number">5m</span>;<br>     <span class="hljs-attribute">ssl_protocols</span> TLSv1 TLSv1.<span class="hljs-number">1</span> TLSv1.<span class="hljs-number">2</span>; <span class="hljs-comment">#按照这个协议配置</span><br>     <span class="hljs-attribute">ssl_ciphers</span> ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;<span class="hljs-comment">#按照这个套件配置</span><br>     <span class="hljs-attribute">ssl_prefer_server_ciphers</span> <span class="hljs-literal">on</span>;<br>     <span class="hljs-section">location</span> / &#123;<br>       <span class="hljs-attribute">root</span>   /usr/local/project/xxx/website/dist;<br>             <span class="hljs-attribute">index</span>  index.html index.htm;<br>             <span class="hljs-attribute">try_files</span> <span class="hljs-variable">$uri</span> /index.html<span class="hljs-variable">$is_args</span><span class="hljs-variable">$args</span> =<span class="hljs-number">404</span>;<br>      &#125;<br>     <span class="hljs-section">location</span> /api/ &#123;<br>        <span class="hljs-attribute">proxy_pass</span> http://127.0.0.1:8001;<br>     &#125;<br> &#125;<br><br></code></pre></td></tr></table></figure><p>这是通过配置nginx proxy manager的 自定义 Nginx 配置的内容</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs swift">   <br><br>location <span class="hljs-operator">/</span> &#123;<br>  #root   <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/project/</span>xxx<span class="hljs-regexp">/website/</span>dist;<span class="hljs-comment">//这是错误的</span><br>  root   <span class="hljs-regexp">/data/</span>xxx<span class="hljs-regexp">/website/</span>dist;<span class="hljs-comment">//将项目资源包括到这目录下才正确</span><br>        index  index.html index.htm;<br>        try_files <span class="hljs-variable">$uri</span> <span class="hljs-operator">/</span>index.html<span class="hljs-variable">$is_args</span><span class="hljs-variable">$args</span> <span class="hljs-operator">=</span><span class="hljs-number">404</span>;<br> &#125;<br>location <span class="hljs-regexp">/api/</span> &#123;<br>   proxy_pass http:<span class="hljs-comment">//127.0.0.1:8001;</span><br>&#125;<br>     <br><br></code></pre></td></tr></table></figure><h4 id="2-部署vue项目后，所有的css-js-图片资源都返回404"><a href="#2-部署vue项目后，所有的css-js-图片资源都返回404" class="headerlink" title="2.部署vue项目后，所有的css,js,图片资源都返回404"></a>2.部署vue项目后，所有的css,js,图片资源都返回404</h4><p>这个问题花了我几个小时，一直以为是配置的问题，尝试了很多种更改nginx自定义配置的方式，都不成功，后来想到我开启了缓存和阻止常见漏洞的开关，试着关闭，没想到就能访问了。<br>为了解决这个问题，我一直弄到凌晨2点，看了时间赶紧去睡觉，没必要在这个问题上死磕，还不如好好休息，第二天有空再看，没想到最后竟然是这个原因。</p><img src="/2024/04/11/Manager%E7%9A%84%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BD%BF%E7%94%A8/14.png" class="" width="488"><p>&nbsp;</p><img src="/2024/04/11/Manager%E7%9A%84%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BD%BF%E7%94%A8/15.png" class="" width="488"><p>&nbsp;</p><h4 id="3-部署java项目，访问不了"><a href="#3-部署java项目，访问不了" class="headerlink" title="3.部署java项目，访问不了"></a>3.部署java项目，访问不了</h4><p>java项目部署在8080端口，但是之前nginx配置的反向代理，没有开启8080端口。我是直接配置转发端口8080，但是无法访问。通过ip+端口也同样访问不了。但是通过命令查看java项目确实是运行在8080端口。<br>解决办法：到安全策略中开启8080端口。在能访问之后，再关闭8080端口即可。<br>这个问题也想了很久，但是总的思路是先想办法查看服务是否运行，然后再去打开端口，先保证不用域名的情况下能正常访问。下一步再去设置域名访问，能访问之后，再关闭端口对外访问。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">server</span> &#123;<br>        <span class="hljs-attribute">listen</span> <span class="hljs-number">443</span> ssl;<br>        <span class="hljs-attribute">server_name</span> enn.fxcxy.com;<br>        <span class="hljs-attribute">ssl_certificate</span> /usr/local/nginx/2023CA/10023018_enn.xxx.com.pem;<br>        <span class="hljs-attribute">ssl_certificate_key</span> /usr/local/nginx/2023CA/10023018_enn.xxx.com.key;<br>        <span class="hljs-attribute">ssl_session_timeout</span> <span class="hljs-number">5m</span>;<br>        <span class="hljs-attribute">ssl_protocols</span> TLSv1 TLSv1.<span class="hljs-number">1</span> TLSv1.<span class="hljs-number">2</span>; <span class="hljs-comment">#按照这个协议配置</span><br>        <span class="hljs-attribute">ssl_ciphers</span> ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;<span class="hljs-comment">#按照这个套件配置</span><br>        <span class="hljs-attribute">ssl_prefer_server_ciphers</span> <span class="hljs-literal">on</span>;<br><br><span class="hljs-section">location</span> /e8GqKhfyEw.txt &#123;<br><span class="hljs-attribute">charset</span> UTF-<span class="hljs-number">8</span>;<br>                <span class="hljs-attribute">default_type</span> text/html;<br>                <span class="hljs-attribute">return</span> <span class="hljs-number">200</span> <span class="hljs-string">&#x27;71e2e1a495b3387802f76cbe7aefce21&#x27;</span>;<br>&#125;<br>        <span class="hljs-section">location</span> / &#123;<br><br>                <span class="hljs-attribute">proxy_pass</span> http://xxxx/;<br>                <span class="hljs-attribute">add_header</span> From enn.xxx.com;<br>                <span class="hljs-attribute">proxy_cookie_path</span> / /;<br>                <span class="hljs-attribute">proxy_set_header</span> Cookie <span class="hljs-variable">$http_cookie</span>;<br>                <span class="hljs-attribute">proxy_set_header</span> Host  <span class="hljs-variable">$host</span>;<br>                <span class="hljs-attribute">proxy_set_header</span> Remote_Addr <span class="hljs-variable">$remote_addr</span>;<br>                <span class="hljs-attribute">proxy_set_header</span> X-Real-IP <span class="hljs-variable">$remote_addr</span>;<br>                <span class="hljs-attribute">proxy_set_header</span> X-Forwarded-For <span class="hljs-variable">$proxy_add_x_forwarded_for</span>;<br>         &#125;<br>    &#125;<br><br></code></pre></td></tr></table></figure><h3 id="八-相关视频"><a href="#八-相关视频" class="headerlink" title="八.相关视频"></a>八.相关视频</h3><iframe width="auto" height="auto" src="https://www.youtube.com/embed/kFJsFKuHRX4" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>]]></content>
    
    
    <categories>
      
      <category>服务器管理</category>
      
      <category>视频教程</category>
      
      <category>技术分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Nginx</tag>
      
      <tag>反向代理</tag>
      
      <tag>域名</tag>
      
      <tag>https证书</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>将域名托管到Cloudflare，实现全站https访问</title>
    <link href="/2024/04/09/%E5%B0%86%E5%9F%9F%E5%90%8D%E6%89%98%E7%AE%A1%E5%88%B0Cloudflare%EF%BC%8C%E5%AE%9E%E7%8E%B0%E5%85%A8%E7%AB%99https%E8%AE%BF%E9%97%AE/"/>
    <url>/2024/04/09/%E5%B0%86%E5%9F%9F%E5%90%8D%E6%89%98%E7%AE%A1%E5%88%B0Cloudflare%EF%BC%8C%E5%AE%9E%E7%8E%B0%E5%85%A8%E7%AB%99https%E8%AE%BF%E9%97%AE/</url>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在阿里云购买的域名，之前有20个免费的https证书，本来已经满足我的基本需求。但是从2024年开始，阿里云取消了免费https证书，每个证书都要收费，而且还不便宜。还是老套路，先把大家骗进来，然后开始收割韭菜。我偏不愿当这颗韭菜，还是让找到了免费的https证书，而且有效期是15年。这个就是Cloudflare，免费的不香吗？</p><h3 id="优缺点"><a href="#优缺点" class="headerlink" title="优缺点"></a>优缺点</h3><p>优点：15年的免费期，省的经常折腾证书的事<br>缺点：走的Cloudflare的CDN，国内用户访问速度比国外的用户慢一丢丢。对与我来说省钱才是硬道理。</p><h3 id="现有域名托管到Cloudflare"><a href="#现有域名托管到Cloudflare" class="headerlink" title="现有域名托管到Cloudflare"></a>现有域名托管到Cloudflare</h3><p>注册<a href="https://www.cloudflare.com/">Cloudflare</a></p><h4 id="1-登录Cloudflare后，在主页点击开始使用"><a href="#1-登录Cloudflare后，在主页点击开始使用" class="headerlink" title="1.登录Cloudflare后，在主页点击开始使用"></a>1.登录Cloudflare后，在主页点击开始使用</h4><img src="/2024/04/09/%E5%B0%86%E5%9F%9F%E5%90%8D%E6%89%98%E7%AE%A1%E5%88%B0Cloudflare%EF%BC%8C%E5%AE%9E%E7%8E%B0%E5%85%A8%E7%AB%99https%E8%AE%BF%E9%97%AE/1.png" class="" width="488"><p>&nbsp;</p><h4 id="2-填写你注册的域名"><a href="#2-填写你注册的域名" class="headerlink" title="2.填写你注册的域名"></a>2.填写你注册的域名</h4><img src="/2024/04/09/%E5%B0%86%E5%9F%9F%E5%90%8D%E6%89%98%E7%AE%A1%E5%88%B0Cloudflare%EF%BC%8C%E5%AE%9E%E7%8E%B0%E5%85%A8%E7%AB%99https%E8%AE%BF%E9%97%AE/2.png" class="" width="488"><p>&nbsp;</p><h4 id="3-选择套餐-我用免费的就够"><a href="#3-选择套餐-我用免费的就够" class="headerlink" title="3.选择套餐(我用免费的就够)"></a>3.选择套餐(我用免费的就够)</h4><img src="/2024/04/09/%E5%B0%86%E5%9F%9F%E5%90%8D%E6%89%98%E7%AE%A1%E5%88%B0Cloudflare%EF%BC%8C%E5%AE%9E%E7%8E%B0%E5%85%A8%E7%AB%99https%E8%AE%BF%E9%97%AE/3.png" class="" width="488"><p>&nbsp;</p><img src="/2024/04/09/%E5%B0%86%E5%9F%9F%E5%90%8D%E6%89%98%E7%AE%A1%E5%88%B0Cloudflare%EF%BC%8C%E5%AE%9E%E7%8E%B0%E5%85%A8%E7%AB%99https%E8%AE%BF%E9%97%AE/4.png" class="" width="488"><p>&nbsp;</p><h4 id="4-更改名称服务器"><a href="#4-更改名称服务器" class="headerlink" title="4.更改名称服务器"></a>4.更改名称服务器</h4><p>这里复制CF给我们提供的名称服务器，然后去到域名服务商更改。</p><img src="/2024/04/09/%E5%B0%86%E5%9F%9F%E5%90%8D%E6%89%98%E7%AE%A1%E5%88%B0Cloudflare%EF%BC%8C%E5%AE%9E%E7%8E%B0%E5%85%A8%E7%AB%99https%E8%AE%BF%E9%97%AE/5.png" class="" width="488"><p>&nbsp;</p><h4 id="5-修改DNS服务器"><a href="#5-修改DNS服务器" class="headerlink" title="5.修改DNS服务器"></a>5.修改DNS服务器</h4><p>我的域名是从阿里云购买的，所以登录阿里云的域名管理中去设置</p><img src="/2024/04/09/%E5%B0%86%E5%9F%9F%E5%90%8D%E6%89%98%E7%AE%A1%E5%88%B0Cloudflare%EF%BC%8C%E5%AE%9E%E7%8E%B0%E5%85%A8%E7%AB%99https%E8%AE%BF%E9%97%AE/6.png" class="" width="488"><p>&nbsp;</p><img src="/2024/04/09/%E5%B0%86%E5%9F%9F%E5%90%8D%E6%89%98%E7%AE%A1%E5%88%B0Cloudflare%EF%BC%8C%E5%AE%9E%E7%8E%B0%E5%85%A8%E7%AB%99https%E8%AE%BF%E9%97%AE/7.png" class="" width="488"><p>&nbsp;<br>更改完成之后，等CF给我们发送更改成功的邮件，大概几分钟。</p><img src="/2024/04/09/%E5%B0%86%E5%9F%9F%E5%90%8D%E6%89%98%E7%AE%A1%E5%88%B0Cloudflare%EF%BC%8C%E5%AE%9E%E7%8E%B0%E5%85%A8%E7%AB%99https%E8%AE%BF%E9%97%AE/8.png" class="" width="488"><p>&nbsp;</p><img src="/2024/04/09/%E5%B0%86%E5%9F%9F%E5%90%8D%E6%89%98%E7%AE%A1%E5%88%B0Cloudflare%EF%BC%8C%E5%AE%9E%E7%8E%B0%E5%85%A8%E7%AB%99https%E8%AE%BF%E9%97%AE/9.png" class="" width="488"><p>&nbsp;</p><h4 id="6-配置域设置"><a href="#6-配置域设置" class="headerlink" title="6.配置域设置"></a>6.配置域设置</h4><img src="/2024/04/09/%E5%B0%86%E5%9F%9F%E5%90%8D%E6%89%98%E7%AE%A1%E5%88%B0Cloudflare%EF%BC%8C%E5%AE%9E%E7%8E%B0%E5%85%A8%E7%AB%99https%E8%AE%BF%E9%97%AE/10.png" class="" width="488"><p>&nbsp;</p><img src="/2024/04/09/%E5%B0%86%E5%9F%9F%E5%90%8D%E6%89%98%E7%AE%A1%E5%88%B0Cloudflare%EF%BC%8C%E5%AE%9E%E7%8E%B0%E5%85%A8%E7%AB%99https%E8%AE%BF%E9%97%AE/11.png" class="" width="488"><p>&nbsp;</p><img src="/2024/04/09/%E5%B0%86%E5%9F%9F%E5%90%8D%E6%89%98%E7%AE%A1%E5%88%B0Cloudflare%EF%BC%8C%E5%AE%9E%E7%8E%B0%E5%85%A8%E7%AB%99https%E8%AE%BF%E9%97%AE/12.png" class="" width="488"><p>&nbsp;</p><h3 id="申请免费https证书"><a href="#申请免费https证书" class="headerlink" title="申请免费https证书"></a>申请免费https证书</h3><h4 id="1-点击要申请的-SSL-的网站"><a href="#1-点击要申请的-SSL-的网站" class="headerlink" title="1.点击要申请的 SSL 的网站"></a>1.点击要申请的 SSL 的网站</h4><img src="/2024/04/09/%E5%B0%86%E5%9F%9F%E5%90%8D%E6%89%98%E7%AE%A1%E5%88%B0Cloudflare%EF%BC%8C%E5%AE%9E%E7%8E%B0%E5%85%A8%E7%AB%99https%E8%AE%BF%E9%97%AE/13.png" class="" width="488"><p>&nbsp;</p><h4 id="2-点击SSL-TLS-概述，将-SSL-TLS-加密模式设置为完全或者完全（严格）"><a href="#2-点击SSL-TLS-概述，将-SSL-TLS-加密模式设置为完全或者完全（严格）" class="headerlink" title="2.点击SSL&#x2F;TLS-概述，将 SSL&#x2F;TLS 加密模式设置为完全或者完全（严格）"></a>2.点击<b>SSL&#x2F;TLS</b>-<b>概述</b>，将 SSL&#x2F;TLS 加密模式设置为<b>完全</b>或者<b>完全（严格）</b></h4><img src="/2024/04/09/%E5%B0%86%E5%9F%9F%E5%90%8D%E6%89%98%E7%AE%A1%E5%88%B0Cloudflare%EF%BC%8C%E5%AE%9E%E7%8E%B0%E5%85%A8%E7%AB%99https%E8%AE%BF%E9%97%AE/14.png" class="" width="488"><p>&nbsp;</p><h4 id="3-点击SSL-TLS-源服务器，选择创建证书"><a href="#3-点击SSL-TLS-源服务器，选择创建证书" class="headerlink" title="3.点击SSL&#x2F;TLS-源服务器，选择创建证书"></a>3.点击<b>SSL&#x2F;TLS</b>-<b>源服务器</b>，选择创建证书</h4><img src="/2024/04/09/%E5%B0%86%E5%9F%9F%E5%90%8D%E6%89%98%E7%AE%A1%E5%88%B0Cloudflare%EF%BC%8C%E5%AE%9E%E7%8E%B0%E5%85%A8%E7%AB%99https%E8%AE%BF%E9%97%AE/15.png" class="" width="488"><p>&nbsp;</p><h4 id="4-选择私钥类型，填写主机名，选择证书有效期，然后点击创建"><a href="#4-选择私钥类型，填写主机名，选择证书有效期，然后点击创建" class="headerlink" title="4.选择私钥类型，填写主机名，选择证书有效期，然后点击创建"></a>4.选择私钥类型，填写主机名，选择证书有效期，然后点击创建</h4><p>用默认的就行</p><img src="/2024/04/09/%E5%B0%86%E5%9F%9F%E5%90%8D%E6%89%98%E7%AE%A1%E5%88%B0Cloudflare%EF%BC%8C%E5%AE%9E%E7%8E%B0%E5%85%A8%E7%AB%99https%E8%AE%BF%E9%97%AE/15.png" class="" width="488"><p>&nbsp;</p><h4 id="5-生成源证书-pem-和私钥-key"><a href="#5-生成源证书-pem-和私钥-key" class="headerlink" title="5.生成源证书(pem)和私钥(key)"></a>5.生成源证书(pem)和私钥(key)</h4><div class="note note-warning">            <p>私钥（key）只出现一次，一定要复制保存 然后点击确认即可</p>          </div><img src="/2024/04/09/%E5%B0%86%E5%9F%9F%E5%90%8D%E6%89%98%E7%AE%A1%E5%88%B0Cloudflare%EF%BC%8C%E5%AE%9E%E7%8E%B0%E5%85%A8%E7%AB%99https%E8%AE%BF%E9%97%AE/16.png" class="" width="488"><p>&nbsp;</p><img src="/2024/04/09/%E5%B0%86%E5%9F%9F%E5%90%8D%E6%89%98%E7%AE%A1%E5%88%B0Cloudflare%EF%BC%8C%E5%AE%9E%E7%8E%B0%E5%85%A8%E7%AB%99https%E8%AE%BF%E9%97%AE/17.png" class="" width="488"><p>&nbsp;</p><h4 id="6-源证书pem下载"><a href="#6-源证书pem下载" class="headerlink" title="6. 源证书pem下载"></a>6. 源证书pem下载</h4><div class="note note-warning">            <p>如果 源证书(pem)忘记了，可以点击下载查看，之后就可以在你服务器&#x2F;VPS上配置这个证书了。</p>          </div><img src="/2024/04/09/%E5%B0%86%E5%9F%9F%E5%90%8D%E6%89%98%E7%AE%A1%E5%88%B0Cloudflare%EF%BC%8C%E5%AE%9E%E7%8E%B0%E5%85%A8%E7%AB%99https%E8%AE%BF%E9%97%AE/18.png" class="" width="488"><p>&nbsp;</p><h4 id="7-开启小云朵"><a href="#7-开启小云朵" class="headerlink" title="7. 开启小云朵"></a>7. 开启小云朵</h4><div class="note note-warning">            <p>配置 DNS 解析时一定要开启小云朵，否则网站会提示”不能验证该证书“</p>          </div><img src="/2024/04/09/%E5%B0%86%E5%9F%9F%E5%90%8D%E6%89%98%E7%AE%A1%E5%88%B0Cloudflare%EF%BC%8C%E5%AE%9E%E7%8E%B0%E5%85%A8%E7%AB%99https%E8%AE%BF%E9%97%AE/19.png" class="" width="488"><p>&nbsp;</p><h3 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h3><h4 id="1-配置好之后，访问时显示证书还是不可用。"><a href="#1-配置好之后，访问时显示证书还是不可用。" class="headerlink" title="1.配置好之后，访问时显示证书还是不可用。"></a>1.配置好之后，访问时显示证书还是不可用。</h4><p>解决方法：可以重启路由器，或者关闭科学上网工具，或者换网络试试。我就是用手机流量直接能正常访问，通过家里路由器有这个提示。后来重启路由器和关闭科学上网后才正常。</p><img src="/2024/04/09/%E5%B0%86%E5%9F%9F%E5%90%8D%E6%89%98%E7%AE%A1%E5%88%B0Cloudflare%EF%BC%8C%E5%AE%9E%E7%8E%B0%E5%85%A8%E7%AB%99https%E8%AE%BF%E9%97%AE/20.png" class="" width="488"><p>&nbsp;</p><h3 id="相关视频"><a href="#相关视频" class="headerlink" title="相关视频"></a>相关视频</h3><iframe width="auto" height="auto" src="https://www.youtube.com/embed/RFeJwBePBv0" title="域名托管到CloudFlare，全站免费https证书，让你一年至少省5K!" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>]]></content>
    
    
    <categories>
      
      <category>视频教程</category>
      
      <category>技术分享</category>
      
      <category>域名管理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>域名</tag>
      
      <tag>https证书</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>搭建前端框架:Vue2+Webpack5+tailwindcss2</title>
    <link href="/2024/04/07/%E6%90%AD%E5%BB%BA%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6-Vue2-Webpack5-tailwindcss2/"/>
    <url>/2024/04/07/%E6%90%AD%E5%BB%BA%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6-Vue2-Webpack5-tailwindcss2/</url>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>近期要做一个新的项目，本来打算用vue3+webpack+tailwindcss3搭建一套前端的开发框架，然而在搭建的时候遇到各种依赖包的版本兼容问题。最后还是用的vue2+webpack5+tailwindcss2。虽然都不是最新的版本，但主要是能使用，满足需求。<br>由于最新的tailwind css使用post css 8版本，vue2框架暂时还不支持，所以需要指定安装postcss7的版本</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><br>npm install tailwindcss<span class="hljs-symbol">@npm</span>:<span class="hljs-symbol">@tailwindcss</span>/postcss7-compat <span class="hljs-symbol">@tailwindcss</span>/postcss7-compat postcss<span class="hljs-symbol">@^7</span> autoprefixer<span class="hljs-symbol">@^9</span><br><br></code></pre></td></tr></table></figure><h3 id="主要代码"><a href="#主要代码" class="headerlink" title="主要代码"></a>主要代码</h3><h4 id="package-json内容"><a href="#package-json内容" class="headerlink" title="package.json内容"></a>package.json内容</h4><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><code class="hljs perl">&#123;<br>  <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;test&quot;</span>,<br>  <span class="hljs-string">&quot;version&quot;</span>: <span class="hljs-string">&quot;1.0.0&quot;</span>,<br>  <span class="hljs-string">&quot;private&quot;</span>: true,<br>  <span class="hljs-string">&quot;scripts&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;serve&quot;</span>: <span class="hljs-string">&quot;vue-cli-service serve&quot;</span>,<br>    <span class="hljs-string">&quot;build&quot;</span>: <span class="hljs-string">&quot;vue-cli-service build&quot;</span>,<br>    <span class="hljs-string">&quot;lint&quot;</span>: <span class="hljs-string">&quot;vue-cli-service lint&quot;</span>,<br>    <span class="hljs-string">&quot;dev&quot;</span>: <span class="hljs-string">&quot;cross-env NODE_ENV=development webpack serve --config ./config/webpack.config.js&quot;</span>,<br>    <span class="hljs-string">&quot;prod&quot;</span>: <span class="hljs-string">&quot;cross-env NODE_ENV=production webpack --config ./config/webpack.config.js&quot;</span><br>  &#125;,<br>  <span class="hljs-string">&quot;dependencies&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;@tailwindcss/postcss7-compat&quot;</span>: <span class="hljs-string">&quot;^2.2.17&quot;</span>,<br>    <span class="hljs-string">&quot;vue&quot;</span>: <span class="hljs-string">&quot;2.7.16&quot;</span>,<br>    <span class="hljs-string">&quot;axios&quot;</span>: <span class="hljs-string">&quot;^0.27.2&quot;</span>,<br>    <span class="hljs-string">&quot;core-js&quot;</span>: <span class="hljs-string">&quot;^3.6.5&quot;</span>,<br>    <span class="hljs-string">&quot;moment&quot;</span>: <span class="hljs-string">&quot;^2.29.3&quot;</span>,<br>    <span class="hljs-string">&quot;nativeshare&quot;</span>: <span class="hljs-string">&quot;^2.1.5&quot;</span>,<br>    <span class="hljs-string">&quot;vue-infinite-loading&quot;</span>: <span class="hljs-string">&quot;^2.4.5&quot;</span>,<br>    <span class="hljs-string">&quot;vue-router&quot;</span>: <span class="hljs-string">&quot;3.6.5&quot;</span>,<br>    <span class="hljs-string">&quot;vue-toast-notification&quot;</span>: <span class="hljs-string">&quot;^0.6.2&quot;</span>,<br>    <span class="hljs-string">&quot;less-loader&quot;</span>: <span class="hljs-string">&quot;^11.0.0&quot;</span>,<br>    <span class="hljs-string">&quot;vuex&quot;</span>: <span class="hljs-string">&quot;^3.6.2&quot;</span><br>  &#125;,<br>  <span class="hljs-string">&quot;devDependencies&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;@babel/core&quot;</span>: <span class="hljs-string">&quot;^7.18.2&quot;</span>,<br>    <span class="hljs-string">&quot;@babel/eslint-parser&quot;</span>: <span class="hljs-string">&quot;^7.18.2&quot;</span>,<br>    <span class="hljs-string">&quot;@vue/cli-plugin-babel&quot;</span>: <span class="hljs-string">&quot;4.4.6&quot;</span>,<br>    <span class="hljs-string">&quot;@vue/cli-plugin-eslint&quot;</span>: <span class="hljs-string">&quot;4.4.6&quot;</span>,<br>    <span class="hljs-string">&quot;@vue/cli-service&quot;</span>: <span class="hljs-string">&quot;~4.5.12&quot;</span>,<br>    <span class="hljs-string">&quot;@vue/compiler-sfc&quot;</span>: <span class="hljs-string">&quot;^3.2.37&quot;</span>,<br>    <span class="hljs-string">&quot;autoprefixer&quot;</span>: <span class="hljs-string">&quot;^9.8.8&quot;</span>,<br>    <span class="hljs-string">&quot;babel-eslint&quot;</span>: <span class="hljs-string">&quot;^10.1.0&quot;</span>,<br>    <span class="hljs-string">&quot;babel-loader&quot;</span>: <span class="hljs-string">&quot;^8.2.5&quot;</span>,<br>    <span class="hljs-string">&quot;copy-webpack-plugin&quot;</span>: <span class="hljs-string">&quot;^11.0.0&quot;</span>,<br>    <span class="hljs-string">&quot;cross-env&quot;</span>: <span class="hljs-string">&quot;^7.0.3&quot;</span>,<br>    <span class="hljs-string">&quot;css-loader&quot;</span>: <span class="hljs-string">&quot;^0.28.8&quot;</span>,<br>    <span class="hljs-string">&quot;css-minimizer-webpack-plugin&quot;</span>: <span class="hljs-string">&quot;^4.0.0&quot;</span>,<br>    <span class="hljs-string">&quot;eslint&quot;</span>: <span class="hljs-string">&quot;7.15.0&quot;</span>,<br>    <span class="hljs-string">&quot;eslint-plugin-vue&quot;</span>: <span class="hljs-string">&quot;7.2.0&quot;</span>,<br>    <span class="hljs-string">&quot;eslint-webpack-plugin&quot;</span>: <span class="hljs-string">&quot;^3.1.1&quot;</span>,<br>    <span class="hljs-string">&quot;html-webpack-plugin&quot;</span>: <span class="hljs-string">&quot;^5.5.0&quot;</span>,<br>    <span class="hljs-string">&quot;image-minimizer-webpack-plugin&quot;</span>: <span class="hljs-string">&quot;^3.2.3&quot;</span>,<br>    <span class="hljs-string">&quot;imagemin&quot;</span>: <span class="hljs-string">&quot;^8.0.1&quot;</span>,<br>    <span class="hljs-string">&quot;imagemin-gifsicle&quot;</span>: <span class="hljs-string">&quot;^7.0.0&quot;</span>,<br>    <span class="hljs-string">&quot;imagemin-jpegtran&quot;</span>: <span class="hljs-string">&quot;^7.0.0&quot;</span>,<br>    <span class="hljs-string">&quot;imagemin-optipng&quot;</span>: <span class="hljs-string">&quot;^8.0.0&quot;</span>,<br>    <span class="hljs-string">&quot;imagemin-svgo&quot;</span>: <span class="hljs-string">&quot;^10.0.1&quot;</span>,<br>    <span class="hljs-string">&quot;mini-css-extract-plugin&quot;</span>: <span class="hljs-string">&quot;^2.6.0&quot;</span>,<br>    <span class="hljs-string">&quot;postcss&quot;</span>: <span class="hljs-string">&quot;^7.0.39&quot;</span>,<br>    <span class="hljs-string">&quot;postcss-loader&quot;</span>: <span class="hljs-string">&quot;^3.0.0&quot;</span>,<br>    <span class="hljs-string">&quot;postcss-preset-env&quot;</span>: <span class="hljs-string">&quot;6.7.2&quot;</span>,<br>    <span class="hljs-string">&quot;tailwindcss&quot;</span>: <span class="hljs-string">&quot;npm:@tailwindcss/postcss7-compat@^2.2.17&quot;</span>,<br>    <span class="hljs-string">&quot;sass&quot;</span>: <span class="hljs-string">&quot;^1.52.3&quot;</span>,<br>    <span class="hljs-string">&quot;sass-loader&quot;</span>: <span class="hljs-string">&quot;^13.0.0&quot;</span>,<br>    <span class="hljs-string">&quot;style-loader&quot;</span>: <span class="hljs-string">&quot;^3.3.1&quot;</span>,<br>    <span class="hljs-string">&quot;stylus-loader&quot;</span>: <span class="hljs-string">&quot;^7.0.0&quot;</span>,<br>    <span class="hljs-string">&quot;terser-webpack-plugin&quot;</span>: <span class="hljs-string">&quot;^5.3.3&quot;</span>,<br>    <span class="hljs-string">&quot;thread-loader&quot;</span>: <span class="hljs-string">&quot;^3.0.4&quot;</span>,<br>    <span class="hljs-string">&quot;vue-loader&quot;</span>: <span class="hljs-string">&quot;15&quot;</span>,<br>    <span class="hljs-string">&quot;vue-style-loader&quot;</span>: <span class="hljs-string">&quot;^4.1.3&quot;</span>,<br>    <span class="hljs-string">&quot;vue-template-compiler&quot;</span>: <span class="hljs-string">&quot;^2.6.14&quot;</span>,<br>    <span class="hljs-string">&quot;webpack&quot;</span>: <span class="hljs-string">&quot;^5.73.0&quot;</span>,<br>    <span class="hljs-string">&quot;webpack-cli&quot;</span>: <span class="hljs-string">&quot;^4.9.2&quot;</span>,<br>    <span class="hljs-string">&quot;webpack-dev-server&quot;</span>: <span class="hljs-string">&quot;^4.9.2&quot;</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>&nbsp;</p><h4 id="webpack-config-js-内容"><a href="#webpack-config-js-内容" class="headerlink" title="webpack.config.js 内容"></a>webpack.config.js 内容</h4><div class="note note-warning @title">            <p>注意这个地方是与官方文档上不同的地方，官方是创建一个postcss.config.js然后加入下面的内容，但是webpack需要到这里添加，不需要创建postcss.config.js<br>    options: {<br>    plugins: loader &#x3D;&gt; [<br>        require(‘tailwindcss’),&#x2F;&#x2F;这里是关键点<br>        require(‘autoprefixer’),<br>        require(‘postcss-preset-env’),<br>    ],<br>    },</p>          </div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 合并dev和prod两种环境的配置</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@type</span> &#123;<span class="hljs-type">path.PlatformPath | path</span>&#125;</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">const</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;path&#x27;</span>);<br><span class="hljs-keyword">const</span> <span class="hljs-title class_">EslintWebpackPlugin</span> = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;eslint-webpack-plugin&#x27;</span>);<br><span class="hljs-keyword">const</span> <span class="hljs-title class_">HtmlWebpackPlugin</span> = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;html-webpack-plugin&quot;</span>);<br><span class="hljs-keyword">const</span> <span class="hljs-title class_">MiniCssExtractPlugin</span> = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;mini-css-extract-plugin&quot;</span>);<span class="hljs-comment">//提取css为单独文件</span><br><span class="hljs-keyword">const</span> <span class="hljs-title class_">CssMinimizerPlugin</span> = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;css-minimizer-webpack-plugin&quot;</span>);<span class="hljs-comment">//压缩css文件</span><br><span class="hljs-keyword">const</span> <span class="hljs-title class_">TerserWebpackPlugin</span> = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;terser-webpack-plugin&quot;</span>);<span class="hljs-comment">//压缩js文件</span><br><span class="hljs-keyword">const</span> <span class="hljs-title class_">ImageMinimizerPlugin</span> = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;image-minimizer-webpack-plugin&quot;</span>);<span class="hljs-comment">//压缩图片</span><br><span class="hljs-keyword">const</span> <span class="hljs-title class_">CopyPlugin</span> = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;copy-webpack-plugin&quot;</span>);<br><span class="hljs-keyword">const</span> &#123; <span class="hljs-title class_">VueLoaderPlugin</span> &#125; = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;vue-loader&quot;</span>);<br><span class="hljs-comment">// nodejs核心模块，直接使用</span><br><span class="hljs-keyword">const</span> os = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;os&quot;</span>);<br><span class="hljs-comment">// cpu核数</span><br><span class="hljs-keyword">const</span> threads = os.<span class="hljs-title function_">cpus</span>().<span class="hljs-property">length</span>;<br><span class="hljs-keyword">const</span> isProduction = process.<span class="hljs-property">env</span>.<span class="hljs-property">NODE_ENV</span> === <span class="hljs-string">&#x27;production&#x27;</span><br><br><span class="hljs-comment">//返回处理样式loader函数</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">getStyleLoaders</span> = (<span class="hljs-params">pre</span>) =&gt; &#123;<br>    <span class="hljs-keyword">return</span> [<br>        isProduction ? <span class="hljs-title class_">MiniCssExtractPlugin</span>.<span class="hljs-property">loader</span> : <span class="hljs-string">&quot;vue-style-loader&quot;</span>,<span class="hljs-comment">//提取css为单独文件</span><br>        <span class="hljs-string">&quot;css-loader&quot;</span>,<br>        &#123;<br>            <span class="hljs-attr">loader</span>: <span class="hljs-string">&#x27;postcss-loader&#x27;</span>,<span class="hljs-comment">//处理css兼容，配合package.json中的browserslist来置顶兼容性</span><br>            <span class="hljs-attr">options</span>: &#123;<br>                <span class="hljs-attr">plugins</span>: <span class="hljs-function"><span class="hljs-params">loader</span> =&gt;</span> [<br>                    <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;tailwindcss&#x27;</span>),<span class="hljs-comment">//这里是关键点</span><br>                    <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;autoprefixer&#x27;</span>),<br>                    <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;postcss-preset-env&#x27;</span>),<br>                ],<br>            &#125;,<br>        &#125;,<br>        pre &amp;&amp; &#123;<br>            <span class="hljs-attr">loader</span>:pre,<br>            <span class="hljs-attr">options</span>:pre===<span class="hljs-string">&#x27;less-loader&#x27;</span>?&#123;<br>                <span class="hljs-comment">// antd的自定义主题</span><br>                <span class="hljs-attr">lessOptions</span>: &#123;<br>                    <span class="hljs-attr">modifyVars</span>: &#123;<br>                        <span class="hljs-comment">// 其他主题色：https://ant.design/docs/react/customize-theme-cn</span><br>                        <span class="hljs-string">&quot;@primary-color&quot;</span>: <span class="hljs-string">&quot;#1DA57A&quot;</span>, <span class="hljs-comment">// 全局主色</span><br>                    &#125;,<br>                    <span class="hljs-attr">javascriptEnabled</span>: <span class="hljs-literal">true</span>,<br>                &#125;,<br>            &#125;:&#123;&#125;<br>        &#125;<br>    ].<span class="hljs-title function_">filter</span>(<span class="hljs-title class_">Boolean</span>);<br>&#125;<br><br><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = &#123;<br>    <span class="hljs-comment">//入口文件</span><br>    <span class="hljs-attr">entry</span>: <span class="hljs-string">&#x27;./src/main.js&#x27;</span>,<br>    <span class="hljs-attr">output</span>: &#123;<br>        <span class="hljs-attr">path</span>: isProduction ? path.<span class="hljs-title function_">resolve</span>(__dirname, <span class="hljs-string">&quot;../dist&quot;</span>) : <span class="hljs-literal">undefined</span>,<br>        <span class="hljs-attr">filename</span>: isProduction ? <span class="hljs-string">&#x27;static/js/[name].[contenthash:10].js&#x27;</span> : <span class="hljs-string">&#x27;static/js/[name].js&#x27;</span>,<br>        <span class="hljs-attr">chunkFilename</span>: isProduction ? <span class="hljs-string">&#x27;static/js/[name].[contenthash:10].chunk.js&#x27;</span> : <span class="hljs-string">&#x27;static/js/[name].chunk.js&#x27;</span>,<br>        <span class="hljs-attr">assetModuleFilename</span>: <span class="hljs-string">&#x27;static/media/[hash:10][ext][query]&#x27;</span>,<br>        <span class="hljs-attr">publicPath</span>: <span class="hljs-string">&#x27;/&#x27;</span>, <span class="hljs-comment">//配置绝对路径（原来是static,加上后变成/static），不然嵌套路由刷新会出现路径不正确导致js文件无法加载。historyApiFallback同步需要修改</span><br>        <span class="hljs-attr">clean</span>: <span class="hljs-literal">true</span>,<br>    &#125;,<br>    <span class="hljs-attr">module</span>: &#123;<br>        <span class="hljs-attr">rules</span>: [<br>            <span class="hljs-comment">//处理css</span><br>            &#123;<br>                <span class="hljs-attr">test</span>: <span class="hljs-regexp">/\.css$/</span>,<br>                <span class="hljs-attr">use</span>: <span class="hljs-title function_">getStyleLoaders</span>(),<br>            &#125;,<br>            &#123;<br>                <span class="hljs-attr">test</span>: <span class="hljs-regexp">/\.less$/</span>,<br>                <span class="hljs-attr">use</span>: <span class="hljs-title function_">getStyleLoaders</span>(<span class="hljs-string">&#x27;less-loader&#x27;</span>),<br>            &#125;,<br>            &#123;<br>                <span class="hljs-attr">test</span>: <span class="hljs-regexp">/\.s[ac]ss$/</span>,<br>                <span class="hljs-attr">use</span>: <span class="hljs-title function_">getStyleLoaders</span>(<span class="hljs-string">&#x27;sass-loader&#x27;</span>),<br>            &#125;,<br>            &#123;<br>                <span class="hljs-attr">test</span>: <span class="hljs-regexp">/\.styl$/</span>,<br>                <span class="hljs-attr">use</span>: <span class="hljs-title function_">getStyleLoaders</span>(<span class="hljs-string">&#x27;stylus-loader&#x27;</span>),<br>            &#125;,<br>            <span class="hljs-comment">//处理图片</span><br>            &#123;<br>                <span class="hljs-attr">test</span>: <span class="hljs-regexp">/\.(jpe?g|png|gif|webp|svg)$/</span>,<br>                <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;asset&quot;</span>,<span class="hljs-comment">//asset可以转base64</span><br>                <span class="hljs-attr">parser</span>: &#123;<br>                    <span class="hljs-attr">dataUrlCondition</span>: &#123;<br>                        <span class="hljs-attr">maxSize</span>: <span class="hljs-number">10</span> * <span class="hljs-number">1024</span>, <span class="hljs-comment">//小于10kb的图片采用base64</span><br>                    &#125;<br>                &#125;<br>            &#125;,<br>            <span class="hljs-comment">//处理其他资源</span><br>            &#123;<br>                <span class="hljs-attr">test</span>: <span class="hljs-regexp">/\.(woff2?|ttf)$/</span>,<br>                <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;asset/resource&quot;</span>, <span class="hljs-comment">//asset/resource不能转base64，只会原封输出</span><br>            &#125;,<br>            <span class="hljs-comment">//处理js babel</span><br>            &#123;<br>                <span class="hljs-attr">test</span>:<span class="hljs-regexp">/\.js$/</span>,<br>                <span class="hljs-attr">include</span>:path.<span class="hljs-title function_">resolve</span>(__dirname,<span class="hljs-string">&#x27;../src&#x27;</span>),<br>                <span class="hljs-attr">use</span>: [<br>                    &#123;<br>                        <span class="hljs-attr">loader</span>: <span class="hljs-string">&quot;thread-loader&quot;</span>, <span class="hljs-comment">// 开启多进程</span><br>                        <span class="hljs-attr">options</span>: &#123;<br>                            <span class="hljs-attr">workers</span>: threads, <span class="hljs-comment">// 数量</span><br>                        &#125;,<br>                    &#125;,<br>                    &#123;<br>                        <span class="hljs-attr">loader</span>:<span class="hljs-string">&#x27;babel-loader&#x27;</span>,<br>                        <span class="hljs-attr">options</span>:&#123;<br>                            <span class="hljs-attr">cacheDirectory</span>:<span class="hljs-literal">true</span>,<span class="hljs-comment">//开启缓存</span><br>                            <span class="hljs-attr">cacheCompression</span>:<span class="hljs-literal">false</span>,<span class="hljs-comment">//不做压缩，这样速度更快，只是体积大，不影响</span><br>                        &#125;<br>                    &#125;<br>                ],<br><br>            &#125;,<br>            <span class="hljs-comment">// vue-loader不支持oneOf</span><br>            &#123;<br>                <span class="hljs-attr">test</span>: <span class="hljs-regexp">/\.vue$/</span>,<br>                <span class="hljs-attr">loader</span>: <span class="hljs-string">&quot;vue-loader&quot;</span>, <span class="hljs-comment">// 内部会给vue文件注入HMR功能代码</span><br>                <span class="hljs-attr">options</span>: &#123;<br>                    <span class="hljs-comment">// 开启缓存（第二次打包更快）</span><br>                    <span class="hljs-attr">cacheDirectory</span>: path.<span class="hljs-title function_">resolve</span>(<br>                        __dirname,<br>                        <span class="hljs-string">&quot;node_modules/.cache/vue-loader&quot;</span><br>                    ),<br>                &#125;,<br>            &#125;,<br>        ],<br>    &#125;,<br>    <span class="hljs-attr">plugins</span>: [<br>        <span class="hljs-keyword">new</span> <span class="hljs-title class_">EslintWebpackPlugin</span>(&#123;<br>            <span class="hljs-attr">context</span>: path.<span class="hljs-title function_">resolve</span>(__dirname, <span class="hljs-string">&#x27;../src&#x27;</span>),<br>            <span class="hljs-attr">exclude</span>: <span class="hljs-string">&quot;node_modules&quot;</span>,<span class="hljs-comment">//排除目录</span><br>            <span class="hljs-attr">cache</span>: <span class="hljs-literal">true</span>,<br>            <span class="hljs-attr">cacheLocation</span>: path.<span class="hljs-title function_">resolve</span>(__dirname, <span class="hljs-string">&#x27;../node_modules/.cache/.eslintcache&#x27;</span>),<br>            threads, <span class="hljs-comment">// 开启多进程</span><br>        &#125;),<br>        <span class="hljs-keyword">new</span> <span class="hljs-title class_">HtmlWebpackPlugin</span>(&#123;<br>            <span class="hljs-attr">template</span>: path.<span class="hljs-title function_">resolve</span>(__dirname, <span class="hljs-string">&#x27;../public/index.html&#x27;</span>)<br>        &#125;),<br>        isProduction &amp;&amp; <span class="hljs-keyword">new</span> <span class="hljs-title class_">MiniCssExtractPlugin</span>(&#123;<br>            <span class="hljs-attr">filename</span>: <span class="hljs-string">&quot;static/css/[name].[contenthash:10].css&quot;</span>,<br>            <span class="hljs-attr">chunkFilename</span>: <span class="hljs-string">&quot;static/css/[name].[contenthash:10].chunk.css&quot;</span>,<br>        &#125;),<br>        <span class="hljs-comment">// 将public下面的资源复制到dist目录去（除了index.html）</span><br>        isProduction &amp;&amp; <span class="hljs-keyword">new</span> <span class="hljs-title class_">CopyPlugin</span>(&#123;<br>            <span class="hljs-attr">patterns</span>: [<br>                &#123;<br>                    <span class="hljs-attr">from</span>: path.<span class="hljs-title function_">resolve</span>(__dirname, <span class="hljs-string">&quot;../public&quot;</span>),<br>                    <span class="hljs-attr">to</span>: path.<span class="hljs-title function_">resolve</span>(__dirname, <span class="hljs-string">&quot;../dist&quot;</span>),<br>                    <span class="hljs-attr">toType</span>: <span class="hljs-string">&quot;dir&quot;</span>,<br>                    <span class="hljs-attr">noErrorOnMissing</span>: <span class="hljs-literal">true</span>, <span class="hljs-comment">// 不生成错误</span><br>                    <span class="hljs-attr">globOptions</span>: &#123;<br>                        <span class="hljs-comment">// 忽略文件</span><br>                        <span class="hljs-attr">ignore</span>: [<span class="hljs-string">&quot;**/index.html&quot;</span>],<br>                    &#125;,<br>                    <span class="hljs-attr">info</span>: &#123;<br>                        <span class="hljs-comment">// 跳过terser压缩js</span><br>                        <span class="hljs-attr">minimized</span>: <span class="hljs-literal">true</span>,<br>                    &#125;,<br>                &#125;,<br>            ],<br>        &#125;),<br>        <span class="hljs-keyword">new</span> <span class="hljs-title class_">VueLoaderPlugin</span>(),<br>    ].<span class="hljs-title function_">filter</span>(<span class="hljs-title class_">Boolean</span>),<br>    <span class="hljs-attr">mode</span>: isProduction?<span class="hljs-string">&#x27;production&#x27;</span>:<span class="hljs-string">&#x27;development&#x27;</span>,<span class="hljs-comment">//生产模式</span><br>    <span class="hljs-attr">devtool</span>: isProduction?<span class="hljs-string">&quot;source-map&quot;</span>:<span class="hljs-string">&quot;cheap-module-source-map&quot;</span>,<span class="hljs-comment">//运行时可以看到代码错误，定位到行与列</span><br>    <span class="hljs-comment">//为了防止打包的时候，不把文件打包到一个文件中，配置splitChunks</span><br>    <span class="hljs-attr">optimization</span>: &#123;<br>        <span class="hljs-attr">splitChunks</span>: &#123;<br>            <span class="hljs-attr">chunks</span>: <span class="hljs-string">&quot;all&quot;</span>,<br>            <span class="hljs-attr">cacheGroups</span>: &#123;<br>                <span class="hljs-comment">// layouts通常是admin项目的主体布局组件，所有路由组件都要使用的</span><br>                <span class="hljs-comment">// 可以单独打包，从而复用</span><br>                <span class="hljs-comment">// 如果项目中没有，请删除</span><br>                <span class="hljs-comment">// layouts: &#123;</span><br>                <span class="hljs-comment">//     name: &quot;layouts&quot;,</span><br>                <span class="hljs-comment">//     test: path.resolve(__dirname, &quot;../src/layouts&quot;),</span><br>                <span class="hljs-comment">//     priority: 40,</span><br>                <span class="hljs-comment">// &#125;,</span><br>                <span class="hljs-comment">// 如果项目中使用antd，此时将所有node_modules打包在一起，那么打包输出文件会比较大。</span><br>                <span class="hljs-comment">// 所以我们将node_modules中比较大的模块单独打包，从而并行加载速度更好</span><br>                <span class="hljs-comment">// 如果项目中没有，请删除</span><br>                <span class="hljs-attr">antd</span>: &#123;<br>                    <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;chunk-antd&quot;</span>,<br>                    <span class="hljs-attr">test</span>: <span class="hljs-regexp">/[\\/]node_modules[\\/]antd(.*)/</span>,<br>                    <span class="hljs-attr">priority</span>: <span class="hljs-number">30</span>,<br>                &#125;,<br>                <span class="hljs-comment">// 将vue相关的库单独打包，减少node_modules的chunk体积。</span><br>                <span class="hljs-attr">vue</span>: &#123;<br>                    <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;vue&quot;</span>,<br>                    <span class="hljs-attr">test</span>: <span class="hljs-regexp">/[\\/]node_modules[\\/]vue(.*)[\\/]/</span>,<br>                    <span class="hljs-attr">chunks</span>: <span class="hljs-string">&quot;initial&quot;</span>,<br>                    <span class="hljs-attr">priority</span>: <span class="hljs-number">20</span>,<br>                &#125;,<br>                <span class="hljs-attr">libs</span>: &#123;<br>                    <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;chunk-libs&quot;</span>,<br>                    <span class="hljs-attr">test</span>: <span class="hljs-regexp">/[\\/]node_modules[\\/]/</span>,<br>                    <span class="hljs-attr">priority</span>: <span class="hljs-number">10</span>, <span class="hljs-comment">// 权重最低，优先考虑前面内容</span><br>                    <span class="hljs-attr">chunks</span>: <span class="hljs-string">&quot;initial&quot;</span>,<br>                &#125;,<br>            &#125;,<br>        &#125;,<br>        <span class="hljs-attr">runtimeChunk</span>: &#123;<br>            <span class="hljs-attr">name</span>: <span class="hljs-function">(<span class="hljs-params">entrypoint</span>) =&gt;</span> <span class="hljs-string">`runtime~<span class="hljs-subst">$&#123;entrypoint.name&#125;</span>`</span>,<br>        &#125;,<br>        <span class="hljs-comment">//是否需要压缩</span><br>        <span class="hljs-attr">minimize</span>:isProduction,<br>        <span class="hljs-comment">// 压缩的操作</span><br>        <span class="hljs-attr">minimizer</span>: [<br>            <span class="hljs-keyword">new</span> <span class="hljs-title class_">CssMinimizerPlugin</span>(),<br>            <span class="hljs-keyword">new</span> <span class="hljs-title class_">TerserWebpackPlugin</span>(),<br>            <span class="hljs-keyword">new</span> <span class="hljs-title class_">ImageMinimizerPlugin</span>(&#123;<br>                <span class="hljs-attr">minimizer</span>: &#123;<br>                    <span class="hljs-attr">implementation</span>: <span class="hljs-title class_">ImageMinimizerPlugin</span>.<span class="hljs-property">imageminGenerate</span>,<br>                    <span class="hljs-attr">options</span>: &#123;<br>                        <span class="hljs-attr">plugins</span>: [<br>                            [<span class="hljs-string">&quot;gifsicle&quot;</span>, &#123;<span class="hljs-attr">interlaced</span>: <span class="hljs-literal">true</span>&#125;],<br>                            [<span class="hljs-string">&quot;jpegtran&quot;</span>, &#123;<span class="hljs-attr">progressive</span>: <span class="hljs-literal">true</span>&#125;],<br>                            [<span class="hljs-string">&quot;optipng&quot;</span>, &#123;<span class="hljs-attr">optimizationLevel</span>: <span class="hljs-number">5</span>&#125;],<br>                            [<br>                                <span class="hljs-string">&quot;svgo&quot;</span>,<br>                                &#123;<br>                                    <span class="hljs-attr">plugins</span>: [<br>                                        <span class="hljs-string">&quot;preset-default&quot;</span>,<br>                                        <span class="hljs-string">&quot;prefixIds&quot;</span>,<br>                                        &#123;<br>                                            <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;sortAttrs&quot;</span>,<br>                                            <span class="hljs-attr">params</span>: &#123;<br>                                                <span class="hljs-attr">xmlnsOrder</span>: <span class="hljs-string">&quot;alphabetical&quot;</span>,<br>                                            &#125;,<br>                                        &#125;,<br>                                    ],<br>                                &#125;,<br>                            ],<br>                        ],<br>                    &#125;,<br>                &#125;,<br>            &#125;),<br>        ],<br>    &#125;,<br><br>    <span class="hljs-attr">devServer</span>: &#123;<br>        <span class="hljs-attr">open</span>: <span class="hljs-literal">true</span>,<br>        <span class="hljs-attr">host</span>: <span class="hljs-string">&quot;localhost&quot;</span>,<br>        <span class="hljs-attr">port</span>: <span class="hljs-number">7000</span>,<br>        <span class="hljs-attr">hot</span>: <span class="hljs-literal">true</span>,<br>        <span class="hljs-attr">compress</span>: <span class="hljs-literal">true</span>,<br>        <span class="hljs-attr">historyApiFallback</span>: &#123;<br>            <span class="hljs-attr">index</span>: <span class="hljs-string">&#x27;/&#x27;</span><br>        &#125;, <span class="hljs-comment">// 解决 刷新404问题</span><br>        <span class="hljs-attr">proxy</span>:&#123;<br>            <span class="hljs-string">&#x27;/api&#x27;</span>: &#123;<br>                <span class="hljs-comment">// target: &#x27;http://47.119.194.94:8001&#x27;,</span><br>                <span class="hljs-attr">target</span>: <span class="hljs-string">&#x27;http://localhost:8001&#x27;</span>,<br>                <span class="hljs-attr">pathRewrite</span>: &#123;<span class="hljs-string">&#x27;&#x27;</span>: <span class="hljs-string">&#x27;&#x27;</span>&#125;,<br>                <span class="hljs-comment">// ws: true, //用于支持websocket</span><br>                <span class="hljs-comment">// changeOrigin: true //用于控制请求头中的host值</span><br>            &#125;,<br>        &#125;<br>    &#125;,<br>    <span class="hljs-comment">//webpack解析模块加载选项</span><br>    <span class="hljs-attr">resolve</span>: &#123;<br>        <span class="hljs-attr">extensions</span>: [<span class="hljs-string">&quot;.vue&quot;</span>, <span class="hljs-string">&quot;.js&quot;</span>, <span class="hljs-string">&quot;.json&quot;</span>], <span class="hljs-comment">// 自动补全文件扩展名</span><br>        <span class="hljs-attr">alias</span>: &#123;<br>            <span class="hljs-comment">// 路径别名</span><br>            <span class="hljs-string">&quot;@&quot;</span>: path.<span class="hljs-title function_">resolve</span>(__dirname, <span class="hljs-string">&quot;../src&quot;</span>),<br>        &#125;,<br>    &#125;,<br>    <span class="hljs-attr">performance</span>: <span class="hljs-literal">false</span>,<span class="hljs-comment">//关闭性能分析，提升打包速度</span><br>&#125;;<br><br></code></pre></td></tr></table></figure><p>&nbsp;</p><h4 id="tailwind-config-js-内容"><a href="#tailwind-config-js-内容" class="headerlink" title="tailwind.config.js 内容"></a>tailwind.config.js 内容</h4><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs dts">module.<span class="hljs-attr">exports</span> <span class="hljs-operator">=</span> <span class="hljs-punctuation">&#123;</span><br><span class="hljs-symbol">  purge:</span> [<span class="hljs-string">&quot;./src/**/*.&#123;js,jsx,vue&#125;&quot;</span>, <span class="hljs-string">&quot;./public/index.html&quot;</span>],<br><span class="hljs-symbol">  darkMode:</span> false, <span class="hljs-comment">// or &#x27;media&#x27; or &#x27;class&#x27;</span><br><span class="hljs-symbol">  theme:</span> <span class="hljs-punctuation">&#123;</span><br><span class="hljs-symbol">    extend:</span> <span class="hljs-punctuation">&#123;</span><span class="hljs-punctuation">&#125;</span>,<br>  <span class="hljs-punctuation">&#125;</span>,<br><span class="hljs-symbol">  variants:</span> <span class="hljs-punctuation">&#123;</span><br><span class="hljs-symbol">    extend:</span> <span class="hljs-punctuation">&#123;</span><span class="hljs-punctuation">&#125;</span>,<br>  <span class="hljs-punctuation">&#125;</span>,<br><span class="hljs-symbol">  plugins:</span> [],<br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>&nbsp;</p><h4 id="tailwindcss-css-内容"><a href="#tailwindcss-css-内容" class="headerlink" title="tailwindcss.css 内容"></a>tailwindcss.css 内容</h4><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-variable">@tailwind</span> base;<br><span class="hljs-variable">@tailwind</span> components;<br><span class="hljs-variable">@tailwind</span> utilities;<br><br></code></pre></td></tr></table></figure><p>&nbsp;<br>需要到main.js引入tailwindcss.css</p><h4 id="main-js-内容"><a href="#main-js-内容" class="headerlink" title="main.js 内容"></a>main.js 内容</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./App.vue&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">VueRouter</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue-router&#x27;</span><br><span class="hljs-keyword">import</span> router <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./router&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">VueToast</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue-toast-notification&#x27;</span>;<br><span class="hljs-keyword">import</span> moment <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;moment&quot;</span>;<br><span class="hljs-keyword">import</span> store <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./store&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;./assets/tailwindcss.css&#x27;</span><br><span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span><br><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">VueRouter</span>)<br><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">VueToast</span>)<br><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">filter</span>(<span class="hljs-string">&#x27;timeFormat&#x27;</span>,<span class="hljs-keyword">function</span>(<span class="hljs-params">value,str=<span class="hljs-string">&#x27;YYYY-MM-DD HH:mm:ss&#x27;</span></span>)&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">moment</span>(value).<span class="hljs-title function_">format</span>(str)<br>&#125;)<br><span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>    <span class="hljs-attr">render</span>: <span class="hljs-function"><span class="hljs-params">h</span> =&gt;</span> <span class="hljs-title function_">h</span>(<span class="hljs-title class_">App</span>),<br>    <span class="hljs-title function_">beforeCreate</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-title class_">Vue</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">$bus</span> = <span class="hljs-variable language_">this</span> <span class="hljs-comment">//安装全局事件总线</span><br>    &#125;,<br>    router,<br>    store,<br>&#125;).$mount(<span class="hljs-string">&#x27;#app&#x27;</span>)<br><br></code></pre></td></tr></table></figure><img src="/2024/04/07/%E6%90%AD%E5%BB%BA%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6-Vue2-Webpack5-tailwindcss2/1.png" class="" width="488"><p>&nbsp;</p>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
      <category>前端开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vuejs</tag>
      
      <tag>tailwindcss</tag>
      
      <tag>Webpack</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VMware Funsion安装macOS Sonoma 14</title>
    <link href="/2024/04/05/VmwareFunsion%E5%AE%89%E8%A3%85macOS14/"/>
    <url>/2024/04/05/VmwareFunsion%E5%AE%89%E8%A3%85macOS14/</url>
    
    <content type="html"><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>因为现在需要提交Apple Store审核应用时，提示错误：</p><div class="note note-warning @title">            <p>SDK version issue. This app was built with the iOS 16.4 SDK. Starting April 29, 2024, all iOS and iPadOS apps must be built with the iOS 17 SDK or later, included in Xcode 15 or later, in order to be uploaded to App Store Connect or submitted for distribution.</p>          </div><p>需要将Xcode升级到Xcode 15 ，升级Xcode 15 需要macOS Sonoma 14才能支持。<br>我的MacBook Pro是2017版的，无法升级到macOS Sonoma 14。他们目前只支持2018款以后的。陷入了一个死循环，这样到我无法去提交应用审核，所以只有借助Vmware Funsion安装macOS Sonoma 14。</p><h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><p>macOS<br>Vmware Funsion 13.5.0<br>&nbsp;<br>windows<br>安装 VMWare 虚拟机软件<a href="https://www.vmware.com/content/vmware/vmware-published-sites/us/products/workstation-pro/workstation-pro-evaluation.html.html">【官网下载】</a><br>下载<a href="https://github.com/paolo-projects/unlocker/releases">【VMWare Unlocker】</a>  ,以管理员身份运行 win-install<br>&nbsp;<br><a href="https://www.mediafire.com/file/lzlounvkwazy948/macOS+Sonoma+ISO.iso/file">下载macOS Sonoma 14</a></p><h3 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h3><p>正常安装就行，主要是配置，不然启动不了</p><img src="/2024/04/05/VmwareFunsion%E5%AE%89%E8%A3%85macOS14/1.png" class="" width="488"><p>&nbsp;</p><img src="/2024/04/05/VmwareFunsion%E5%AE%89%E8%A3%85macOS14/2.png" class="" width="488"><p>&nbsp;</p><img src="/2024/04/05/VmwareFunsion%E5%AE%89%E8%A3%85macOS14/3.png" class="" width="488"><p>&nbsp;</p><img src="/2024/04/05/VmwareFunsion%E5%AE%89%E8%A3%85macOS14/4.png" class="" width="488"><p>&nbsp;</p><img src="/2024/04/05/VmwareFunsion%E5%AE%89%E8%A3%85macOS14/5.png" class="" width="488"><p>&nbsp;</p><img src="/2024/04/05/VmwareFunsion%E5%AE%89%E8%A3%85macOS14/6.png" class="" width="488"><p>&nbsp;</p><h3 id="更改虚拟机配置"><a href="#更改虚拟机配置" class="headerlink" title="更改虚拟机配置"></a>更改虚拟机配置</h3><img src="/2024/04/05/VmwareFunsion%E5%AE%89%E8%A3%85macOS14/7.png" class="" width="488"><p>&nbsp;</p><img src="/2024/04/05/VmwareFunsion%E5%AE%89%E8%A3%85macOS14/8.png" class="" width="488"><p>&nbsp;</p><img src="/2024/04/05/VmwareFunsion%E5%AE%89%E8%A3%85macOS14/9.png" class="" width="488"><p>&nbsp;</p><img src="/2024/04/05/VmwareFunsion%E5%AE%89%E8%A3%85macOS14/10.png" class="" width="488"><p>&nbsp;</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">smc.version</span> = <span class="hljs-number">0</span> <br></code></pre></td></tr></table></figure><img src="/2024/04/05/VmwareFunsion%E5%AE%89%E8%A3%85macOS14/11.png" class="" width="488"><p>&nbsp;</p><img src="/2024/04/05/VmwareFunsion%E5%AE%89%E8%A3%85macOS14/12.png" class="" width="488"><p>&nbsp;</p><p>其他后续步骤按照提示进行即可。</p>]]></content>
    
    
    <categories>
      
      <category>工具分享</category>
      
      <category>技术分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>macOS Sonoma</tag>
      
      <tag>Vmware</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>利用Cloudflare Worker免费搭建科学上网节点，上网速度是真的快！</title>
    <link href="/2024/03/29/CloudflareWorker%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/"/>
    <url>/2024/03/29/CloudflareWorker%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/</url>
    
    <content type="html"><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>利用Cloudflare Worker搭建免费科学上网的节点，我测试了一下，这速度是真的快，轻松突破20w+。有了这个，谁还自己搭建VPS!一般的机场也可能达不到这样的速度。</p><img src="/2024/03/29/CloudflareWorker%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/1.png" class="" width="488"><p>&nbsp;</p><h3 id="所需工具"><a href="#所需工具" class="headerlink" title="所需工具"></a>所需工具</h3><h4 id="Cloudflare账号"><a href="#Cloudflare账号" class="headerlink" title="Cloudflare账号"></a>Cloudflare账号</h4><p>去Cloudflare注册一个账号，注册网址：<a href="https://dash.cloudflare.com/sign-up">https://dash.cloudflare.com/sign-up</a> 。后面所有的部署操作都需要用到它。</p><h4 id="科学上网工具"><a href="#科学上网工具" class="headerlink" title="科学上网工具"></a>科学上网工具</h4><p><a href="https://url49.ctfile.com/d/26918949-60520951-c0225f?p=4499">Clash for windows&#x2F;mac&#x2F;android</a> 访问密码: 4499</p><h3 id="搭建步骤"><a href="#搭建步骤" class="headerlink" title="搭建步骤"></a>搭建步骤</h3><h4 id="1-登录Cloudflare，找到Workers-Pages并点击创建Create-application"><a href="#1-登录Cloudflare，找到Workers-Pages并点击创建Create-application" class="headerlink" title="1.登录Cloudflare，找到Workers &amp; Pages并点击创建Create application."></a>1.登录Cloudflare，找到Workers &amp; Pages并点击创建Create application.</h4><img src="/2024/03/29/CloudflareWorker%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/2.png" class="" width="488"><p>&nbsp;</p><h4 id="2-点击Create-Worker-更改名字，点击Deploy"><a href="#2-点击Create-Worker-更改名字，点击Deploy" class="headerlink" title="2.点击Create Worker,更改名字，点击Deploy"></a>2.点击Create Worker,更改名字，点击Deploy</h4><img src="/2024/03/29/CloudflareWorker%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/3.png" class="" width="488"><p>&nbsp;</p><div class="note note-info @title">            <p>修改名字不是必须的，只是方便自己识别</p>          </div><img src="/2024/03/29/CloudflareWorker%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/4.png" class="" width="488"><p>&nbsp;</p><h4 id="3-编辑脚本"><a href="#3-编辑脚本" class="headerlink" title="3.编辑脚本"></a>3.编辑脚本</h4><img src="/2024/03/29/CloudflareWorker%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/5.png" class="" width="488"><p>&nbsp;</p><p>删除原来的内容，并复制下面的新脚本到这个文件中。</p><img src="/2024/03/29/CloudflareWorker%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/6.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/29/CloudflareWorker%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/7.png" class="" width="488"><p>&nbsp;</p><p>下面是新的脚本，点击右边的复制按钮复制内容。并将内容粘贴到worker.js中</p><figure class="highlight plaintext"><figcaption><span>@ts-ignore</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br></pre></td><td class="code"><pre><code class="hljs //">import &#123; connect &#125; from &#x27;cloudflare:sockets&#x27;;<br><br><br>let userID = &#x27;f974a9f4-7bcb-4961-9913-f87e75984635&#x27;;<br><br>let proxyIP = &#x27;&#x27;;// 小白勿动，该地址并不影响你的网速，这是给CF代理使用的。&#x27;cdn.xn--b6gac.eu.org&#x27;, &#x27;cdn-all.xn--b6gac.eu.org&#x27;, &#x27;edgetunnel.anycast.eu.org&#x27;<br><br>//let sub = &#x27;&#x27;;// 留空则显示原版内容<br>let sub = &#x27;vless-4ca.pages.dev&#x27;;// 内置优选订阅生成器，可自行搭建 https://github.com/cmliu/WorkerVless2sub<br>let subconverter = &#x27;api.v1.mk&#x27;;// clash订阅转换后端，目前使用肥羊的订阅转换功能。自带虚假uuid和host订阅。<br>let subconfig = &quot;https://raw.githubusercontent.com/cmliu/ACL4SSR/main/Clash/config/ACL4SSR_Online_Full_MultiMode.ini&quot;; //订阅配置文件<br>// The user name and password do not contain special characters<br>// Setting the address will ignore proxyIP<br>// Example:  user:pass@host:port  or  host:port<br>let socks5Address = &#x27;&#x27;;<br>let RproxyIP = &#x27;false&#x27;;<br>if (!isValidUUID(userID)) &#123;<br>    throw new Error(&#x27;uuid is not valid&#x27;);<br>&#125;<br><br>let parsedSocks5Address = &#123;&#125;;<br>let enableSocks = false;<br><br>// 虚假uuid和hostname，用于发送给配置生成服务<br>let fakeUserID = generateUUID();<br>let fakeHostName = generateRandomString();<br>let tls = true;<br>export default &#123;<br>    async fetch(request, env, ctx) &#123;<br>        try &#123;<br>            const userAgent = request.headers.get(&#x27;User-Agent&#x27;).toLowerCase();<br>            userID = (env.UUID || userID).toLowerCase();<br>            proxyIP = env.PROXYIP || proxyIP;<br>            socks5Address = env.SOCKS5 || socks5Address;<br>            sub = env.SUB || sub;<br>            subconverter = env.SUBAPI || subconverter;<br>            subconfig = env.SUBCONFIG || subconfig;<br>            if (socks5Address) &#123;<br>                RproxyIP = env.RPROXYIP || &#x27;false&#x27;;<br>                try &#123;<br>                    parsedSocks5Address = socks5AddressParser(socks5Address);<br>                    enableSocks = true;<br>                &#125; catch (err) &#123;<br>                    let e = err;<br>                    console.log(e.toString());<br>                    enableSocks = false;<br>                &#125;<br>            &#125; else &#123;<br>                RproxyIP = env.RPROXYIP || !proxyIP ? &#x27;true&#x27; : &#x27;false&#x27;;<br>            &#125;<br>            const upgradeHeader = request.headers.get(&#x27;Upgrade&#x27;);<br>            const url = new URL(request.url);<br>            if (url.searchParams.has(&#x27;notls&#x27;)) tls = false;<br>            if (!upgradeHeader || upgradeHeader !== &#x27;websocket&#x27;) &#123;<br>                // const url = new URL(request.url);<br>                switch (url.pathname.toLowerCase()) &#123;<br>                    case &#x27;/&#x27;:<br>                        return new Response(JSON.stringify(request.cf), &#123; status: 200 &#125;);<br>                    case `/$&#123;userID&#125;`: &#123;<br>                        const vlessConfig = await getVLESSConfig(userID, request.headers.get(&#x27;Host&#x27;), sub, userAgent, RproxyIP);<br>                        const now = Date.now();<br>                        const timestamp = Math.floor(now / 1000);<br>                        const expire = 4102329600;//2099-12-31<br>                        const today = new Date(now);<br>                        today.setHours(0, 0, 0, 0);<br>                        const UD = Math.floor(((now - today.getTime())/86400000) * 24 * 1099511627776 / 2);<br>                        if (userAgent &amp;&amp; userAgent.includes(&#x27;mozilla&#x27;))&#123;<br>                            return new Response(`$&#123;vlessConfig&#125;`, &#123;<br>                                status: 200,<br>                                headers: &#123;<br>                                    &quot;Content-Type&quot;: &quot;text/plain;charset=utf-8&quot;,<br>                                &#125;<br>                            &#125;);<br>                        &#125; else &#123;<br>                            return new Response(`$&#123;vlessConfig&#125;`, &#123;<br>                                status: 200,<br>                                headers: &#123;<br>                                    &quot;Content-Disposition&quot;: &quot;attachment; filename=edgetunnel; filename*=utf-8&#x27;&#x27;edgetunnel&quot;,<br>                                    &quot;Content-Type&quot;: &quot;text/plain;charset=utf-8&quot;,<br>                                    &quot;Profile-Update-Interval&quot;: &quot;6&quot;,<br>                                    &quot;Subscription-Userinfo&quot;: `upload=$&#123;UD&#125;; download=$&#123;UD&#125;; total=$&#123;24 * 1099511627776&#125;; expire=$&#123;expire&#125;`,<br>                                &#125;<br>                            &#125;);<br>                        &#125;<br>                    &#125;<br>                    default:<br>                        return new Response(&#x27;Not found&#x27;, &#123; status: 404 &#125;);<br>                &#125;<br>            &#125; else &#123;<br>                if (new RegExp(&#x27;/proxyip=&#x27;, &#x27;i&#x27;).test(url.pathname)) proxyIP = url.pathname.split(&quot;=&quot;)[1];<br>                else if (new RegExp(&#x27;/proxyip.&#x27;, &#x27;i&#x27;).test(url.pathname)) proxyIP = url.pathname.split(&quot;/proxyip.&quot;)[1];<br>                else if (!proxyIP || proxyIP == &#x27;&#x27;) proxyIP = &#x27;proxyip.fxxk.dedyn.io&#x27;;<br>                return await vlessOverWSHandler(request);<br>            &#125;<br>        &#125; catch (err) &#123;<br>             let e = err;<br>            return new Response(e.toString());<br>        &#125;<br>    &#125;,<br>&#125;;<br>async function vlessOverWSHandler(request) &#123;<br><br>        // @ts-ignore<br>    const webSocketPair = new WebSocketPair();<br>    const [client, webSocket] = Object.values(webSocketPair);<br><br>    webSocket.accept();<br><br>    let address = &#x27;&#x27;;<br>    let portWithRandomLog = &#x27;&#x27;;<br>    const log = ( info,  event) =&gt; &#123;<br>        console.log(`[$&#123;address&#125;:$&#123;portWithRandomLog&#125;] $&#123;info&#125;`, event || &#x27;&#x27;);<br>    &#125;;<br>    const earlyDataHeader = request.headers.get(&#x27;sec-websocket-protocol&#x27;) || &#x27;&#x27;;<br><br>    const readableWebSocketStream = makeReadableWebSocketStream(webSocket, earlyDataHeader, log);<br><br>    let remoteSocketWapper = &#123;<br>        value: null,<br>    &#125;;<br>    let isDns = false;<br><br>    // ws --&gt; remote<br>    readableWebSocketStream.pipeTo(new WritableStream(&#123;<br>        async write(chunk, controller) &#123;<br>            if (isDns) &#123;<br>                return await handleDNSQuery(chunk, webSocket, null, log);<br>            &#125;<br>            if (remoteSocketWapper.value) &#123;<br>                const writer = remoteSocketWapper.value.writable.getWriter()<br>                await writer.write(chunk);<br>                writer.releaseLock();<br>                return;<br>            &#125;<br><br>            const &#123;<br>                hasError,<br>                message,<br>                addressType,<br>                portRemote = 443,<br>                addressRemote = &#x27;&#x27;,<br>                rawDataIndex,<br>                vlessVersion = new Uint8Array([0, 0]),<br>                isUDP,<br>            &#125; = processVlessHeader(chunk, userID);<br>            address = addressRemote;<br>            portWithRandomLog = `$&#123;portRemote&#125;--$&#123;Math.random()&#125; $&#123;isUDP ? &#x27;udp &#x27; : &#x27;tcp &#x27;<br>            &#125; `;<br>            if (hasError) &#123;<br>                // controller.error(message);<br>                throw new Error(message); // cf seems has bug, controller.error will not end stream<br>                // webSocket.close(1000, message);<br>                return;<br>            &#125;<br>            // if UDP but port not DNS port, close it<br>            if (isUDP) &#123;<br>                if (portRemote === 53) &#123;<br>                    isDns = true;<br>                &#125; else &#123;<br>                    // controller.error(&#x27;UDP proxy only enable for DNS which is port 53&#x27;);<br>                    throw new Error(&#x27;UDP proxy only enable for DNS which is port 53&#x27;); // cf seems has bug, controller.error will not end stream<br>                    return;<br>                &#125;<br>            &#125;<br>            // [&quot;version&quot;, &quot;附加信息长度 N&quot;]<br>            const vlessResponseHeader = new Uint8Array([vlessVersion[0], 0]);<br>            const rawClientData = chunk.slice(rawDataIndex);<br><br>            if (isDns) &#123;<br>                return handleDNSQuery(rawClientData, webSocket, vlessResponseHeader, log);<br>            &#125;<br>            handleTCPOutBound(remoteSocketWapper, addressType, addressRemote, portRemote, rawClientData, webSocket, vlessResponseHeader, log);<br>        &#125;,<br>        close() &#123;<br>            log(`readableWebSocketStream is close`);<br>        &#125;,<br>        abort(reason) &#123;<br>            log(`readableWebSocketStream is abort`, JSON.stringify(reason));<br>        &#125;,<br>    &#125;)).catch((err) =&gt; &#123;<br>        log(&#x27;readableWebSocketStream pipeTo error&#x27;, err);<br>    &#125;);<br><br>    return new Response(null, &#123;<br>        status: 101,<br>        // @ts-ignore<br>        webSocket: client,<br>    &#125;);<br>&#125;<br><br>async function handleTCPOutBound(remoteSocket, addressType, addressRemote, portRemote, rawClientData, webSocket, vlessResponseHeader, log,) &#123;<br>    async function connectAndWrite(address, port, socks = false) &#123;<br>        const tcpSocket = socks ? await socks5Connect(addressType, address, port, log)<br>            : connect(&#123;<br>                hostname: address,<br>                port: port,<br>            &#125;);<br>        remoteSocket.value = tcpSocket;<br>        log(`connected to $&#123;address&#125;:$&#123;port&#125;`);<br>        const writer = tcpSocket.writable.getWriter();<br>        await writer.write(rawClientData); // first write, normal is tls client hello<br>        writer.releaseLock();<br>        return tcpSocket;<br>    &#125;<br><br>    // if the cf connect tcp socket have no incoming data, we retry to redirect ip<br>    async function retry() &#123;<br>        if (enableSocks) &#123;<br>            tcpSocket = await connectAndWrite(addressRemote, portRemote, true);<br>        &#125; else &#123;<br>            tcpSocket = await connectAndWrite(proxyIP || addressRemote, portRemote);<br>        &#125;<br>        // no matter retry success or not, close websocket<br>        tcpSocket.closed.catch(error =&gt; &#123;<br>            console.log(&#x27;retry tcpSocket closed error&#x27;, error);<br>        &#125;).finally(() =&gt; &#123;<br>            safeCloseWebSocket(webSocket);<br>        &#125;)<br>        remoteSocketToWS(tcpSocket, webSocket, vlessResponseHeader, null, log);<br>    &#125;<br><br>    let tcpSocket = await connectAndWrite(addressRemote, portRemote);<br><br>    // when remoteSocket is ready, pass to websocket<br>    // remote--&gt; ws<br>    remoteSocketToWS(tcpSocket, webSocket, vlessResponseHeader, retry, log);<br>&#125;<br><br>function makeReadableWebSocketStream(webSocketServer, earlyDataHeader, log) &#123;<br>    let readableStreamCancel = false;<br>    const stream = new ReadableStream(&#123;<br>        start(controller) &#123;<br>            webSocketServer.addEventListener(&#x27;message&#x27;, (event) =&gt; &#123;<br>                if (readableStreamCancel) &#123;<br>                    return;<br>                &#125;<br>                const message = event.data;<br>                controller.enqueue(message);<br>            &#125;);<br><br>            // The event means that the client closed the client -&gt; server stream.<br>            // However, the server -&gt; client stream is still open until you call close() on the server side.<br>            // The WebSocket protocol says that a separate close message must be sent in each direction to fully close the socket.<br>            webSocketServer.addEventListener(&#x27;close&#x27;, () =&gt; &#123;<br>                    // client send close, need close server<br>                    // if stream is cancel, skip controller.close<br>                    safeCloseWebSocket(webSocketServer);<br>                    if (readableStreamCancel) &#123;<br>                        return;<br>                    &#125;<br>                    controller.close();<br>                &#125;<br>            );<br>            webSocketServer.addEventListener(&#x27;error&#x27;, (err) =&gt; &#123;<br>                    log(&#x27;webSocketServer has error&#x27;);<br>                    controller.error(err);<br>                &#125;<br>            );<br>            // for ws 0rtt<br>            const &#123; earlyData, error &#125; = base64ToArrayBuffer(earlyDataHeader);<br>            if (error) &#123;<br>                controller.error(error);<br>            &#125; else if (earlyData) &#123;<br>                controller.enqueue(earlyData);<br>            &#125;<br>        &#125;,<br><br>        pull(controller) &#123;<br>            // if ws can stop read if stream is full, we can implement backpressure<br>            // https://streams.spec.whatwg.org/#example-rs-push-backpressure<br>        &#125;,<br>        cancel(reason) &#123;<br>            // 1. pipe WritableStream has error, this cancel will called, so ws handle server close into here<br>            // 2. if readableStream is cancel, all controller.close/enqueue need skip,<br>            // 3. but from testing controller.error still work even if readableStream is cancel<br>            if (readableStreamCancel) &#123;<br>                return;<br>            &#125;<br>            log(`ReadableStream was canceled, due to $&#123;reason&#125;`)<br>            readableStreamCancel = true;<br>            safeCloseWebSocket(webSocketServer);<br>        &#125;<br>    &#125;);<br><br>    return stream;<br><br>&#125;<br><br><br>function processVlessHeader(<br>    vlessBuffer,<br>    userID<br>) &#123;<br>    if (vlessBuffer.byteLength &lt; 24) &#123;<br>        return &#123;<br>            hasError: true,<br>            message: &#x27;invalid data&#x27;,<br>        &#125;;<br>    &#125;<br>    const version = new Uint8Array(vlessBuffer.slice(0, 1));<br>    let isValidUser = false;<br>    let isUDP = false;<br>    if (stringify(new Uint8Array(vlessBuffer.slice(1, 17))) === userID) &#123;<br>        isValidUser = true;<br>    &#125;<br>    if (!isValidUser) &#123;<br>        return &#123;<br>            hasError: true,<br>            message: &#x27;invalid user&#x27;,<br>        &#125;;<br>    &#125;<br><br>    const optLength = new Uint8Array(vlessBuffer.slice(17, 18))[0];<br>    //skip opt for now<br><br>    const command = new Uint8Array(<br>        vlessBuffer.slice(18 + optLength, 18 + optLength + 1)<br>    )[0];<br><br>    // 0x01 TCP<br>    // 0x02 UDP<br>    // 0x03 MUX<br>    if (command === 1) &#123;<br>    &#125; else if (command === 2) &#123;<br>        isUDP = true;<br>    &#125; else &#123;<br>        return &#123;<br>            hasError: true,<br>            message: `command $&#123;command&#125; is not support, command 01-tcp,02-udp,03-mux`,<br>        &#125;;<br>    &#125;<br>    const portIndex = 18 + optLength + 1;<br>    const portBuffer = vlessBuffer.slice(portIndex, portIndex + 2);<br>    // port is big-Endian in raw data etc 80 == 0x005d<br>    const portRemote = new DataView(portBuffer).getUint16(0);<br><br>    let addressIndex = portIndex + 2;<br>    const addressBuffer = new Uint8Array(<br>        vlessBuffer.slice(addressIndex, addressIndex + 1)<br>    );<br><br>    // 1--&gt; ipv4  addressLength =4<br>    // 2--&gt; domain name addressLength=addressBuffer[1]<br>    // 3--&gt; ipv6  addressLength =16<br>    const addressType = addressBuffer[0];<br>    let addressLength = 0;<br>    let addressValueIndex = addressIndex + 1;<br>    let addressValue = &#x27;&#x27;;<br>    switch (addressType) &#123;<br>        case 1:<br>            addressLength = 4;<br>            addressValue = new Uint8Array(<br>                vlessBuffer.slice(addressValueIndex, addressValueIndex + addressLength)<br>            ).join(&#x27;.&#x27;);<br>            break;<br>        case 2:<br>            addressLength = new Uint8Array(<br>                vlessBuffer.slice(addressValueIndex, addressValueIndex + 1)<br>            )[0];<br>            addressValueIndex += 1;<br>            addressValue = new TextDecoder().decode(<br>                vlessBuffer.slice(addressValueIndex, addressValueIndex + addressLength)<br>            );<br>            break;<br>        case 3:<br>            addressLength = 16;<br>            const dataView = new DataView(<br>                vlessBuffer.slice(addressValueIndex, addressValueIndex + addressLength)<br>            );<br>            // 2001:0db8:85a3:0000:0000:8a2e:0370:7334<br>            const ipv6 = [];<br>            for (let i = 0; i &lt; 8; i++) &#123;<br>                ipv6.push(dataView.getUint16(i * 2).toString(16));<br>            &#125;<br>            addressValue = ipv6.join(&#x27;:&#x27;);<br>            // seems no need add [] for ipv6<br>            break;<br>        default:<br>            return &#123;<br>                hasError: true,<br>                message: `invild  addressType is $&#123;addressType&#125;`,<br>            &#125;;<br>    &#125;<br>    if (!addressValue) &#123;<br>        return &#123;<br>            hasError: true,<br>            message: `addressValue is empty, addressType is $&#123;addressType&#125;`,<br>        &#125;;<br>    &#125;<br><br>    return &#123;<br>        hasError: false,<br>        addressRemote: addressValue,<br>        addressType,<br>        portRemote,<br>        rawDataIndex: addressValueIndex + addressLength,<br>        vlessVersion: version,<br>        isUDP,<br>    &#125;;<br>&#125;<br><br><br>async function remoteSocketToWS(remoteSocket, webSocket, vlessResponseHeader, retry, log) &#123;<br>    // remote--&gt; ws<br>    let remoteChunkCount = 0;<br>    let chunks = [];<br>    let vlessHeader = vlessResponseHeader;<br>    let hasIncomingData = false; // check if remoteSocket has incoming data<br>    await remoteSocket.readable<br>        .pipeTo(<br>            new WritableStream(&#123;<br>                start() &#123;<br>                &#125;,<br>                async write(chunk, controller) &#123;<br>                    hasIncomingData = true;<br>                    // remoteChunkCount++;<br>                    if (webSocket.readyState !== WS_READY_STATE_OPEN) &#123;<br>                        controller.error(<br>                            &#x27;webSocket.readyState is not open, maybe close&#x27;<br>                        );<br>                    &#125;<br>                    if (vlessHeader) &#123;<br>                        webSocket.send(await new Blob([vlessHeader, chunk]).arrayBuffer());<br>                        vlessHeader = null;<br>                    &#125; else &#123;<br>                        // seems no need rate limit this, CF seems fix this??..<br>                        // if (remoteChunkCount &gt; 20000) &#123;<br>                        // // cf one package is 4096 byte(4kb),  4096 * 20000 = 80M<br>                        // await delay(1);<br>                        // &#125;<br>                        webSocket.send(chunk);<br>                    &#125;<br>                &#125;,<br>                close() &#123;<br>                    log(`remoteConnection!.readable is close with hasIncomingData is $&#123;hasIncomingData&#125;`);<br>                    // safeCloseWebSocket(webSocket); // no need server close websocket frist for some case will casue HTTP ERR_CONTENT_LENGTH_MISMATCH issue, client will send close event anyway.<br>                &#125;,<br>                abort(reason) &#123;<br>                    console.error(`remoteConnection!.readable abort`, reason);<br>                &#125;,<br>            &#125;)<br>        )<br>        .catch((error) =&gt; &#123;<br>            console.error(<br>                `remoteSocketToWS has exception `,<br>                error.stack || error<br>            );<br>            safeCloseWebSocket(webSocket);<br>        &#125;);<br><br>    // seems is cf connect socket have error,<br>    // 1. Socket.closed will have error<br>    // 2. Socket.readable will be close without any data coming<br>    if (hasIncomingData === false &amp;&amp; retry) &#123;<br>        log(`retry`)<br>        retry();<br>    &#125;<br>&#125;<br><br>function base64ToArrayBuffer(base64Str) &#123;<br>    if (!base64Str) &#123;<br>        return &#123; error: null &#125;;<br>    &#125;<br>    try &#123;<br>        // go use modified Base64 for URL rfc4648 which js atob not support<br>        base64Str = base64Str.replace(/-/g, &#x27;+&#x27;).replace(/_/g, &#x27;/&#x27;);<br>        const decode = atob(base64Str);<br>        const arryBuffer = Uint8Array.from(decode, (c) =&gt; c.charCodeAt(0));<br>        return &#123; earlyData: arryBuffer.buffer, error: null &#125;;<br>    &#125; catch (error) &#123;<br>        return &#123; error &#125;;<br>    &#125;<br>&#125;<br><br>function isValidUUID(uuid) &#123;<br>    const uuidRegex = /^[0-9a-f]&#123;8&#125;-[0-9a-f]&#123;4&#125;-[4][0-9a-f]&#123;3&#125;-[89ab][0-9a-f]&#123;3&#125;-[0-9a-f]&#123;12&#125;$/i;<br>    return uuidRegex.test(uuid);<br>&#125;<br><br>const WS_READY_STATE_OPEN = 1;<br>const WS_READY_STATE_CLOSING = 2;<br>function safeCloseWebSocket(socket) &#123;<br>    try &#123;<br>        if (socket.readyState === WS_READY_STATE_OPEN || socket.readyState === WS_READY_STATE_CLOSING) &#123;<br>            socket.close();<br>        &#125;<br>    &#125; catch (error) &#123;<br>        console.error(&#x27;safeCloseWebSocket error&#x27;, error);<br>    &#125;<br>&#125;<br><br>const byteToHex = [];<br>for (let i = 0; i &lt; 256; ++i) &#123;<br>    byteToHex.push((i + 256).toString(16).slice(1));<br>&#125;<br>function unsafeStringify(arr, offset = 0) &#123;<br>    return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + &quot;-&quot; + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + &quot;-&quot; + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + &quot;-&quot; + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + &quot;-&quot; + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();<br>&#125;<br>function stringify(arr, offset = 0) &#123;<br>    const uuid = unsafeStringify(arr, offset);<br>    if (!isValidUUID(uuid)) &#123;<br>        throw TypeError(&quot;Stringified UUID is invalid&quot;);<br>    &#125;<br>    return uuid;<br>&#125;<br><br>async function handleDNSQuery(udpChunk, webSocket, vlessResponseHeader, log) &#123;<br>    // no matter which DNS server client send, we alwasy use hard code one.<br>    // beacsue someof DNS server is not support DNS over TCP<br>    try &#123;<br>        const dnsServer = &#x27;8.8.4.4&#x27;; // change to 1.1.1.1 after cf fix connect own ip bug<br>        const dnsPort = 53;<br>        let vlessHeader = vlessResponseHeader;<br>        const tcpSocket = connect(&#123;<br>            hostname: dnsServer,<br>            port: dnsPort,<br>        &#125;);<br><br>        log(`connected to $&#123;dnsServer&#125;:$&#123;dnsPort&#125;`);<br>        const writer = tcpSocket.writable.getWriter();<br>        await writer.write(udpChunk);<br>        writer.releaseLock();<br>        await tcpSocket.readable.pipeTo(new WritableStream(&#123;<br>            async write(chunk) &#123;<br>                if (webSocket.readyState === WS_READY_STATE_OPEN) &#123;<br>                    if (vlessHeader) &#123;<br>                        webSocket.send(await new Blob([vlessHeader, chunk]).arrayBuffer());<br>                        vlessHeader = null;<br>                    &#125; else &#123;<br>                        webSocket.send(chunk);<br>                    &#125;<br>                &#125;<br>            &#125;,<br>            close() &#123;<br>                log(`dns server($&#123;dnsServer&#125;) tcp is close`);<br>            &#125;,<br>            abort(reason) &#123;<br>                console.error(`dns server($&#123;dnsServer&#125;) tcp is abort`, reason);<br>            &#125;,<br>        &#125;));<br>    &#125; catch (error) &#123;<br>        console.error(<br>            `handleDNSQuery have exception, error: $&#123;error.message&#125;`<br>        );<br>    &#125;<br>&#125;<br><br>async function socks5Connect(addressType, addressRemote, portRemote, log) &#123;<br>    const &#123; username, password, hostname, port &#125; = parsedSocks5Address;<br>    // Connect to the SOCKS server<br>    const socket = connect(&#123;<br>        hostname,<br>        port,<br>    &#125;);<br><br>    // Request head format (Worker -&gt; Socks Server):<br>    // +----+----------+----------+<br>    // |VER | NMETHODS | METHODS  |<br>    // +----+----------+----------+<br>    // | 1  |    1     | 1 to 255 |<br>    // +----+----------+----------+<br><br>    // https://en.wikipedia.org/wiki/SOCKS#SOCKS5<br>    // For METHODS:<br>    // 0x00 NO AUTHENTICATION REQUIRED<br>    // 0x02 USERNAME/PASSWORD https://datatracker.ietf.org/doc/html/rfc1929<br>    const socksGreeting = new Uint8Array([5, 2, 0, 2]);<br><br>    const writer = socket.writable.getWriter();<br><br>    await writer.write(socksGreeting);<br>    log(&#x27;sent socks greeting&#x27;);<br><br>    const reader = socket.readable.getReader();<br>    const encoder = new TextEncoder();<br>    let res = (await reader.read()).value;<br>    // Response format (Socks Server -&gt; Worker):<br>    // +----+--------+<br>    // |VER | METHOD |<br>    // +----+--------+<br>    // | 1  |   1    |<br>    // +----+--------+<br>    if (res[0] !== 0x05) &#123;<br>        log(`socks server version error: $&#123;res[0]&#125; expected: 5`);<br>        return;<br>    &#125;<br>    if (res[1] === 0xff) &#123;<br>        log(&quot;no acceptable methods&quot;);<br>        return;<br>    &#125;<br><br>    // if return 0x0502<br>    if (res[1] === 0x02) &#123;<br>        log(&quot;socks server needs auth&quot;);<br>        if (!username || !password) &#123;<br>            log(&quot;please provide username/password&quot;);<br>            return;<br>        &#125;<br>        // +----+------+----------+------+----------+<br>        // |VER | ULEN |  UNAME   | PLEN |  PASSWD  |<br>        // +----+------+----------+------+----------+<br>        // | 1  |  1   | 1 to 255 |  1   | 1 to 255 |<br>        // +----+------+----------+------+----------+<br>        const authRequest = new Uint8Array([<br>            1,<br>            username.length,<br>            ...encoder.encode(username),<br>            password.length,<br>            ...encoder.encode(password)<br>        ]);<br>        await writer.write(authRequest);<br>        res = (await reader.read()).value;<br>        // expected 0x0100<br>        if (res[0] !== 0x01 || res[1] !== 0x00) &#123;<br>            log(&quot;fail to auth socks server&quot;);<br>            return;<br>        &#125;<br>    &#125;<br><br>    // Request data format (Worker -&gt; Socks Server):<br>    // +----+-----+-------+------+----------+----------+<br>    // |VER | CMD |  RSV  | ATYP | DST.ADDR | DST.PORT |<br>    // +----+-----+-------+------+----------+----------+<br>    // | 1  |  1  | X&#x27;00&#x27; |  1   | Variable |    2     |<br>    // +----+-----+-------+------+----------+----------+<br>    // ATYP: address type of following address<br>    // 0x01: IPv4 address<br>    // 0x03: Domain name<br>    // 0x04: IPv6 address<br>    // DST.ADDR: desired destination address<br>    // DST.PORT: desired destination port in network octet order<br><br>    // addressType<br>    // 1--&gt; ipv4  addressLength =4<br>    // 2--&gt; domain name<br>    // 3--&gt; ipv6  addressLength =16<br>    let DSTADDR;// DSTADDR = ATYP + DST.ADDR<br>    switch (addressType) &#123;<br>        case 1:<br>            DSTADDR = new Uint8Array(<br>                [1, ...addressRemote.split(&#x27;.&#x27;).map(Number)]<br>            );<br>            break;<br>        case 2:<br>            DSTADDR = new Uint8Array(<br>                [3, addressRemote.length, ...encoder.encode(addressRemote)]<br>            );<br>            break;<br>        case 3:<br>            DSTADDR = new Uint8Array(<br>                [4, ...addressRemote.split(&#x27;:&#x27;).flatMap(x =&gt; [parseInt(x.slice(0, 2), 16), parseInt(x.slice(2), 16)])]<br>            );<br>            break;<br>        default:<br>            log(`invild  addressType is $&#123;addressType&#125;`);<br>            return;<br>    &#125;<br>    const socksRequest = new Uint8Array([5, 1, 0, ...DSTADDR, portRemote &gt;&gt; 8, portRemote &amp; 0xff]);<br>    await writer.write(socksRequest);<br>    log(&#x27;sent socks request&#x27;);<br><br>    res = (await reader.read()).value;<br>    // Response format (Socks Server -&gt; Worker):<br>    //  +----+-----+-------+------+----------+----------+<br>    // |VER | REP |  RSV  | ATYP | BND.ADDR | BND.PORT |<br>    // +----+-----+-------+------+----------+----------+<br>    // | 1  |  1  | X&#x27;00&#x27; |  1   | Variable |    2     |<br>    // +----+-----+-------+------+----------+----------+<br>    if (res[1] === 0x00) &#123;<br>        log(&quot;socks connection opened&quot;);<br>    &#125; else &#123;<br>        log(&quot;fail to open socks connection&quot;);<br>        return;<br>    &#125;<br>    writer.releaseLock();<br>    reader.releaseLock();<br>    return socket;<br>&#125;<br><br><br>function socks5AddressParser(address) &#123;<br>    let [latter, former] = address.split(&quot;@&quot;).reverse();<br>    let username, password, hostname, port;<br>    if (former) &#123;<br>        const formers = former.split(&quot;:&quot;);<br>        if (formers.length !== 2) &#123;<br>            throw new Error(&#x27;Invalid SOCKS address format&#x27;);<br>        &#125;<br>        [username, password] = formers;<br>    &#125;<br>    const latters = latter.split(&quot;:&quot;);<br>    port = Number(latters.pop());<br>    if (isNaN(port)) &#123;<br>        throw new Error(&#x27;Invalid SOCKS address format&#x27;);<br>    &#125;<br>    hostname = latters.join(&quot;:&quot;);<br>    const regex = /^\[.*\]$/;<br>    if (hostname.includes(&quot;:&quot;) &amp;&amp; !regex.test(hostname)) &#123;<br>        throw new Error(&#x27;Invalid SOCKS address format&#x27;);<br>    &#125;<br>    return &#123;<br>        username,<br>        password,<br>        hostname,<br>        port,<br>    &#125;<br>&#125;<br><br>function revertFakeInfo(content, userID, hostName, isBase64) &#123;<br>    if (isBase64) content = atob(content);//Base64解码<br>    content = content.replace(new RegExp(fakeUserID, &#x27;g&#x27;), userID).replace(new RegExp(fakeHostName, &#x27;g&#x27;), hostName);<br>    if (isBase64) content = btoa(content);//Base64编码<br><br>    return content;<br>&#125;<br><br>function generateRandomNumber() &#123;<br>    let minNum = 100000;<br>    let maxNum = 999999;<br>    return Math.floor(Math.random() * (maxNum - minNum + 1)) + minNum;<br>&#125;<br><br>function generateRandomString() &#123;<br>    let minLength = 2;<br>    let maxLength = 3;<br>    let length = Math.floor(Math.random() * (maxLength - minLength + 1)) + minLength;<br>    let characters = &#x27;abcdefghijklmnopqrstuvwxyz&#x27;;<br>    let result = &#x27;&#x27;;<br>    for (let i = 0; i &lt; length; i++) &#123;<br>        result += characters[Math.floor(Math.random() * characters.length)];<br>    &#125;<br>    return result;<br>&#125;<br><br>function generateUUID() &#123;<br>    let uuid = &#x27;&#x27;;<br>    for (let i = 0; i &lt; 32; i++) &#123;<br>        let num = Math.floor(Math.random() * 16);<br>        if (num &lt; 10) &#123;<br>            uuid += num;<br>        &#125; else &#123;<br>            uuid += String.fromCharCode(num + 55);<br>        &#125;<br>    &#125;<br>    return uuid.replace(/(.&#123;8&#125;)(.&#123;4&#125;)(.&#123;4&#125;)(.&#123;4&#125;)(.&#123;12&#125;)/, &#x27;$1-$2-$3-$4-$5&#x27;).toLowerCase();<br>&#125;<br><br>async function getVLESSConfig(userID, hostName, sub, userAgent, RproxyIP) &#123;<br>    // 如果sub为空，则显示原始内容<br>    if (!sub || sub === &#x27;&#x27;) &#123;<br>        const vlessMain = `vless://$&#123;userID&#125;@$&#123;hostName&#125;:443?encryption=none&amp;security=tls&amp;sni=$&#123;hostName&#125;&amp;fp=randomized&amp;type=ws&amp;host=$&#123;hostName&#125;&amp;path=%2F%3Fed%3D2048#$&#123;hostName&#125;`;<br><br>        return `<br>################################################################<br>v2ray<br>---------------------------------------------------------------<br>$&#123;vlessMain&#125;<br>---------------------------------------------------------------<br>################################################################<br>clash-meta<br>---------------------------------------------------------------<br>- type: vless<br>  name: $&#123;hostName&#125;<br>  server: $&#123;hostName&#125;<br>  port: 443<br>  uuid: $&#123;userID&#125;<br>  network: ws<br>  tls: true<br>  udp: false<br>  sni: $&#123;hostName&#125;<br>  client-fingerprint: chrome<br>  ws-opts:<br>    path: &quot;/?ed=2048&quot;<br>    headers:<br>  host: $&#123;hostName&#125;<br>---------------------------------------------------------------<br>################################################################<br>`;<br>    &#125; else if (sub &amp;&amp; userAgent.includes(&#x27;mozilla&#x27;) &amp;&amp; !userAgent.includes(&#x27;linux x86&#x27;)) &#123;<br>        const vlessMain = `vless://$&#123;userID&#125;@$&#123;hostName&#125;:443?encryption=none&amp;security=tls&amp;sni=$&#123;hostName&#125;&amp;fp=randomized&amp;type=ws&amp;host=$&#123;hostName&#125;&amp;path=%2F%3Fed%3D2048#$&#123;hostName&#125;`;<br><br>        return `<br>################################################################<br>Subscribe / sub 订阅地址, 支持 Base64、clash-meta、sing-box 订阅格式, 您的订阅内容由 $&#123;sub&#125; 提供维护支持, 自动获取ProxyIP: $&#123;RproxyIP&#125;.<br>---------------------------------------------------------------<br>https://$&#123;hostName&#125;/$&#123;userID&#125;<br>---------------------------------------------------------------<br>################################################################<br>v2ray<br>---------------------------------------------------------------<br>$&#123;vlessMain&#125;<br>---------------------------------------------------------------<br>################################################################<br>clash-meta<br>---------------------------------------------------------------<br>- type: vless<br>  name: $&#123;hostName&#125;<br>  server: $&#123;hostName&#125;<br>  port: 443<br>  uuid: $&#123;userID&#125;<br>  network: ws<br>  tls: true<br>  udp: false<br>  sni: $&#123;hostName&#125;<br>  client-fingerprint: chrome<br>  ws-opts:<br>path: &quot;/?ed=2048&quot;<br>headers:<br>  host: $&#123;hostName&#125;<br>---------------------------------------------------------------<br>################################################################<br>---------------------------------------------------------------<br>---------------------------------------------------------------<br>################################################################<br>`;<br>    &#125; else &#123;<br>        if (typeof fetch != &#x27;function&#x27;) &#123;<br>            return &#x27;Error: fetch is not available in this environment.&#x27;;<br>        &#125;<br>        // 如果是使用默认域名，则改成一个workers的域名，订阅器会加上代理<br>        if (hostName.includes(&quot;.workers.dev&quot;))&#123;<br>            fakeHostName = `$&#123;fakeHostName&#125;.$&#123;generateRandomString()&#125;$&#123;generateRandomNumber()&#125;.workers.dev`;<br>        &#125; else if (hostName.includes(&quot;.pages.dev&quot;))&#123;<br>            fakeHostName = `$&#123;fakeHostName&#125;.$&#123;generateRandomString()&#125;$&#123;generateRandomNumber()&#125;.pages.dev`;<br>        &#125; else if (hostName.includes(&quot;worker&quot;) || hostName.includes(&quot;notls&quot;) || tls == false)&#123;<br>            fakeHostName = `notls.$&#123;fakeHostName&#125;$&#123;generateRandomNumber()&#125;.net`;<br>        &#125; else &#123;<br>            fakeHostName = `$&#123;fakeHostName&#125;.$&#123;generateRandomNumber()&#125;.xyz`<br>        &#125;<br>        let content = &quot;&quot;;<br>        let url = &quot;&quot;;<br>        let isBase64 = false;<br>        if (userAgent.includes(&#x27;clash&#x27;) &amp;&amp; !userAgent.includes(&#x27;nekobox&#x27;)) &#123;<br>            url = `https://$&#123;subconverter&#125;/sub?target=clash&amp;url=https%3A%2F%2F$&#123;sub&#125;%2Fsub%3Fhost%3D$&#123;fakeHostName&#125;%26uuid%3D$&#123;fakeUserID&#125;%26edgetunnel%3Dcmliu%26proxyip%3D$&#123;RproxyIP&#125;&amp;insert=false&amp;config=$&#123;encodeURIComponent(subconfig)&#125;&amp;emoji=true&amp;list=false&amp;tfo=false&amp;scv=true&amp;fdn=false&amp;sort=false&amp;new_name=true`;<br>        &#125; else if (userAgent.includes(&#x27;sing-box&#x27;) || userAgent.includes(&#x27;singbox&#x27;)) &#123;<br>            url = `https://$&#123;subconverter&#125;/sub?target=singbox&amp;url=https%3A%2F%2F$&#123;sub&#125;%2Fsub%3Fhost%3D$&#123;fakeHostName&#125;%26uuid%3D$&#123;fakeUserID&#125;%26edgetunnel%3Dcmliu%26proxyip%3D$&#123;RproxyIP&#125;&amp;insert=false&amp;config=$&#123;encodeURIComponent(subconfig)&#125;&amp;emoji=true&amp;list=false&amp;tfo=false&amp;scv=true&amp;fdn=false&amp;sort=false&amp;new_name=true`;<br>        &#125; else &#123;<br>            url = `https://$&#123;sub&#125;/sub?host=$&#123;fakeHostName&#125;&amp;uuid=$&#123;fakeUserID&#125;&amp;edgetunnel=cmliu&amp;proxyip=$&#123;RproxyIP&#125;`;<br>            isBase64 = true;<br>        &#125;<br>        try &#123;<br>            const response = await fetch(url ,&#123;<br>                headers: &#123;<br>                    &#x27;User-Agent&#x27;: &#x27;CF-Workers-edgetunnel/cmliu&#x27;<br>                &#125;&#125;);<br>            content = await response.text();<br>            return revertFakeInfo(content, userID, hostName, isBase64);<br>        &#125; catch (error) &#123;<br>            console.error(&#x27;Error fetching content:&#x27;, error);<br>            return `Error fetching content: $&#123;error.message&#125;`;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="4-生成并更换UUID"><a href="#4-生成并更换UUID" class="headerlink" title="4.生成并更换UUID"></a>4.生成并更换UUID</h4><div class="note note-info @title">            <p>只需要更改脚本文件中的userID。可以到网上找一个在线生成UUID的网站直接生成，拿到新的替换即可。<br>这个UUID后面访问的时候需要使用，可以保存一下。<br>在线生成UUID：<a href="https://1024tools.com/uuid">点击跳转</a></p>          </div><img src="/2024/03/29/CloudflareWorker%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/8.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/29/CloudflareWorker%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/9.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/29/CloudflareWorker%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/10.png" class="" width="488"><p>&nbsp;</p><h4 id="5-保存并部署"><a href="#5-保存并部署" class="headerlink" title="5.保存并部署"></a>5.保存并部署</h4><img src="/2024/03/29/CloudflareWorker%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/14.png" class="" width="488"><p>&nbsp;</p><h4 id="6-访问及使用"><a href="#6-访问及使用" class="headerlink" title="6.访问及使用"></a>6.访问及使用</h4><p>复制刚才更改的UUID，点击右上角的workers.dev</p><div class="note note-warning @title">            <p>如果点击workers.dev打开的网页一直没有响应。请开启科学上网工具访问</p>          </div> <img src="/2024/03/29/CloudflareWorker%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/13.png" class="" width="488"><p>&nbsp;</p><p>在打开的网页地址后面输入”&#x2F;您的UUID”</p><img src="/2024/03/29/CloudflareWorker%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/15.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/29/CloudflareWorker%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/16.png" class="" width="488"><p>&nbsp;</p><p>clash添加订阅<br>配置-&gt;托管配置-&gt;管理</p><img src="/2024/03/29/CloudflareWorker%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/17.png" class="" width="488"><p>&nbsp;<br>添加订阅</p><img src="/2024/03/29/CloudflareWorker%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/18.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/29/CloudflareWorker%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/19.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/29/CloudflareWorker%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/20.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/29/CloudflareWorker%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/21.png" class="" width="488"><p>&nbsp;</p><h3 id="进阶教程"><a href="#进阶教程" class="headerlink" title="进阶教程"></a>进阶教程</h3><h4 id="pages方式部署项目"><a href="#pages方式部署项目" class="headerlink" title="pages方式部署项目"></a>pages方式部署项目</h4><p>1.从开源项目下载项目源文件：<a href="https://codeload.github.com/cmliu/edgetunnel/zip/refs/heads/main">下载地址</a></p><img src="/2024/03/29/CloudflareWorker%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/29.png" class="" width="488"><p>&nbsp;<br>2.登录Cloudflare，找到Workers &amp; Pages并点击创建Create application.选择Pages,点击上传资产，把上一步下载的压缩包上传</p><img src="/2024/03/29/CloudflareWorker%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/27.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/29/CloudflareWorker%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/28.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/29/CloudflareWorker%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/30.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/29/CloudflareWorker%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/31.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/29/CloudflareWorker%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/32.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/29/CloudflareWorker%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/33.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/29/CloudflareWorker%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/34.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/29/CloudflareWorker%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/35.png" class="" width="488"><p>&nbsp;<br>UUID可以参考前面的步骤去获取</p><img src="/2024/03/29/CloudflareWorker%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/36.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/29/CloudflareWorker%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/37.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/29/CloudflareWorker%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/38.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/29/CloudflareWorker%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/40.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/29/CloudflareWorker%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/39.png" class="" width="488"><p>&nbsp;</p><h4 id="申请免费域名"><a href="#申请免费域名" class="headerlink" title="申请免费域名"></a>申请免费域名</h4><p>免费域名申请地址：<a href="">点击跳转</a></p><img src="/2024/03/29/CloudflareWorker%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/42.png" class="" width="488"><p>&nbsp;<br>到你的邮箱中，找到刚收到的邮件，点击确认</p><img src="/2024/03/29/CloudflareWorker%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/22.png" class="" width="488"><p>&nbsp;<br>设置你的登录密码</p><img src="/2024/03/29/CloudflareWorker%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/23.png" class="" width="488"><p>&nbsp;<br>再次输入你的邮箱，但是会提示你已经确认过了，这个时候，点击下面的登录，输入你的邮箱和设置的密码登录即可。</p><img src="/2024/03/29/CloudflareWorker%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/24.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/29/CloudflareWorker%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/25.png" class="" width="488"><p>&nbsp;<br>复制你的域名，回到cf中，点击自自定义域</p><img src="/2024/03/29/CloudflareWorker%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/41.png" class="" width="488"><p>&nbsp; </p><img src="/2024/03/29/CloudflareWorker%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/43.png" class="" width="488"><p>&nbsp;</p><div class="note note-warning @title">            <p> 这里填写的域名格式是：自定义名字+”.”+免费域名<br>比如：你申请的域名是xxx.dynv6.net,你自定义的名字是：free。那么填写：free.xxx.dynv6.net</p>          </div><img src="/2024/03/29/CloudflareWorker%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/44.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/29/CloudflareWorker%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/45.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/29/CloudflareWorker%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/46.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/29/CloudflareWorker%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/26.png" class="" width="488"><p>&nbsp;</p><div class="note note-warning @title">            <p>cf复制的目标内容，一定要在最后加一个点<br>比如复制的内容是：free-d93.pages.dev，到域名的解析的data中填写：free-d93.pages.dev.</p>          </div><img src="/2024/03/29/CloudflareWorker%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/47.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/29/CloudflareWorker%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/48.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/29/CloudflareWorker%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/49.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/29/CloudflareWorker%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/50.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/29/CloudflareWorker%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/51.png" class="" width="488"><p>&nbsp;</p><h3 id="博主点评"><a href="#博主点评" class="headerlink" title="博主点评"></a>博主点评</h3><p>优点：免费，速度快<br>缺点：他的IP显示的是国内IP，对于一些特殊的网站，比如ChatGPT可能无法使用</p><h3 id="相关视频"><a href="#相关视频" class="headerlink" title="相关视频"></a>相关视频</h3><iframe width="auto" height="auto" src="https://www.youtube.com/embed/OuThm45VrBs" title="2024最省心最简单而且速度很快的免费科学上网方式！自动优选ip,支持生成订阅链接！小白用户都能操作！" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><p><a href="https://稳连云.me/#/register?code=TCJc126r">推荐：低至6元&#x2F;100G&#x2F;月机场</a></p>]]></content>
    
    
    <categories>
      
      <category>工具分享</category>
      
      <category>视频教程</category>
      
      <category>技术分享</category>
      
      <category>科学上网</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Cloudflare Worker</tag>
      
      <tag>翻墙工具</tag>
      
      <tag>科学上网</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>国内APP应用市场(华为小米)审核问题集合</title>
    <link href="/2024/03/27/%E5%9B%BD%E5%86%85APP%E5%BA%94%E7%94%A8%E5%B8%82%E5%9C%BA%E5%AE%A1%E6%A0%B8%E9%97%AE%E9%A2%98/"/>
    <url>/2024/03/27/%E5%9B%BD%E5%86%85APP%E5%BA%94%E7%94%A8%E5%B8%82%E5%9C%BA%E5%AE%A1%E6%A0%B8%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h3 id="适用对象"><a href="#适用对象" class="headerlink" title="适用对象"></a>适用对象</h3><p>1.App开发人员<br>2.运营人员<br>3.产品经理</p><h3 id="上架条件"><a href="#上架条件" class="headerlink" title="上架条件"></a>上架条件</h3><p>相信做过Android开发，上架过国内应用市场的相关人员都想说一句fuck，现在想要应用市场上架App太难了,好不容易把程序做出来，审核的时候各种限制。审核一次的周期又很长，少则一两天，多则三五天。目前国内的几大手机厂商，都自己搞了一套自己的应用商店。原来是百花齐放，各种各样的三方应用商店，现在基本上没落了，都被这些手机厂商垄断。<br>目前主要是的应用商店就是手机厂商的：小米，华为，oppo,vivo。第三方:腾讯，360等。要想上这些应用商店，需要下面的条件，缺一不可。</p><h4 id="1-软著"><a href="#1-软著" class="headerlink" title="1.软著"></a>1.软著</h4><p>软著申请的周期很长，短则一两个月。需要找第三方中介处理。</p><h4 id="2-隐私协议"><a href="#2-隐私协议" class="headerlink" title="2.隐私协议"></a>2.隐私协议</h4><p>特别要注意标明软件中使用的第三方SDK以及各种权限的使用说明。</p><h4 id="3-相关资质"><a href="#3-相关资质" class="headerlink" title="3.相关资质"></a>3.相关资质</h4><p>这个毫无办法，审核被打回才知道要些什么。</p><h4 id="4-APP备案"><a href="#4-APP备案" class="headerlink" title="4.APP备案"></a>4.APP备案</h4><p>备案周期也至少是一个月左右。</p><div class="note note-info @title">            <p>为了避免大家少走弯路，我把自己在各大应用商店审核时遇到的问题做一个总结。总的来说，小米和华为最变态，有些符合小米的要求，就不符合华为。我说的主要是程序上，其他的隐私协议基本上都通用。所以大家在处理小米和华为的一些问题，要区分对待。这真是一个麻烦的事情，后续版本也无法做到统一。<br>我现在开发APP大部分时间都是用的React Native，这是一个混合开发，能同时开发android和ios,尤其是他的热更新功能，在不需要用户重新下载安装app的情况下，更改app的内容。这也有助于通过这些国内应用市场的审核。必要的情况下，只能隐藏一些功能，待审核通过后再热更新。</p>          </div><h3 id="华为审核"><a href="#华为审核" class="headerlink" title="华为审核"></a>华为审核</h3><p>1.在启动App的时候不能获取DeviceId，必须等待用户在同意隐私协议知道，才能去获取。<br>2.不能在用户没有使用某项权限的时候，弹出申请权限的窗口。比如有些App进来之后需要获取位置信息，这个就需要请求位置权限。但是他们不让，必须要先弹出对话框，提示用户要获取，而且还必须要用同意。如果不同意，还不能继续弹出协议对话框，也就是app这个功能基本上就不能用。<br>3.即使用户需要某项权限，也必须先弹出一个说明对话框，让用户同意才能进一步申请权限。比如上传头像，扫一扫需要申请相机权限。脑残都知道肯定要打卡相机摄像头，不然用啥去扫或者拍照。</p><img src="/2024/03/27/%E5%9B%BD%E5%86%85APP%E5%BA%94%E7%94%A8%E5%B8%82%E5%9C%BA%E5%AE%A1%E6%A0%B8%E9%97%AE%E9%A2%98/1.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/27/%E5%9B%BD%E5%86%85APP%E5%BA%94%E7%94%A8%E5%B8%82%E5%9C%BA%E5%AE%A1%E6%A0%B8%E9%97%AE%E9%A2%98/2.png" class="" width="488"><p>&nbsp;</p><h3 id="小米审核"><a href="#小米审核" class="headerlink" title="小米审核"></a>小米审核</h3><p>小米后续提交再补充</p><h3 id="OPPO审核"><a href="#OPPO审核" class="headerlink" title="OPPO审核"></a>OPPO审核</h3><p>审核较为宽松，只要华为市场审核通过，即使OPPO没有提交新版本审核，他也会同步过来</p><h3 id="VIVO审核"><a href="#VIVO审核" class="headerlink" title="VIVO审核"></a>VIVO审核</h3><p>基本上同OPPO一样，只要上面四大条件满足，应用不要在他们测试期间有闪退情况就会审核通过</p><h3 id="其他三方市场"><a href="#其他三方市场" class="headerlink" title="其他三方市场"></a>其他三方市场</h3><p>基本情况也都差不多，四大条件缺一不可。但是可能会有需要各种资质的情况，反正感觉过审也不容易。</p><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><p>1.您提交的《计算机软件著作权证书》上的应用名称与您提交的应用名称不一致；</p><p>修改建议：需重新提交与您应用名称一致的资质证明文件；</p><p>版权资质审核要求请参考：<a href="https://developer.huawei.com/consumer/cn/doc/distribution/app/80301">https://developer.huawei.com/consumer/cn/doc/distribution/app/80301</a></p><p>资质常见问题请参考：</p><p><a href="https://developer.huawei.com/consumer/cn/doc/50111">https://developer.huawei.com/consumer/cn/doc/50111</a></p><p>2.您的应用因缺少资质证明文件未通过审核。</p><p>修改建议：需补充提交ICP备案截图或《增值电信业务经营许可证》。</p><p>版权资质审核要求请参考：<a href="https://developer.huawei.com/consumer/cn/doc/distribution/app/80301">https://developer.huawei.com/consumer/cn/doc/distribution/app/80301</a></p><p>资质常见问题请参考：</p><p>­<a href="https://developer.huawei.com/consumer/cn/doc/50111">https://developer.huawei.com/consumer/cn/doc/50111</a></p><p>3.您应用内的隐私政策&#x2F;在AppGallery Connect上提交的隐私政策网址内无开发者名称，不符合华为应用市场审核标准。</p><p>修改建议：请提供您自身的隐私政策，在您应用内的隐私政策&#x2F;在AppGallery Connect上提交的隐私政策网址内注明开发者名称以及应用名称，并确保应用名称与开发者提交的应用名称信息一致&#x2F;开发者名称与上传应用的开发者名称一致。</p><p>请参考《审核指南》第7.1相关审核要求：<a href="https://developer.huawei.com/consumer/cn/doc/50104">https://developer.huawei.com/consumer/cn/doc/50104</a></p><p>APP常见个人信息保护问题FAQ请参考：</p><p><a href="https://developer.huawei.com/consumer/cn/doc/distribution/app/FAQ-faq#h1-1628489046385-5">https://developer.huawei.com/consumer/cn/doc/distribution/app/FAQ-faq#h1-1628489046385-5</a></p><p>4.经检测发现，您的应用中集成了“com.netease(网易;七鱼) com.amap.api(高德)”SDK，但未在应用内的隐私政策&#x2F;在AppGallery Connect上提交的隐私政策内容中进行明示，不符合华为应用市场审核标准。</p><p>修改建议：请确保应用内包含的所有SDK均已在应用内的隐私政策&#x2F;在AppGallery Connect上提交的隐私政策内逐一罗列明示，并说明SDK收集使用的个人信息以及使用目的。请排查应用内包含的所有SDK，并在隐私政策内进行规范化的说明，以保证隐私检测准确性。</p><p>请参考《审核指南》第7.2相关审核要求：<a href="https://developer.huawei.com/consumer/cn/doc/50104">https://developer.huawei.com/consumer/cn/doc/50104</a></p><p>APP常见个人信息保护问题FAQ请参考：</p><p><a href="https://developer.huawei.com/consumer/cn/doc/distribution/app/FAQ-faq#h2-1628486431553-2">https://developer.huawei.com/consumer/cn/doc/distribution/app/FAQ-faq#h2-1628486431553-2</a></p><p>5.您提交的隐私标签与实际情况不符，不符合华为应用市场审核标准。</p><p>修改建议：请根据应用收集的个人信息项和个人信息使用目的，如实填写隐私标签。</p><p>详细信息请咨询互动中心或参考《AppGallery隐私标签服务说明》相关要求：<a href="https://developer.huawei.com/consumer/cn/doc/privacy-label">https://developer.huawei.com/consumer/cn/doc/privacy-label</a></p><p>6.经检测发现，您的应用存在收集用户的个人信息或权限的行为（MAC地址,IMEI; 应用内集成的[高德]SDK获取ANDROID ID），但未在应用内的隐私政策&#x2F;在AppGallery Connect上提交的隐私政策网址中进行说明。</p><p>修改建议：请在应用内的隐私政策&#x2F;在AppGallery Connect上提交的隐私政策网址中，对应用所收集个人信息的目的、方式、范围进行说明。</p><p>请参考《审核指南》第7.10相关审核要求：<a href="https://developer.huawei.com/consumer/cn/doc/50104">https://developer.huawei.com/consumer/cn/doc/50104</a></p><p>APP常见个人信息保护问题FAQ请参考：<a href="https://developer.huawei.com/consumer/cn/doc/distribution/app/FAQ-faq#h2-1628486431553-1">https://developer.huawei.com/consumer/cn/doc/distribution/app/FAQ-faq#h2-1628486431553-1</a></p><p>7.您的应用存在功能不完善问题，不符合华为应用市场审核标准。</p><p>测试步骤：点击隐私政策和用户协议，打开为空白页，无内容展示、</p><p>修改建议：请参考测试结果进行修改，确保应用可以正常使用。</p><p>请参考《审核指南》第3.3相关审核要求：<a href="https://developer.huawei.com/consumer/cn/doc/50104">https://developer.huawei.com/consumer/cn/doc/50104</a></p><p>8.您应用的隐私政策未以明示同意的方式征得用户同意，不符合华为应用市场审核标准。</p><p>测试步骤：隐私弹窗无拒绝选项。</p><p>修改建议：请确保应用内的隐私政策有提供用户主动勾选的空白复选框&#x2F;弹窗有拒绝选项。</p><p>请参考《审核指南》第7.5相关审核要求：<a href="https://developer.huawei.com/consumer/cn/doc/50104">https://developer.huawei.com/consumer/cn/doc/50104</a></p><p>APP常见个人信息保护问题FAQ请参考：</p><p><a href="https://developer.huawei.com/consumer/cn/doc/distribution/app/FAQ-faq#h2-1628486431553-7">https://developer.huawei.com/consumer/cn/doc/distribution/app/FAQ-faq#h2-1628486431553-7</a></p><p>9.您的应用首次运行时，在展示使用权限对应的相关产品或服务之前，提前向用户弹窗申请开启位置信息权限，不符合华为应用市场审核标准。</p><p>测试步骤：首次打开APP，进行功能操作前，应用弹窗申请开启位置信息权限。</p><p>修改建议：应用如需申请权限，应在用户使用对应业务功能时申请，不得提前弹窗申请权限，且权限申请行为需与实际使用目的一致。</p><p>请参考《审核指南》第7.19相关审核要求：<a href="https://developer.huawei.com/consumer/cn/doc/50104">https://developer.huawei.com/consumer/cn/doc/50104</a></p><p>APP常见个人信息保护问题FAQ请参考<a href="https://developer.huawei.com/consumer/cn/doc/distribution/app/FAQ-faq#h2-1628489707221-10">https://developer.huawei.com/consumer/cn/doc/distribution/app/FAQ-faq#h2-1628489707221-10</a></p><p>10.您的应用内含激励提现项目但未在应用内提供客服联系方式，不符合华为应用市场审核标准。</p><p>修改建议：请参考测试结果进行修改，在应用内提供客服联系方式。</p><p>请参考《审核指南》第6.4相关审核要求：<a href="https://developer.huawei.com/consumer/cn/doc/50104">https://developer.huawei.com/consumer/cn/doc/50104</a></p><p>11.您的应用内未提供帐号注销服务，不符合华为应用市场审核标准。</p><p>修改建议：请在应用内提供帐号注销功能选项，功能选项名称需表述清晰，需使用如“注销帐号”等表述。</p><p>请参考《审核指南》第7.3相关审核要求：<a href="https://developer.huawei.com/consumer/cn/doc/50104">https://developer.huawei.com/consumer/cn/doc/50104</a></p><p>测试环境：Wi-Fi联网、EMUI 11.0 （Mate 40 pro)、中文环境</p><h3 id="备案查询网址"><a href="#备案查询网址" class="headerlink" title="备案查询网址"></a>备案查询网址</h3><p><a href="https://beian.miit.gov.cn/#/Integrated/index">点击跳转</a></p><img src="/2024/03/27/%E5%9B%BD%E5%86%85APP%E5%BA%94%E7%94%A8%E5%B8%82%E5%9C%BA%E5%AE%A1%E6%A0%B8%E9%97%AE%E9%A2%98/3.png" class="" width="488"><p>&nbsp;</p>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>App上架</tag>
      
      <tag>App审核</tag>
      
      <tag>应用市场</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>iStoreOS/OpenWrt安装及配置OpenClash</title>
    <link href="/2024/03/17/iStoreOS-OpenWpt%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AEOpenClash/"/>
    <url>/2024/03/17/iStoreOS-OpenWpt%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AEOpenClash/</url>
    
    <content type="html"><![CDATA[<h3 id="一-前言"><a href="#一-前言" class="headerlink" title="一.前言"></a>一.前言</h3><p>一直在我的软路由(iStoreOS)上使用OpenClash科学上网，虽然能上网，但是总觉得网速不快，所以有时候不得不在电脑和手机上再打开科学上网的工具，感觉这个的作用不大。<br>但是最近我需要部分网站不走科学上网，需要加白名单，所以就去找了一下OpenClash的资料，没想到一直我的配置有问题，不是不好用，是自己没有配置正确。配置好之后，再也不用手机和电脑去开启科学上网了。</p><h3 id="二-系统环境"><a href="#二-系统环境" class="headerlink" title="二.系统环境"></a>二.系统环境</h3><p>iStoreOS,OpenWrt</p><h3 id="三-软件工具"><a href="#三-软件工具" class="headerlink" title="三.软件工具"></a>三.软件工具</h3><p>▶ <a href="https://github.com/vernesong/OpenClash/releases">OpenClash</a></p><img src="/2024/03/17/iStoreOS-OpenWpt%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AEOpenClash/1.png" class="" width="488"><p>&nbsp;<br>▶ <a href="https://github.com/AUK9527/Are-u-ok/tree/main/x86">软路由工具集</a><br>这是推荐的一些软件集，不是必须安装。</p><img src="/2024/03/17/iStoreOS-OpenWpt%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AEOpenClash/2.png" class="" width="488"><p>&nbsp;</p><h3 id="四-安装-升级OpenClash"><a href="#四-安装-升级OpenClash" class="headerlink" title="四.安装&#x2F;升级OpenClash"></a>四.安装&#x2F;升级OpenClash</h3><h4 id="1-安装依赖包"><a href="#1-安装依赖包" class="headerlink" title="1.安装依赖包"></a>1.安装依赖包</h4><p>进入软路由终端里复制下面的命令安装OpenClash需要的依赖包，可以一条条复制执行，也可以整个复制粘贴按回车执行</p><pre><code class="hljs">#iptablesopkg updateopkg install coreutils-nohup bash iptables dnsmasq-full curl ca-certificates ipset ip-full iptables-mod-tproxy iptables-mod-extra libcap libcap-bin ruby ruby-yaml kmod-tun kmod-inet-diag unzip luci-compat luci luci-base</code></pre><p>&nbsp;</p><pre><code class="hljs">#nftablesopkg updateopkg install coreutils-nohup bash dnsmasq-full curl ca-certificates ipset ip-full libcap libcap-bin ruby ruby-yaml kmod-tun kmod-inet-diag unzip kmod-nft-tproxy luci-compat luci luci-base</code></pre><h4 id="2-下载OpenClash安装包"><a href="#2-下载OpenClash安装包" class="headerlink" title="2.下载OpenClash安装包"></a>2.下载OpenClash安装包</h4><p>从上面的地址下载文件：<a href="https://github.com/vernesong/OpenClash/releases">luci-app-openclash_0.46.003-beta_all.ipk</a></p><h4 id="3-安装OpenClash"><a href="#3-安装OpenClash" class="headerlink" title="3.安装OpenClash"></a>3.安装OpenClash</h4><p>进入软路由系统-&gt;系统-&gt;软件包-&gt;上传软件包，选择步骤2下载的软件包，点击上传。</p><img src="/2024/03/17/iStoreOS-OpenWpt%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AEOpenClash/3.png" class="" width="488"><p>&nbsp;</p><h3 id="五-配置OpenClash"><a href="#五-配置OpenClash" class="headerlink" title="五.配置OpenClash"></a>五.配置OpenClash</h3><h4 id="1-进入OpenClash"><a href="#1-进入OpenClash" class="headerlink" title="1.进入OpenClash"></a>1.进入OpenClash</h4><p>进入软路由系统-&gt;服务-&gt;OpenClash</p><img src="/2024/03/17/iStoreOS-OpenWpt%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AEOpenClash/4.png" class="" width="488"><p>&nbsp;</p><h4 id="2-启动meta内核切换到Fake-IP-增强-模式"><a href="#2-启动meta内核切换到Fake-IP-增强-模式" class="headerlink" title="2.启动meta内核切换到Fake-IP(增强)模式"></a>2.启动meta内核切换到Fake-IP(增强)模式</h4><p>进入OpenClash-&gt;插件设置-&gt;模式设置<br>下图是默认状态</p><img src="/2024/03/17/iStoreOS-OpenWpt%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AEOpenClash/5.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/17/iStoreOS-OpenWpt%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AEOpenClash/6.png" class="" width="488"><p>&nbsp;<br>更改后的状态</p><img src="/2024/03/17/iStoreOS-OpenWpt%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AEOpenClash/7.png" class="" width="488"><p>&nbsp;</p><h4 id="2-更新版本内核"><a href="#2-更新版本内核" class="headerlink" title="2.更新版本内核"></a>2.更新版本内核</h4><p>进入OpenClash-&gt;插件设置-&gt;版本更新，点击一键检查更新</p><img src="/2024/03/17/iStoreOS-OpenWpt%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AEOpenClash/9.png" class="" width="488"><p>&nbsp;</p><h4 id="3-开启GEO数据库订阅"><a href="#3-开启GEO数据库订阅" class="headerlink" title="3.开启GEO数据库订阅"></a>3.开启GEO数据库订阅</h4><p>进入OpenClash-&gt;插件设置-&gt;GEO数据库订阅</p><img src="/2024/03/17/iStoreOS-OpenWpt%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AEOpenClash/10.png" class="" width="488"><p>&nbsp;</p><h4 id="4-切换-更新-Dashboard版本"><a href="#4-切换-更新-Dashboard版本" class="headerlink" title="4.切换(更新)Dashboard版本"></a>4.切换(更新)Dashboard版本</h4><p>进入OpenClash-&gt;插件设置-&gt;外部控制<br>切换更新前</p><img src="/2024/03/17/iStoreOS-OpenWpt%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AEOpenClash/11.png" class="" width="488"><p>&nbsp;<br>切换更新后</p><img src="/2024/03/17/iStoreOS-OpenWpt%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AEOpenClash/12.png" class="" width="488"><p>&nbsp;</p><h4 id="5-修改github地址"><a href="#5-修改github地址" class="headerlink" title="5.修改github地址"></a>5.修改github地址</h4><p>进入OpenClash-&gt;覆写设置-&gt;常规设置</p><img src="/2024/03/17/iStoreOS-OpenWpt%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AEOpenClash/22.png" class="" width="488"><p>&nbsp;</p><h3 id="六-配置订阅"><a href="#六-配置订阅" class="headerlink" title="六.配置订阅"></a>六.配置订阅</h3><p>进入OpenClash-&gt;配置订阅</p><h4 id="1-添加订阅文件"><a href="#1-添加订阅文件" class="headerlink" title="1.添加订阅文件"></a>1.添加订阅文件</h4><img src="/2024/03/17/iStoreOS-OpenWpt%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AEOpenClash/13.png" class="" width="488"><p>&nbsp;</p><h4 id="2-填写配置文件内容"><a href="#2-填写配置文件内容" class="headerlink" title="2.填写配置文件内容"></a>2.填写配置文件内容</h4><img src="/2024/03/17/iStoreOS-OpenWpt%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AEOpenClash/14.png" class="" width="488"><p>&nbsp;</p><h4 id="3-完成配置，点击保存配置"><a href="#3-完成配置，点击保存配置" class="headerlink" title="3.完成配置，点击保存配置"></a>3.完成配置，点击保存配置</h4><img src="/2024/03/17/iStoreOS-OpenWpt%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AEOpenClash/15.png" class="" width="488"><p>&nbsp;</p><h3 id="七-添加规则，设置指定域名不走代理"><a href="#七-添加规则，设置指定域名不走代理" class="headerlink" title="七.添加规则，设置指定域名不走代理"></a>七.添加规则，设置指定域名不走代理</h3><p>进入OpenClash-&gt;覆写设置-&gt;规则设置</p><h4 id="1-开启自定义规则"><a href="#1-开启自定义规则" class="headerlink" title="1.开启自定义规则"></a>1.开启自定义规则</h4><img src="/2024/03/17/iStoreOS-OpenWpt%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AEOpenClash/17.png" class="" width="488"><p>&nbsp;</p><h4 id="2-填写规则"><a href="#2-填写规则" class="headerlink" title="2.填写规则"></a>2.填写规则</h4><p>比如我要将baidu.com加入规则，并让他不走代理。</p><pre><code class="hljs">- DOMAIN-SUFFIX,baidu.com,DIRECT</code></pre><img src="/2024/03/17/iStoreOS-OpenWpt%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AEOpenClash/18.png" class="" width="488"><p>&nbsp;</p><div class="note note-info @title">            <p>规则有很多种：<br>##- SCRIPT,quic,REJECT #shortcuts rule<br>##- SCRIPT,time-limit,REJECT #shortcuts rule<br>##- PROCESS-NAME,curl,DIRECT #匹配路由自身进程(curl直连)<br>##- DOMAIN-SUFFIX,google.com,Proxy #匹配域名后缀(交由Proxy代理服务器组)<br>##- DOMAIN-KEYWORD,google,Proxy #匹配域名关键字(交由Proxy代理服务器组)<br>##- DOMAIN,google.com,Proxy #匹配域名(交由Proxy代理服务器组)<br>##- DOMAIN-SUFFIX,ad.com,REJECT #匹配域名后缀(拒绝)<br>##- IP-CIDR,127.0.0.0&#x2F;8,DIRECT #匹配数据目标IP(直连)<br>##- SRC-IP-CIDR,192.168.1.201&#x2F;32,DIRECT #匹配数据发起IP(直连)<br>##- DST-PORT,80,DIRECT #匹配数据目标端口(直连)<br>##- SRC-PORT,7777,DIRECT #匹配数据源端口(直连)<br>但主要用到的是域名或者关键字<br>##- DOMAIN-SUFFIX,google.com,Proxy #匹配域名后缀(交由Proxy代理服务器组)<br>##- DOMAIN-KEYWORD,google,Proxy #匹配域名关键字(交由Proxy代理服务器组)<br>Proxy代表要代理<br>DIRECT代表不走代理<br>REJECT代表拒绝<br>根据自己的需求来配置规则</p>          </div><h4 id="3-保存规则"><a href="#3-保存规则" class="headerlink" title="3.保存规则"></a>3.保存规则</h4><img src="/2024/03/17/iStoreOS-OpenWpt%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AEOpenClash/16.png" class="" width="488"><p>&nbsp;</p><h4 id="4-查看规则是否生效"><a href="#4-查看规则是否生效" class="headerlink" title="4.查看规则是否生效"></a>4.查看规则是否生效</h4><p>运行状态-YACD控制面板-规则，可以查看上面设置的规则</p><img src="/2024/03/17/iStoreOS-OpenWpt%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AEOpenClash/19.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/17/iStoreOS-OpenWpt%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AEOpenClash/20.png" class="" width="488"><p>&nbsp;</p><h3 id="八-自定义策略"><a href="#八-自定义策略" class="headerlink" title="八.自定义策略"></a>八.自定义策略</h3><h4 id="1-读取配置"><a href="#1-读取配置" class="headerlink" title="1.读取配置"></a>1.读取配置</h4><p>进入OpenClash-&gt;一键生成-&gt;读取配置。读取已有的配置信息</p><img src="/2024/03/17/iStoreOS-OpenWpt%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AEOpenClash/23.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/17/iStoreOS-OpenWpt%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AEOpenClash/24.png" class="" width="488"><p>&nbsp;</p><h4 id="2-添加策略"><a href="#2-添加策略" class="headerlink" title="2.添加策略"></a>2.添加策略</h4><img src="/2024/03/17/iStoreOS-OpenWpt%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AEOpenClash/25.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/17/iStoreOS-OpenWpt%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AEOpenClash/26.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/17/iStoreOS-OpenWpt%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AEOpenClash/26.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/17/iStoreOS-OpenWpt%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AEOpenClash/27.png" class="" width="488"><p>&nbsp;</p><h4 id="3-为策略添加节点"><a href="#3-为策略添加节点" class="headerlink" title="3.为策略添加节点"></a>3.为策略添加节点</h4><p>这步是可选的，如果你在创建策略的时候选择了子策略后，已经满足你的需求，那可以不用单独添加节点</p><img src="/2024/03/17/iStoreOS-OpenWpt%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AEOpenClash/28.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/17/iStoreOS-OpenWpt%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AEOpenClash/29.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/17/iStoreOS-OpenWpt%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AEOpenClash/30.png" class="" width="488"><p>&nbsp;</p><h4 id="4-应用配置"><a href="#4-应用配置" class="headerlink" title="4.应用配置"></a>4.应用配置</h4><img src="/2024/03/17/iStoreOS-OpenWpt%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AEOpenClash/31.png" class="" width="488"><p>&nbsp;<br>查看策略是否生效</p><img src="/2024/03/17/iStoreOS-OpenWpt%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AEOpenClash/32.png" class="" width="488"><p>&nbsp;</p><h4 id="5-使用自定义策略"><a href="#5-使用自定义策略" class="headerlink" title="5.使用自定义策略"></a>5.使用自定义策略</h4><p>进入OpenClash-&gt;覆写设置-&gt;规则设置。添加一条规则，比如将baidu.com加入这个自定义策略组</p><img src="/2024/03/17/iStoreOS-OpenWpt%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AEOpenClash/33.png" class="" width="488"><p>&nbsp;<br>网页输入<a href="http://www.baidu.com,可以看到baidu.com下的内容都走的设置的代理./">www.baidu.com，可以看到baidu.com下的内容都走的设置的代理。</a></p><img src="/2024/03/17/iStoreOS-OpenWpt%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AEOpenClash/34.png" class="" width="488"><p>&nbsp;</p><h3 id="九-遇到的问题"><a href="#九-遇到的问题" class="headerlink" title="九.遇到的问题"></a>九.遇到的问题</h3><h4 id="1-上传安装包报错，软件安装失败"><a href="#1-上传安装包报错，软件安装失败" class="headerlink" title="1.上传安装包报错，软件安装失败"></a>1.上传安装包报错，软件安装失败</h4><p>openwrt opkg执行错误<br>解决方式：<br>在iStoreOS默认目录下执行修改配置命令</p><pre><code class="hljs">vim opkgupdate.sh</code></pre><p>&nbsp;</p><pre><code class="hljs">#!/bin/shecho &quot;nameserver 114.114.114.114&quot;&gt;/tmp/resolv.confrm -f /var/lock/opkg.lockopkg update</code></pre><p>输入:wq保存退出</p><pre><code class="hljs">chmod a+x ./opkgdagte.sh./opkgdage.sh</code></pre><h4 id="2-Dashboard面板的连接看不到内容"><a href="#2-Dashboard面板的连接看不到内容" class="headerlink" title="2.Dashboard面板的连接看不到内容"></a>2.Dashboard面板的连接看不到内容</h4><p>解决办法：查看自己的电脑是否开启了Charles这样的代理软件，把软件关闭。</p><h4 id="3-配置好后，外网无法连接"><a href="#3-配置好后，外网无法连接" class="headerlink" title="3.配置好后，外网无法连接"></a>3.配置好后，外网无法连接</h4><p>解决办法：把实验性：绕过中国大陆 IP选项关闭</p><img src="/2024/03/17/iStoreOS-OpenWpt%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AEOpenClash/8.png" class="" width="488"><p>&nbsp;</p><h3 id="十-视频教程"><a href="#十-视频教程" class="headerlink" title="十.视频教程"></a>十.视频教程</h3><iframe width="auto height="auto" src="https://www.youtube.com/embed/Lwc1TQC-yxo" title="2024最新OpenClash配置教程|你的科学上网速度慢，可能是你的配置不正确！" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><h3 id="十一-网友反馈"><a href="#十一-网友反馈" class="headerlink" title="十一.网友反馈"></a>十一.网友反馈</h3><img src="/2024/03/17/iStoreOS-OpenWpt%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AEOpenClash/35.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/17/iStoreOS-OpenWpt%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AEOpenClash/36.png" class="" width="488"><p>&nbsp;</p>]]></content>
    
    
    <categories>
      
      <category>视频教程</category>
      
      <category>技术分享</category>
      
      <category>软路由</category>
      
    </categories>
    
    
    <tags>
      
      <tag>OpenClash</tag>
      
      <tag>软路由</tag>
      
      <tag>iStoreOS</tag>
      
      <tag>OpenWrt</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Android手机电视盒子及TV各种VIP破解版软件合集</title>
    <link href="/2024/03/15/Android%E6%89%8B%E6%9C%BA%E7%94%B5%E8%A7%86%E7%9B%92%E5%AD%90%E5%8F%8ATV%E5%90%84%E7%A7%8DVIP%E7%A0%B4%E8%A7%A3%E7%89%88%E8%BD%AF%E4%BB%B6%E5%90%88%E9%9B%86/"/>
    <url>/2024/03/15/Android%E6%89%8B%E6%9C%BA%E7%94%B5%E8%A7%86%E7%9B%92%E5%AD%90%E5%8F%8ATV%E5%90%84%E7%A7%8DVIP%E7%A0%B4%E8%A7%A3%E7%89%88%E8%BD%AF%E4%BB%B6%E5%90%88%E9%9B%86/</url>
    
    <content type="html"><![CDATA[<p>记得收藏，后续有最新的都会直接更新到这里。</p><h3 id="手机软件"><a href="#手机软件" class="headerlink" title="手机软件"></a>手机软件</h3><h3 id="甲壳虫ADB助手"><a href="#甲壳虫ADB助手" class="headerlink" title="甲壳虫ADB助手"></a>甲壳虫ADB助手</h3><p><a href="https://url49.ctfile.com/f/26918949-1060269347-065e20?p=4499">下载地址</a><br>访问密码: 4499</p><h4 id="20240315精选17款安卓破解软件"><a href="#20240315精选17款安卓破解软件" class="headerlink" title="20240315精选17款安卓破解软件"></a>20240315精选17款安卓破解软件</h4><p><a href="https://url49.ctfile.com/d/26918949-60391021-33e887?p=4499">下载地址</a><br>访问密码: 4499</p><img src="/2024/03/15/Android%E6%89%8B%E6%9C%BA%E7%94%B5%E8%A7%86%E7%9B%92%E5%AD%90%E5%8F%8ATV%E5%90%84%E7%A7%8DVIP%E7%A0%B4%E8%A7%A3%E7%89%88%E8%BD%AF%E4%BB%B6%E5%90%88%E9%9B%86/6.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/15/Android%E6%89%8B%E6%9C%BA%E7%94%B5%E8%A7%86%E7%9B%92%E5%AD%90%E5%8F%8ATV%E5%90%84%E7%A7%8DVIP%E7%A0%B4%E8%A7%A3%E7%89%88%E8%BD%AF%E4%BB%B6%E5%90%88%E9%9B%86/6.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/15/Android%E6%89%8B%E6%9C%BA%E7%94%B5%E8%A7%86%E7%9B%92%E5%AD%90%E5%8F%8ATV%E5%90%84%E7%A7%8DVIP%E7%A0%B4%E8%A7%A3%E7%89%88%E8%BD%AF%E4%BB%B6%E5%90%88%E9%9B%86/7.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/15/Android%E6%89%8B%E6%9C%BA%E7%94%B5%E8%A7%86%E7%9B%92%E5%AD%90%E5%8F%8ATV%E5%90%84%E7%A7%8DVIP%E7%A0%B4%E8%A7%A3%E7%89%88%E8%BD%AF%E4%BB%B6%E5%90%88%E9%9B%86/8.png" class="" width="488"><p>&nbsp;</p><h3 id="TV及电视盒子"><a href="#TV及电视盒子" class="headerlink" title="TV及电视盒子"></a>TV及电视盒子</h3><h4 id="直播软件"><a href="#直播软件" class="headerlink" title="直播软件"></a>直播软件</h4><p><a href="https://url49.ctfile.com/d/26918949-59976973-1a6bc1?p=4499">下载地址</a><br>访问密码: 4499</p><img src="/2024/03/15/Android%E6%89%8B%E6%9C%BA%E7%94%B5%E8%A7%86%E7%9B%92%E5%AD%90%E5%8F%8ATV%E5%90%84%E7%A7%8DVIP%E7%A0%B4%E8%A7%A3%E7%89%88%E8%BD%AF%E4%BB%B6%E5%90%88%E9%9B%86/4.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/15/Android%E6%89%8B%E6%9C%BA%E7%94%B5%E8%A7%86%E7%9B%92%E5%AD%90%E5%8F%8ATV%E5%90%84%E7%A7%8DVIP%E7%A0%B4%E8%A7%A3%E7%89%88%E8%BD%AF%E4%BB%B6%E5%90%88%E9%9B%86/3.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/15/Android%E6%89%8B%E6%9C%BA%E7%94%B5%E8%A7%86%E7%9B%92%E5%AD%90%E5%8F%8ATV%E5%90%84%E7%A7%8DVIP%E7%A0%B4%E8%A7%A3%E7%89%88%E8%BD%AF%E4%BB%B6%E5%90%88%E9%9B%86/2.png" class="" width="488"><p>&nbsp;</p><h4 id="影视资源软件"><a href="#影视资源软件" class="headerlink" title="影视资源软件"></a>影视资源软件</h4><p><a href="https://url49.ctfile.com/d/26918949-59976970-139380?p=4499">下载地址</a><br>访问密码: 4499</p><img src="/2024/03/15/Android%E6%89%8B%E6%9C%BA%E7%94%B5%E8%A7%86%E7%9B%92%E5%AD%90%E5%8F%8ATV%E5%90%84%E7%A7%8DVIP%E7%A0%B4%E8%A7%A3%E7%89%88%E8%BD%AF%E4%BB%B6%E5%90%88%E9%9B%86/1.png" class="" width="488"><p>&nbsp;</p><h4 id="当贝桌面"><a href="#当贝桌面" class="headerlink" title="当贝桌面"></a>当贝桌面</h4><p><a href="https://url49.ctfile.com/d/26918949-59976967-235a29?p=4499">下载地址</a><br>访问密码: 4499</p><h3 id="相关视频"><a href="#相关视频" class="headerlink" title="相关视频"></a>相关视频</h3><iframe width="auto" height="auto" src="https://www.youtube.com/embed/4ZpoipQtIO8" title="突破小米电视应用安装限制，你只需要一款app就能摆脱所有视频会员限制" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>]]></content>
    
    
    <categories>
      
      <category>软件工具</category>
      
      <category>视频教程</category>
      
      <category>破解软件</category>
      
    </categories>
    
    
    <tags>
      
      <tag>破解软件</tag>
      
      <tag>Android</tag>
      
      <tag>手机软件</tag>
      
      <tag>电视盒子</tag>
      
      <tag>TV</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>香港顺利办理中银,汇丰,众安银行卡,手机卡！我的香港出行，购物，住宿全攻略！</title>
    <link href="/2024/03/14/%E9%A6%99%E6%B8%AF%E9%A1%BA%E5%88%A9%E5%8A%9E%E7%90%86%E4%B8%AD%E9%93%B6-%E6%B1%87%E4%B8%B0-%E4%BC%97%E5%AE%89%E9%93%B6%E8%A1%8C%E5%8D%A1-%E6%89%8B%E6%9C%BA%E5%8D%A1%EF%BC%81%E6%88%91%E7%9A%84%E9%A6%99%E6%B8%AF%E5%87%BA%E8%A1%8C%EF%BC%8C%E8%B4%AD%E7%89%A9%EF%BC%8C%E4%BD%8F%E5%AE%BF%E5%85%A8%E6%94%BB%E7%95%A5%EF%BC%81/"/>
    <url>/2024/03/14/%E9%A6%99%E6%B8%AF%E9%A1%BA%E5%88%A9%E5%8A%9E%E7%90%86%E4%B8%AD%E9%93%B6-%E6%B1%87%E4%B8%B0-%E4%BC%97%E5%AE%89%E9%93%B6%E8%A1%8C%E5%8D%A1-%E6%89%8B%E6%9C%BA%E5%8D%A1%EF%BC%81%E6%88%91%E7%9A%84%E9%A6%99%E6%B8%AF%E5%87%BA%E8%A1%8C%EF%BC%8C%E8%B4%AD%E7%89%A9%EF%BC%8C%E4%BD%8F%E5%AE%BF%E5%85%A8%E6%94%BB%E7%95%A5%EF%BC%81/</url>
    
    <content type="html"><![CDATA[<h3 id="准备资料"><a href="#准备资料" class="headerlink" title="准备资料"></a>准备资料</h3><p>身份证，港澳通行证，过关小票（进入香港的过关自助机会给你打印出）</p><img src="/2024/03/14/%E9%A6%99%E6%B8%AF%E9%A1%BA%E5%88%A9%E5%8A%9E%E7%90%86%E4%B8%AD%E9%93%B6-%E6%B1%87%E4%B8%B0-%E4%BC%97%E5%AE%89%E9%93%B6%E8%A1%8C%E5%8D%A1-%E6%89%8B%E6%9C%BA%E5%8D%A1%EF%BC%81%E6%88%91%E7%9A%84%E9%A6%99%E6%B8%AF%E5%87%BA%E8%A1%8C%EF%BC%8C%E8%B4%AD%E7%89%A9%EF%BC%8C%E4%BD%8F%E5%AE%BF%E5%85%A8%E6%94%BB%E7%95%A5%EF%BC%81/9.png" class="" width="488"><h3 id="中银香港"><a href="#中银香港" class="headerlink" title="中银香港"></a>中银香港</h3><p>提前预约，投资记录，工资流水，地址证明</p><h4 id="预约地址"><a href="#预约地址" class="headerlink" title="预约地址"></a>预约地址</h4><p>微信公众号(中银香港银行开户)或者网站。最好是提前一个星期预约，否则很难预约到。<br><a href="https://www.bochk.com/tc/contact/online/hkpaccountopen.html">预约网站</a></p><h4 id="投资记录"><a href="#投资记录" class="headerlink" title="投资记录"></a>投资记录</h4><p>国内的A股投资记录,最好是本年度的购买记录</p><h4 id="工资流水"><a href="#工资流水" class="headerlink" title="工资流水"></a>工资流水</h4><p>需要到手机上查看你的发工资记录</p><h4 id="地址证明"><a href="#地址证明" class="headerlink" title="地址证明"></a>地址证明</h4><p>水费账单，电费账单或信用卡账单，都是最近3个月的(要连续3个月，否则会没用)</p><h4 id="准备现金"><a href="#准备现金" class="headerlink" title="准备现金"></a>准备现金</h4><p>准备1000港币，开户完需要存到银行卡。</p><h4 id="银行卡"><a href="#银行卡" class="headerlink" title="银行卡"></a>银行卡</h4><p>需要通过普通平邮邮件到你地址证明上的地址，建议沟通采用挂号信邮寄，平邮基本上收不到。填写地址时，一定要在地址栏最后加上手机号</p><h4 id="提前下载APP"><a href="#提前下载APP" class="headerlink" title="提前下载APP"></a>提前下载APP</h4><p>BOCHK中银香港，Boc Pay</p><h4 id="办理过程"><a href="#办理过程" class="headerlink" title="办理过程"></a>办理过程</h4><p>到自己预约的银行，拿出自己的预约记录（邮件或者打印出预约记录）。客户经理会给你一张小票，然后给你一个办理流程单，让你下载app按照步骤填写资料，填写完资料再交到柜台，客户经理给你办理。中银问的非常仔细，你工作的公司名字，你的收入记录，你的投资记录。</p><div class="note note-warning @title">            <p>填写地址时，地址栏最后一定要填写手机号。<br>要求银行通过挂号信自费邮寄</p>          </div><h4 id="办理地址"><a href="#办理地址" class="headerlink" title="办理地址"></a>办理地址</h4><p>九龍李鄭屋邨商業中心108號（仅供参考）</p><h3 id="汇丰银行"><a href="#汇丰银行" class="headerlink" title="汇丰银行"></a>汇丰银行</h3><p>提前预约，投资记录，工资流水，地址证明</p><h4 id="提前预约"><a href="#提前预约" class="headerlink" title="提前预约"></a>提前预约</h4><p>微信公众号(汇丰香港)或网站。<br><a href="https://forms.hsbc.com.hk/zh-hk/forms/make-appointment/">预约网站</a></p><div class="note note-warning @title">            <p>我预约了3次，汇丰总行给我回过2次电话，都是转到银行，等待银行确认，但是银行一直没有回电话。和我一起去的同事，在第二次预约，银行给他打了电话。如果没有预约上，可以在8点30分之前到银行排队，也是可以办理。</p>          </div><h4 id="投资记录-1"><a href="#投资记录-1" class="headerlink" title="投资记录"></a>投资记录</h4><p>银行客户经理会到你的手机app上查看投资记录</p><h4 id="工资流水-1"><a href="#工资流水-1" class="headerlink" title="工资流水"></a>工资流水</h4><p>只是询问了一下，没有去手机上查看</p><h4 id="地址证明-1"><a href="#地址证明-1" class="headerlink" title="地址证明"></a>地址证明</h4><p>只是说如果要开通投资港股可以去其他柜台找客户经理提供地址证明，或者等一个月有银行账单，也是可以直接用的。我并不着急投资，所以没有去找其他经理办理。</p><h4 id="银行卡-1"><a href="#银行卡-1" class="headerlink" title="银行卡"></a>银行卡</h4><p>现场给了一张可以在香港使用的银行卡，然后自己到柜员机上办理存款1000港币和修改密码。</p><h4 id="提前下载APP-1"><a href="#提前下载APP-1" class="headerlink" title="提前下载APP"></a>提前下载APP</h4><p>HSBC HK</p><h4 id="遇到问题"><a href="#遇到问题" class="headerlink" title="遇到问题"></a>遇到问题</h4><p>我的iphone手机填写资料，中间提示网络错误，无法继续办理，后来我用安卓手机再多次尝试终于能完成整个流程。开始因为网络有问题，就连接了他们银行的wifi，但是仍然会出现这种情况。所以建议有多个手机的就带上。如果实在不行，只能多次尝试。我觉得应该是他们的服务器不稳定，导致连接中断。我两个手机尝试了5次才完成整个流程。每次中断都要重新填写所有的资料。</p><h4 id="办理过程-1"><a href="#办理过程-1" class="headerlink" title="办理过程"></a>办理过程</h4><p>我在负一楼排队，到9点，有工作人员指引到2楼，然后找前台，告诉他你是来开户，他提供你一个号码，等待叫号。叫到你的号时，给你办理的客户经理，会带你到他的工作台去办理，下载app，填写资料。</p><div class="note note-warning @title">            <p>可以填写中文地址，尽量填写中文<br>填写地址时，地址栏最后一定要填写手机号。<br>要求银行通过挂号信自费邮寄</p>          </div><h4 id="办理地址-1"><a href="#办理地址-1" class="headerlink" title="办理地址"></a>办理地址</h4><p>旺角汇丰银行大厦（仅供参考）</p><div class="note note-warning @title">            <p>手机：能接受短信验证码，需要提前确认是否开通国际漫游，否则会收不到短信验证码<br>流量：支付宝购买香港流量</p>          </div><h3 id="众安银行"><a href="#众安银行" class="headerlink" title="众安银行"></a>众安银行</h3><p> 在香港境内，连接香港的wifi或者使用手机流量填写资料。<br> <div class="note note-warning @title">            <p>重点：需要提供过关记录(不是过关小票)。需要到微信小程序(移民局12367)注册-中国公民服务-出入境记录查询-往来港澳通行证-发送邮箱。发送到你的里是一个压缩文件，需要将这个压缩文件上传。 </p>          </div></p><h4 id="填写资料"><a href="#填写资料" class="headerlink" title="填写资料"></a>填写资料</h4><p>3个工作日审核。</p><h4 id="下载APP"><a href="#下载APP" class="headerlink" title="下载APP"></a>下载APP</h4><p><a href="https://bank.za.group/">ZA Bank下载地址</a></p><h4 id="我的邀请码"><a href="#我的邀请码" class="headerlink" title="我的邀请码"></a>我的邀请码</h4><p>BEK382</p><h3 id="办理Club-SIM"><a href="#办理Club-SIM" class="headerlink" title="办理Club SIM"></a>办理Club SIM</h3><p>到711便利店询问店员，有些店是没有的，购买一张是88港币(原价)。也可以到深水埗，有博主说这里更便宜，45港币，价格相差一半。<br>可以提前下载Club Sim app，注册和实名认证。需要港澳通行证或者护照实名。</p><img src="/2024/03/14/%E9%A6%99%E6%B8%AF%E9%A1%BA%E5%88%A9%E5%8A%9E%E7%90%86%E4%B8%AD%E9%93%B6-%E6%B1%87%E4%B8%B0-%E4%BC%97%E5%AE%89%E9%93%B6%E8%A1%8C%E5%8D%A1-%E6%89%8B%E6%9C%BA%E5%8D%A1%EF%BC%81%E6%88%91%E7%9A%84%E9%A6%99%E6%B8%AF%E5%87%BA%E8%A1%8C%EF%BC%8C%E8%B4%AD%E7%89%A9%EF%BC%8C%E4%BD%8F%E5%AE%BF%E5%85%A8%E6%94%BB%E7%95%A5%EF%BC%81/8.png" class="" width="488"><h3 id="出行购物"><a href="#出行购物" class="headerlink" title="出行购物"></a>出行购物</h3><h4 id="准备现金-1"><a href="#准备现金-1" class="headerlink" title="准备现金"></a>准备现金</h4><p>2000港币以上，可以到国内的银行去兑换，当然香港到处也可以兑换港币。</p><h4 id="住宿"><a href="#住宿" class="headerlink" title="住宿"></a>住宿</h4><p>我是通过高德上直接定的香港最便宜的重庆大厦，工作日2张床的大单间190左右，他地址写的是8楼，实际上是在10楼办理入住，入住提供港澳通行证和100港币押金。</p><h4 id="出行"><a href="#出行" class="headerlink" title="出行"></a>出行</h4><p>下载google map(里面的实景导航非常实用)，乘坐公交，地铁，轮渡，都可以使用支付宝(搜索乘车码)或者微信(腾讯乘车助手)。<br>香港所有的地铁，轮渡均不需要安检，地铁发达，有些是有3层的，所以找乘车点的时候，要注意查看路线。</p><h4 id="购物"><a href="#购物" class="headerlink" title="购物"></a>购物</h4><p>推荐旺角(相对其他地方能便宜点，但是也还是需要比价，同一个东西，多走几家看看)，都是可以使用微信或者支付宝。</p><h4 id="景点名票"><a href="#景点名票" class="headerlink" title="景点名票"></a>景点名票</h4><p>可以到抖音里搜索相关的景点门票，如果有，一般会比现场便宜几十。</p><h3 id="后续情况"><a href="#后续情况" class="headerlink" title="后续情况"></a>后续情况</h3><p>1.汇丰和中银银行卡目前均没有收到，汇丰给我邮寄过一次地址证明文件，我很顺利的收到了。说明通过平邮邮件银行卡，很可能是被拦截了。</p><div class="note note-warning @title">            <p>中银香港客服：要补寄会先停掉现在的银行卡服务，手机银行也无法使用。要等银行卡邮寄收到之后，去银行的柜员机上去激活才能使用。由于要停止现在的卡使用，我又担心后续如果再次被拦截，收不到卡，那就完全无法使用。所以就不挂失补寄了。他们可以通过挂号信寄出，但是费用自己出，30港币。</p>          </div><div class="note note-warning @title">            <p>汇丰银行客服：填写了中文地址，给我申请补寄，汇丰mastercard无法通过挂号信寄，另外一张银行卡可以电话联系客服通过挂号信寄，邮费自己出。汇丰不会停用现在的手机银行服务。</p>          </div><h4 id="2024-04-02收到汇丰Mastercard"><a href="#2024-04-02收到汇丰Mastercard" class="headerlink" title="2024.04.02收到汇丰Mastercard"></a>2024.04.02收到汇丰Mastercard</h4><p>2024.04.02接到邮政EMS快递员的电话，收到了收到汇丰Mastercard。之前咨询客服说这个卡片只能用平邮寄过来，但是从收到的快递上来看，他们是通过EMS邮寄过来的，不然还是会收不到。3月13日通过在线客服申请卡片的补寄，到收到大约要20天。</p><img src="/2024/03/14/%E9%A6%99%E6%B8%AF%E9%A1%BA%E5%88%A9%E5%8A%9E%E7%90%86%E4%B8%AD%E9%93%B6-%E6%B1%87%E4%B8%B0-%E4%BC%97%E5%AE%89%E9%93%B6%E8%A1%8C%E5%8D%A1-%E6%89%8B%E6%9C%BA%E5%8D%A1%EF%BC%81%E6%88%91%E7%9A%84%E9%A6%99%E6%B8%AF%E5%87%BA%E8%A1%8C%EF%BC%8C%E8%B4%AD%E7%89%A9%EF%BC%8C%E4%BD%8F%E5%AE%BF%E5%85%A8%E6%94%BB%E7%95%A5%EF%BC%81/12.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/14/%E9%A6%99%E6%B8%AF%E9%A1%BA%E5%88%A9%E5%8A%9E%E7%90%86%E4%B8%AD%E9%93%B6-%E6%B1%87%E4%B8%B0-%E4%BC%97%E5%AE%89%E9%93%B6%E8%A1%8C%E5%8D%A1-%E6%89%8B%E6%9C%BA%E5%8D%A1%EF%BC%81%E6%88%91%E7%9A%84%E9%A6%99%E6%B8%AF%E5%87%BA%E8%A1%8C%EF%BC%8C%E8%B4%AD%E7%89%A9%EF%BC%8C%E4%BD%8F%E5%AE%BF%E5%85%A8%E6%94%BB%E7%95%A5%EF%BC%81/11.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/14/%E9%A6%99%E6%B8%AF%E9%A1%BA%E5%88%A9%E5%8A%9E%E7%90%86%E4%B8%AD%E9%93%B6-%E6%B1%87%E4%B8%B0-%E4%BC%97%E5%AE%89%E9%93%B6%E8%A1%8C%E5%8D%A1-%E6%89%8B%E6%9C%BA%E5%8D%A1%EF%BC%81%E6%88%91%E7%9A%84%E9%A6%99%E6%B8%AF%E5%87%BA%E8%A1%8C%EF%BC%8C%E8%B4%AD%E7%89%A9%EF%BC%8C%E4%BD%8F%E5%AE%BF%E5%85%A8%E6%94%BB%E7%95%A5%EF%BC%81/10.png" class="" width="488"><p>&nbsp;</p><h3 id="激活汇丰Mastercard"><a href="#激活汇丰Mastercard" class="headerlink" title="激活汇丰Mastercard"></a>激活汇丰Mastercard</h3><p>按照他们邮寄的纸张上写的激活方式，找不到对应的内容。后来咨询在线客服，他们机器客服会把流程列出来，以下是我的操作方式：<br>打开HSBC HK app，首页选择汇丰One，点击港元往来或港元储蓄</p><img src="/2024/03/14/%E9%A6%99%E6%B8%AF%E9%A1%BA%E5%88%A9%E5%8A%9E%E7%90%86%E4%B8%AD%E9%93%B6-%E6%B1%87%E4%B8%B0-%E4%BC%97%E5%AE%89%E9%93%B6%E8%A1%8C%E5%8D%A1-%E6%89%8B%E6%9C%BA%E5%8D%A1%EF%BC%81%E6%88%91%E7%9A%84%E9%A6%99%E6%B8%AF%E5%87%BA%E8%A1%8C%EF%BC%8C%E8%B4%AD%E7%89%A9%EF%BC%8C%E4%BD%8F%E5%AE%BF%E5%85%A8%E6%94%BB%E7%95%A5%EF%BC%81/13.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/14/%E9%A6%99%E6%B8%AF%E9%A1%BA%E5%88%A9%E5%8A%9E%E7%90%86%E4%B8%AD%E9%93%B6-%E6%B1%87%E4%B8%B0-%E4%BC%97%E5%AE%89%E9%93%B6%E8%A1%8C%E5%8D%A1-%E6%89%8B%E6%9C%BA%E5%8D%A1%EF%BC%81%E6%88%91%E7%9A%84%E9%A6%99%E6%B8%AF%E5%87%BA%E8%A1%8C%EF%BC%8C%E8%B4%AD%E7%89%A9%EF%BC%8C%E4%BD%8F%E5%AE%BF%E5%85%A8%E6%94%BB%E7%95%A5%EF%BC%81/14.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/14/%E9%A6%99%E6%B8%AF%E9%A1%BA%E5%88%A9%E5%8A%9E%E7%90%86%E4%B8%AD%E9%93%B6-%E6%B1%87%E4%B8%B0-%E4%BC%97%E5%AE%89%E9%93%B6%E8%A1%8C%E5%8D%A1-%E6%89%8B%E6%9C%BA%E5%8D%A1%EF%BC%81%E6%88%91%E7%9A%84%E9%A6%99%E6%B8%AF%E5%87%BA%E8%A1%8C%EF%BC%8C%E8%B4%AD%E7%89%A9%EF%BC%8C%E4%BD%8F%E5%AE%BF%E5%85%A8%E6%94%BB%E7%95%A5%EF%BC%81/15.png" class="" width="488"><p>&nbsp;</p><div class="note note-warning @title">            <p>拨打电话的时候，需要准备你这张卡片后的信息以及需要你开户绑定的手机号，用于接收短信验证码。按照电话提示操作即可，验证卡片后3位数字信息时，他们电话里没有回应，等待的时间有点长，应该是他们在调用系统查询核验，这个时候，只要耐心等待即可，不要重复输入内容。</p>          </div><img src="/2024/03/14/%E9%A6%99%E6%B8%AF%E9%A1%BA%E5%88%A9%E5%8A%9E%E7%90%86%E4%B8%AD%E9%93%B6-%E6%B1%87%E4%B8%B0-%E4%BC%97%E5%AE%89%E9%93%B6%E8%A1%8C%E5%8D%A1-%E6%89%8B%E6%9C%BA%E5%8D%A1%EF%BC%81%E6%88%91%E7%9A%84%E9%A6%99%E6%B8%AF%E5%87%BA%E8%A1%8C%EF%BC%8C%E8%B4%AD%E7%89%A9%EF%BC%8C%E4%BD%8F%E5%AE%BF%E5%85%A8%E6%94%BB%E7%95%A5%EF%BC%81/16.png" class="" width="488"><p>&nbsp;</p><h3 id="网友反馈"><a href="#网友反馈" class="headerlink" title="网友反馈"></a>网友反馈</h3><img src="/2024/03/14/%E9%A6%99%E6%B8%AF%E9%A1%BA%E5%88%A9%E5%8A%9E%E7%90%86%E4%B8%AD%E9%93%B6-%E6%B1%87%E4%B8%B0-%E4%BC%97%E5%AE%89%E9%93%B6%E8%A1%8C%E5%8D%A1-%E6%89%8B%E6%9C%BA%E5%8D%A1%EF%BC%81%E6%88%91%E7%9A%84%E9%A6%99%E6%B8%AF%E5%87%BA%E8%A1%8C%EF%BC%8C%E8%B4%AD%E7%89%A9%EF%BC%8C%E4%BD%8F%E5%AE%BF%E5%85%A8%E6%94%BB%E7%95%A5%EF%BC%81/1.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/14/%E9%A6%99%E6%B8%AF%E9%A1%BA%E5%88%A9%E5%8A%9E%E7%90%86%E4%B8%AD%E9%93%B6-%E6%B1%87%E4%B8%B0-%E4%BC%97%E5%AE%89%E9%93%B6%E8%A1%8C%E5%8D%A1-%E6%89%8B%E6%9C%BA%E5%8D%A1%EF%BC%81%E6%88%91%E7%9A%84%E9%A6%99%E6%B8%AF%E5%87%BA%E8%A1%8C%EF%BC%8C%E8%B4%AD%E7%89%A9%EF%BC%8C%E4%BD%8F%E5%AE%BF%E5%85%A8%E6%94%BB%E7%95%A5%EF%BC%81/2.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/14/%E9%A6%99%E6%B8%AF%E9%A1%BA%E5%88%A9%E5%8A%9E%E7%90%86%E4%B8%AD%E9%93%B6-%E6%B1%87%E4%B8%B0-%E4%BC%97%E5%AE%89%E9%93%B6%E8%A1%8C%E5%8D%A1-%E6%89%8B%E6%9C%BA%E5%8D%A1%EF%BC%81%E6%88%91%E7%9A%84%E9%A6%99%E6%B8%AF%E5%87%BA%E8%A1%8C%EF%BC%8C%E8%B4%AD%E7%89%A9%EF%BC%8C%E4%BD%8F%E5%AE%BF%E5%85%A8%E6%94%BB%E7%95%A5%EF%BC%81/3.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/14/%E9%A6%99%E6%B8%AF%E9%A1%BA%E5%88%A9%E5%8A%9E%E7%90%86%E4%B8%AD%E9%93%B6-%E6%B1%87%E4%B8%B0-%E4%BC%97%E5%AE%89%E9%93%B6%E8%A1%8C%E5%8D%A1-%E6%89%8B%E6%9C%BA%E5%8D%A1%EF%BC%81%E6%88%91%E7%9A%84%E9%A6%99%E6%B8%AF%E5%87%BA%E8%A1%8C%EF%BC%8C%E8%B4%AD%E7%89%A9%EF%BC%8C%E4%BD%8F%E5%AE%BF%E5%85%A8%E6%94%BB%E7%95%A5%EF%BC%81/4.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/14/%E9%A6%99%E6%B8%AF%E9%A1%BA%E5%88%A9%E5%8A%9E%E7%90%86%E4%B8%AD%E9%93%B6-%E6%B1%87%E4%B8%B0-%E4%BC%97%E5%AE%89%E9%93%B6%E8%A1%8C%E5%8D%A1-%E6%89%8B%E6%9C%BA%E5%8D%A1%EF%BC%81%E6%88%91%E7%9A%84%E9%A6%99%E6%B8%AF%E5%87%BA%E8%A1%8C%EF%BC%8C%E8%B4%AD%E7%89%A9%EF%BC%8C%E4%BD%8F%E5%AE%BF%E5%85%A8%E6%94%BB%E7%95%A5%EF%BC%81/5.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/14/%E9%A6%99%E6%B8%AF%E9%A1%BA%E5%88%A9%E5%8A%9E%E7%90%86%E4%B8%AD%E9%93%B6-%E6%B1%87%E4%B8%B0-%E4%BC%97%E5%AE%89%E9%93%B6%E8%A1%8C%E5%8D%A1-%E6%89%8B%E6%9C%BA%E5%8D%A1%EF%BC%81%E6%88%91%E7%9A%84%E9%A6%99%E6%B8%AF%E5%87%BA%E8%A1%8C%EF%BC%8C%E8%B4%AD%E7%89%A9%EF%BC%8C%E4%BD%8F%E5%AE%BF%E5%85%A8%E6%94%BB%E7%95%A5%EF%BC%81/6.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/14/%E9%A6%99%E6%B8%AF%E9%A1%BA%E5%88%A9%E5%8A%9E%E7%90%86%E4%B8%AD%E9%93%B6-%E6%B1%87%E4%B8%B0-%E4%BC%97%E5%AE%89%E9%93%B6%E8%A1%8C%E5%8D%A1-%E6%89%8B%E6%9C%BA%E5%8D%A1%EF%BC%81%E6%88%91%E7%9A%84%E9%A6%99%E6%B8%AF%E5%87%BA%E8%A1%8C%EF%BC%8C%E8%B4%AD%E7%89%A9%EF%BC%8C%E4%BD%8F%E5%AE%BF%E5%85%A8%E6%94%BB%E7%95%A5%EF%BC%81/7.png" class="" width="488"><h3 id="相关视频"><a href="#相关视频" class="headerlink" title="相关视频"></a>相关视频</h3><p>欢迎大家在我的youtube视频或者博客下留言反馈。如有最新的情况，我会在博客里补充。</p><iframe width="auto" height="auto" src="https://www.youtube.com/embed/ngMoOt0-bGY" title="香港顺利办理中银,汇丰,众安银行卡,手机卡！我的香港出行，购物，住宿全攻略！" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>&nbsp;<iframe width="auto" height="auto" src="https://www.youtube.com/embed/PIPhThzgFp4" title="邮政工作人员解答：国际平信/平邮，怎么做可以收到信件？" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>&nbsp;<iframe width="auto" height="auto" src="https://www.youtube.com/embed/gwtjUjO0_pw" title="香港办的银行卡平邮收不到？怎么才能收到境外寄来的银行卡？" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>&nbsp;<iframe width="auto" height="auto" src="https://www.youtube.com/embed/EUXjZgEPL_A" title="终于收到汇丰Mastercard！分享收卡经历及激活汇丰Mastercard教程！" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>&nbsp;]]></content>
    
    
    <categories>
      
      <category>办卡分享</category>
      
      <category>香港办卡</category>
      
    </categories>
    
    
    <tags>
      
      <tag>香港办卡</tag>
      
      <tag>汇丰银行</tag>
      
      <tag>中银香港</tag>
      
      <tag>Club SIM</tag>
      
      <tag>香港旅行</tag>
      
      <tag>香港购物</tag>
      
      <tag>香港出行</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LocalSend:一款免费的本地文件互传工具，支持PC(windows,macOS,Linux)和移动端(Android,iOS)</title>
    <link href="/2024/03/13/LocalSend%E4%B8%80%E6%AC%BE%E5%85%8D%E8%B4%B9%E7%9A%84%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E4%BA%92%E4%BC%A0%E5%B7%A5%E5%85%B7/"/>
    <url>/2024/03/13/LocalSend%E4%B8%80%E6%AC%BE%E5%85%8D%E8%B4%B9%E7%9A%84%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E4%BA%92%E4%BC%A0%E5%B7%A5%E5%85%B7/</url>
    
    <content type="html"><![CDATA[<h3 id="环境要求"><a href="#环境要求" class="headerlink" title="环境要求"></a>环境要求</h3><p>所有设备在同一个局域网内</p><h3 id="系统要求"><a href="#系统要求" class="headerlink" title="系统要求"></a>系统要求</h3><p>windows,macOS,Linux,Android,iOS</p><h3 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h3><p><a href="https://localsend.org/#/download">官网下载</a><br><a href="https://apps.apple.com/us/app/localsend/id1661733229?l=zh-Hans-CN">iOS版</a><br><a href="https://url49.ctfile.com/d/26918949-60364489-965fac?p=4499">windows,macOS,Android下载</a>, (访问密码: 4499)</p><h3 id="使用教程"><a href="#使用教程" class="headerlink" title="使用教程"></a>使用教程</h3><p>macOS端</p><img src="/2024/03/13/LocalSend%E4%B8%80%E6%AC%BE%E5%85%8D%E8%B4%B9%E7%9A%84%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E4%BA%92%E4%BC%A0%E5%B7%A5%E5%85%B7/1.png" class="" width="488"><p>&nbsp;<br>Android端</p><img src="/2024/03/13/LocalSend%E4%B8%80%E6%AC%BE%E5%85%8D%E8%B4%B9%E7%9A%84%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E4%BA%92%E4%BC%A0%E5%B7%A5%E5%85%B7/2.png" class="" width="488"><p>&nbsp;<br>Android端给mac端发送文件</p><img src="/2024/03/13/LocalSend%E4%B8%80%E6%AC%BE%E5%85%8D%E8%B4%B9%E7%9A%84%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E4%BA%92%E4%BC%A0%E5%B7%A5%E5%85%B7/3.png" class="" width="488"><p>&nbsp;<br>macOS端收到接受文件请求</p><img src="/2024/03/13/LocalSend%E4%B8%80%E6%AC%BE%E5%85%8D%E8%B4%B9%E7%9A%84%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E4%BA%92%E4%BC%A0%E5%B7%A5%E5%85%B7/4.png" class="" width="488"><p>&nbsp;<br>macOS端接受文件</p><img src="/2024/03/13/LocalSend%E4%B8%80%E6%AC%BE%E5%85%8D%E8%B4%B9%E7%9A%84%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E4%BA%92%E4%BC%A0%E5%B7%A5%E5%85%B7/5.png" class="" width="488"><p>&nbsp;<br>macOS端文件存储位置</p><img src="/2024/03/13/LocalSend%E4%B8%80%E6%AC%BE%E5%85%8D%E8%B4%B9%E7%9A%84%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E4%BA%92%E4%BC%A0%E5%B7%A5%E5%85%B7/6.png" class="" width="488"><p>&nbsp;</p><h3 id="博主点评"><a href="#博主点评" class="headerlink" title="博主点评"></a>博主点评</h3><p>这款本地互传软件对比我之前用的LANDROP好太多了，我最欣赏的地方是能通过他发送android apk文件，这个简直是太有用了，真的值得推荐！</p><h3 id="网友反馈"><a href="#网友反馈" class="headerlink" title="网友反馈"></a>网友反馈</h3><p>1.有没有自动同步的软件，不要点接接收就可以？<br>回复：这款软件就有这个功能更，只要到设置后开启快速保存，就能自动接受文件，不要点击确认。</p><img src="/2024/03/13/LocalSend%E4%B8%80%E6%AC%BE%E5%85%8D%E8%B4%B9%E7%9A%84%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E4%BA%92%E4%BC%A0%E5%B7%A5%E5%85%B7/7.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/13/LocalSend%E4%B8%80%E6%AC%BE%E5%85%8D%E8%B4%B9%E7%9A%84%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E4%BA%92%E4%BC%A0%E5%B7%A5%E5%85%B7/9.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/13/LocalSend%E4%B8%80%E6%AC%BE%E5%85%8D%E8%B4%B9%E7%9A%84%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E4%BA%92%E4%BC%A0%E5%B7%A5%E5%85%B7/8.png" class="" width="488"><p>&nbsp;</p><h3 id="相关视频"><a href="#相关视频" class="headerlink" title="相关视频"></a>相关视频</h3><iframe width="auto" height="auto" src="https://www.youtube.com/embed/5ZCNM1mTd2E" title="2024文件互传神器，支持windows,macOS,Linux,android,ios互传！局域网传输，安全，速度快！" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>]]></content>
    
    
    <categories>
      
      <category>工具分享</category>
      
      <category>文件互传</category>
      
      <category>视频教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>windows</tag>
      
      <tag>Android</tag>
      
      <tag>LocalSend</tag>
      
      <tag>文件互传</tag>
      
      <tag>macOS</tag>
      
      <tag>Linux</tag>
      
      <tag>iOS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何获取苹果开发者账号的APNs Auth Key</title>
    <link href="/2024/03/12/%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96%E8%8B%B9%E6%9E%9C%E5%BC%80%E5%8F%91%E8%80%85%E8%B4%A6%E5%8F%B7%E7%9A%84APNs-Auth-Key/"/>
    <url>/2024/03/12/%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96%E8%8B%B9%E6%9E%9C%E5%BC%80%E5%8F%91%E8%80%85%E8%B4%A6%E5%8F%B7%E7%9A%84APNs-Auth-Key/</url>
    
    <content type="html"><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>开发App时,集成第三方SDK时，遇上需要填写IOS应用的Token Authentication配置,比如：集成极光推送SDK</p><img src="/2024/03/12/%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96%E8%8B%B9%E6%9E%9C%E5%BC%80%E5%8F%91%E8%80%85%E8%B4%A6%E5%8F%B7%E7%9A%84APNs-Auth-Key/2.png" class="" width="488"><p>&nbsp;</p><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><h4 id="1-登录苹果开发者平台，进入证书管理"><a href="#1-登录苹果开发者平台，进入证书管理" class="headerlink" title="1.登录苹果开发者平台，进入证书管理"></a>1.登录苹果开发者平台，进入证书管理</h4><p><a href="https://idmsa.apple.com/IDMSWebAuth/signin?appIdKey=891bd3417a7776362562d2197f89480a8547b108fd934911bcbea0110d07f757&path=%2Faccount%2Fresources%2Fdevices%2Flist&rv=1" target="_blank">点击去登录</a></p><p>&nbsp;</p><img src="/2024/03/12/%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96%E8%8B%B9%E6%9E%9C%E5%BC%80%E5%8F%91%E8%80%85%E8%B4%A6%E5%8F%B7%E7%9A%84APNs-Auth-Key/0.png" class="" width="488"><p>&nbsp;</p><h4 id="2-创建Key，下载p8证书"><a href="#2-创建Key，下载p8证书" class="headerlink" title="2.创建Key，下载p8证书"></a>2.创建Key，下载p8证书</h4><img src="/2024/03/12/%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96%E8%8B%B9%E6%9E%9C%E5%BC%80%E5%8F%91%E8%80%85%E8%B4%A6%E5%8F%B7%E7%9A%84APNs-Auth-Key/3.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/12/%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96%E8%8B%B9%E6%9E%9C%E5%BC%80%E5%8F%91%E8%80%85%E8%B4%A6%E5%8F%B7%E7%9A%84APNs-Auth-Key/4.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/12/%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96%E8%8B%B9%E6%9E%9C%E5%BC%80%E5%8F%91%E8%80%85%E8%B4%A6%E5%8F%B7%E7%9A%84APNs-Auth-Key/5.png" class="" width="488"><p>&nbsp;</p><h4 id="3-获取Team-ID"><a href="#3-获取Team-ID" class="headerlink" title="3.获取Team ID"></a>3.获取Team ID</h4><img src="/2024/03/12/%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96%E8%8B%B9%E6%9E%9C%E5%BC%80%E5%8F%91%E8%80%85%E8%B4%A6%E5%8F%B7%E7%9A%84APNs-Auth-Key/6.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/12/%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96%E8%8B%B9%E6%9E%9C%E5%BC%80%E5%8F%91%E8%80%85%E8%B4%A6%E5%8F%B7%E7%9A%84APNs-Auth-Key/7.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/12/%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96%E8%8B%B9%E6%9E%9C%E5%BC%80%E5%8F%91%E8%80%85%E8%B4%A6%E5%8F%B7%E7%9A%84APNs-Auth-Key/8.png" class="" width="488"><p>&nbsp;</p><h4 id="4-配置极光推送Token-Authentication"><a href="#4-配置极光推送Token-Authentication" class="headerlink" title="4.配置极光推送Token Authentication"></a>4.配置极光推送Token Authentication</h4><img src="/2024/03/12/%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96%E8%8B%B9%E6%9E%9C%E5%BC%80%E5%8F%91%E8%80%85%E8%B4%A6%E5%8F%B7%E7%9A%84APNs-Auth-Key/9.png" class="" width="488"><p>&nbsp;</p>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
      <category>IOS开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>苹果开发者</tag>
      
      <tag>APNs Auth Key</tag>
      
      <tag>Token Authentication配置</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>WARP+免费密钥的流量</title>
    <link href="/2024/03/07/WARP-%E5%85%8D%E8%B4%B9%E5%AF%86%E9%92%A5%E7%9A%84%E6%B5%81%E9%87%8F/"/>
    <url>/2024/03/07/WARP-%E5%85%8D%E8%B4%B9%E5%AF%86%E9%92%A5%E7%9A%84%E6%B5%81%E9%87%8F/</url>
    
    <content type="html"><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>WARP Clash API是一个可以让你通过订阅的方式使用Cloudflare WARP+免费密钥的流量，支持Clash Shadowrocket等客户端。项目内置了刷取Cloudflare WARP+ 流量的功能，可以让你的WARP+流量不再受限制（每18秒可获得1GB流量），同时，配备了IP选优功能。支持Docker compose 一键部署，无需额外操作，即可享受你自己的Cloudflare WARP+私有高速节点，感兴趣的同学可以自行搭建研究学习。</p><h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><p>电脑：服务器或本机<br>系统：mac,windows,linux<br>软件：Docker,Docker compose,git</p><div class="note note-warning @title">            <p>1.必须安装git，docker在下载代码的时候需要用到<br>2.需要翻墙才能运行docker示例，否则会报错</p>          </div><p><a href="https://docs.docker.com/engine/install/">Docker安装教程</a><br><a href="https://docs.docker.com/compose/install/">Docker compose安装教程</a><br><a href="https://learnku.com/server/wikis/39229">Docker for mac安装教程</a><br><a href="https://help.aliyun.com/zh/ecs/use-cases/deploy-and-use-docker-on-alibaba-cloud-linux-2-instances#2afc861105osq">Docker for 阿里云服务器安装教程</a></p><h3 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h3><p>开源项目：<a href="https://github.com/vvbbnn00/WARP-Clash-API">WARP Clash API</a><br>科学上网工具：<a href="https://url49.ctfile.com/d/26918949-60520951-c0225f?p=4499">Clash for windows&#x2F;mac&#x2F;android</a> 访问密码: 4499</p><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><h4 id="1-下载项目代码"><a href="#1-下载项目代码" class="headerlink" title="1.下载项目代码"></a>1.下载项目代码</h4><pre><code class="hljs">git clone https://github.com/vvbbnn00/WARP-Clash-API.git</code></pre><img src="/2024/03/07/WARP-%E5%85%8D%E8%B4%B9%E5%AF%86%E9%92%A5%E7%9A%84%E6%B5%81%E9%87%8F/1.png" class="" width="488"><p>&nbsp;</p><h4 id="2-配置环境变量-可选"><a href="#2-配置环境变量-可选" class="headerlink" title="2.配置环境变量(可选)"></a>2.配置环境变量(可选)</h4><div class="note note-warning @title">            <p>如果需要把这个项目部署到服务器上，任何人知道你的服务器地址就能访问。最好是配置一下SECRET_KEY，防止别人滥用。<br>如果是部署在本机，只是局域网使用，就无须设置秘钥和域名</p>          </div><p>创建环境变量配置文件及设置秘钥和订阅地址域名,没有域名直接用服务器IP地址</p><img src="/2024/03/07/WARP-%E5%85%8D%E8%B4%B9%E5%AF%86%E9%92%A5%E7%9A%84%E6%B5%81%E9%87%8F/2.png" class="" width="488"><p>&nbsp;</p><h4 id="3-编译并运行"><a href="#3-编译并运行" class="headerlink" title="3.编译并运行"></a>3.编译并运行</h4><pre><code class="hljs">docker-compose up -d</code></pre><img src="/2024/03/07/WARP-%E5%85%8D%E8%B4%B9%E5%AF%86%E9%92%A5%E7%9A%84%E6%B5%81%E9%87%8F/3.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/07/WARP-%E5%85%8D%E8%B4%B9%E5%AF%86%E9%92%A5%E7%9A%84%E6%B5%81%E9%87%8F/4.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/07/WARP-%E5%85%8D%E8%B4%B9%E5%AF%86%E9%92%A5%E7%9A%84%E6%B5%81%E9%87%8F/5.png" class="" width="488"><p>&nbsp;</p><h4 id="4-获取订阅链接"><a href="#4-获取订阅链接" class="headerlink" title="4.获取订阅链接"></a>4.获取订阅链接</h4><p>访问http:&#x2F;&#x2F;你的IP:21001，输入SECRET_KEY（若没有配置，则可以留空），即可获取订阅链接。 </p><img src="/2024/03/07/WARP-%E5%85%8D%E8%B4%B9%E5%AF%86%E9%92%A5%E7%9A%84%E6%B5%81%E9%87%8F/6.png" class="" width="488"><p>&nbsp;</p><h4 id="5-手动优先ip"><a href="#5-手动优先ip" class="headerlink" title="5.手动优先ip"></a>5.手动优先ip</h4><div class="note note-info @title">            <p>项目本身包含了一个选优过的IP列表，但是由于WARP的IP是动态的，所以可能会出现IP不可用的情况。若您需要手动选优,在项目的根目录下执行下面的命令</p>          </div><pre><code class="hljs">docker-compose exec warp-clash python3 app.py optimize</code></pre><h4 id="6-设置自己的LicenseKey"><a href="#6-设置自己的LicenseKey" class="headerlink" title="6.设置自己的LicenseKey"></a>6.设置自己的LicenseKey</h4><p>若您已经拥有了WARP+的LicenseKey，可以通过以下接口来设置：</p><pre><code class="hljs">curl -X POST http://host:port/api/account/update_license -H &quot;Content-Type: application/json&quot; -d &quot;&#123;\&quot;license_key\&quot;: \&quot;your_license_key\&quot;&#125;&quot;</code></pre><p>如果您设置了SECRET_KEY，需要在URL的末尾添加key参数，例如：</p><pre><code class="hljs">curl -X POST http://host:port/api/account/update_license?key=your_secret_key -H &quot;Content-Type: application/json&quot; -d &quot;&#123;\&quot;license_key\&quot;: \&quot;your_license_key\&quot;&#125;&quot;</code></pre><h3 id="免费白嫖"><a href="#免费白嫖" class="headerlink" title="免费白嫖"></a>免费白嫖</h3><p>使用别人搭建的，且用且珍惜<a href="https://tofree.zeabur.app/">点击打开</a></p><p><a href="https://稳连云.me/#/register?code=TCJc126r">推荐：低至6元&#x2F;100G&#x2F;月机场</a></p><h3 id="网友反馈"><a href="#网友反馈" class="headerlink" title="网友反馈"></a>网友反馈</h3><p>环境：windows<br>1.遇到windows安装docker桌面版之后，执行docker version 提示错误：docker不是内部或外部命令，也不是可运行的程序 或批处理文件。<br>解决办法：配置系统环境变量</p><img src="/2024/03/07/WARP-%E5%85%8D%E8%B4%B9%E5%AF%86%E9%92%A5%E7%9A%84%E6%B5%81%E9%87%8F/10.jpg" class="" width="488"><p>&nbsp;<br>2.执行docker-compose up -d 提示错误： .env.local: The system cannot find the file specified.<br>解决方法：在项目的根目录下创建.env.local文件，内容可以为空。注意文件名的后缀名是.local。</p><img src="/2024/03/07/WARP-%E5%85%8D%E8%B4%B9%E5%AF%86%E9%92%A5%E7%9A%84%E6%B5%81%E9%87%8F/9.jpg" class="" width="488"><p>&nbsp;<br>3.遇到下面的错误<br>exec: “git. exel”: executable file not found in %PATH% ‘<br>python:3.11-alpine: failed to do request: Head “<a href="https://registry-1.docker.io/v2/library/python/manifests/3.11-alpine">https://registry-1.docker.io/v2/library/python/manifests/3.11-alpine</a>“ writing response to<br>registry-1 .docker.io:443: connecting to 127.0.0.1:2080: dial tcp 127.0.0.1:2080: connectex: No connection could be made because the<br>target machine actively refused it.</p><img src="/2024/03/07/WARP-%E5%85%8D%E8%B4%B9%E5%AF%86%E9%92%A5%E7%9A%84%E6%B5%81%E9%87%8F/8.jpg" class="" width="488"><p>&nbsp;</p><img src="/2024/03/07/WARP-%E5%85%8D%E8%B4%B9%E5%AF%86%E9%92%A5%E7%9A%84%E6%B5%81%E9%87%8F/7.jpg" class="" width="488"><p>解决方法：安装git并开启科学上网</p><h3 id="相关视频"><a href="#相关视频" class="headerlink" title="相关视频"></a>相关视频</h3><iframe width="auto" height="auto" src="https://www.youtube.com/embed/yN4bbDvvwYM" title="wrap+流量不受限,可生成订阅链接，支持多种软件|2024最新免费科学上网方式" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>]]></content>
    
    
    <categories>
      
      <category>工具分享</category>
      
      <category>视频教程</category>
      
      <category>技术分享</category>
      
      <category>科学上网</category>
      
    </categories>
    
    
    <tags>
      
      <tag>翻墙工具</tag>
      
      <tag>科学上网</tag>
      
      <tag>WARP+</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>苹果生成开发者证书及获取公钥与签名SHA1值</title>
    <link href="/2024/03/04/%E8%8B%B9%E6%9E%9C%E7%94%9F%E6%88%90%E5%BC%80%E5%8F%91%E8%80%85%E8%AF%81%E4%B9%A6%E5%8F%8A%E8%8E%B7%E5%8F%96%E5%85%AC%E9%92%A5%E4%B8%8E%E7%AD%BE%E5%90%8DSHA1%E5%80%BC/"/>
    <url>/2024/03/04/%E8%8B%B9%E6%9E%9C%E7%94%9F%E6%88%90%E5%BC%80%E5%8F%91%E8%80%85%E8%AF%81%E4%B9%A6%E5%8F%8A%E8%8E%B7%E5%8F%96%E5%85%AC%E9%92%A5%E4%B8%8E%E7%AD%BE%E5%90%8DSHA1%E5%80%BC/</url>
    
    <content type="html"><![CDATA[<h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><p>mac系统电脑一台</p><h3 id="生成开发者分发证书"><a href="#生成开发者分发证书" class="headerlink" title="生成开发者分发证书"></a>生成开发者分发证书</h3><h4 id="1-登录苹果开发者平台，进入证书管理"><a href="#1-登录苹果开发者平台，进入证书管理" class="headerlink" title="1.登录苹果开发者平台，进入证书管理"></a>1.登录苹果开发者平台，进入证书管理</h4><p><a href="https://idmsa.apple.com/IDMSWebAuth/signin?appIdKey=891bd3417a7776362562d2197f89480a8547b108fd934911bcbea0110d07f757&path=%2Faccount%2Fresources%2Fdevices%2Flist&rv=1" target="_blank">点击去登录</a></p><p>&nbsp;</p><img src="/2024/03/04/%E8%8B%B9%E6%9E%9C%E7%94%9F%E6%88%90%E5%BC%80%E5%8F%91%E8%80%85%E8%AF%81%E4%B9%A6%E5%8F%8A%E8%8E%B7%E5%8F%96%E5%85%AC%E9%92%A5%E4%B8%8E%E7%AD%BE%E5%90%8DSHA1%E5%80%BC/0.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/04/%E8%8B%B9%E6%9E%9C%E7%94%9F%E6%88%90%E5%BC%80%E5%8F%91%E8%80%85%E8%AF%81%E4%B9%A6%E5%8F%8A%E8%8E%B7%E5%8F%96%E5%85%AC%E9%92%A5%E4%B8%8E%E7%AD%BE%E5%90%8DSHA1%E5%80%BC/1.png" class="" width="488"><p>&nbsp;</p><h4 id="2-创建分发证书"><a href="#2-创建分发证书" class="headerlink" title="2.创建分发证书"></a>2.创建分发证书</h4><img src="/2024/03/04/%E8%8B%B9%E6%9E%9C%E7%94%9F%E6%88%90%E5%BC%80%E5%8F%91%E8%80%85%E8%AF%81%E4%B9%A6%E5%8F%8A%E8%8E%B7%E5%8F%96%E5%85%AC%E9%92%A5%E4%B8%8E%E7%AD%BE%E5%90%8DSHA1%E5%80%BC/2.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/04/%E8%8B%B9%E6%9E%9C%E7%94%9F%E6%88%90%E5%BC%80%E5%8F%91%E8%80%85%E8%AF%81%E4%B9%A6%E5%8F%8A%E8%8E%B7%E5%8F%96%E5%85%AC%E9%92%A5%E4%B8%8E%E7%AD%BE%E5%90%8DSHA1%E5%80%BC/3.png" class="" width="488"><p>&nbsp;</p><h4 id="3-创建请求证书"><a href="#3-创建请求证书" class="headerlink" title="3.创建请求证书"></a>3.创建请求证书</h4><p>打开mac电脑-钥匙串访问</p><img src="/2024/03/04/%E8%8B%B9%E6%9E%9C%E7%94%9F%E6%88%90%E5%BC%80%E5%8F%91%E8%80%85%E8%AF%81%E4%B9%A6%E5%8F%8A%E8%8E%B7%E5%8F%96%E5%85%AC%E9%92%A5%E4%B8%8E%E7%AD%BE%E5%90%8DSHA1%E5%80%BC/4.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/04/%E8%8B%B9%E6%9E%9C%E7%94%9F%E6%88%90%E5%BC%80%E5%8F%91%E8%80%85%E8%AF%81%E4%B9%A6%E5%8F%8A%E8%8E%B7%E5%8F%96%E5%85%AC%E9%92%A5%E4%B8%8E%E7%AD%BE%E5%90%8DSHA1%E5%80%BC/5.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/04/%E8%8B%B9%E6%9E%9C%E7%94%9F%E6%88%90%E5%BC%80%E5%8F%91%E8%80%85%E8%AF%81%E4%B9%A6%E5%8F%8A%E8%8E%B7%E5%8F%96%E5%85%AC%E9%92%A5%E4%B8%8E%E7%AD%BE%E5%90%8DSHA1%E5%80%BC/6.png" class="" width="488"><p>&nbsp;</p><h4 id="4-添加请求证书，并下载安装分发证书"><a href="#4-添加请求证书，并下载安装分发证书" class="headerlink" title="4.添加请求证书，并下载安装分发证书"></a>4.添加请求证书，并下载安装分发证书</h4><img src="/2024/03/04/%E8%8B%B9%E6%9E%9C%E7%94%9F%E6%88%90%E5%BC%80%E5%8F%91%E8%80%85%E8%AF%81%E4%B9%A6%E5%8F%8A%E8%8E%B7%E5%8F%96%E5%85%AC%E9%92%A5%E4%B8%8E%E7%AD%BE%E5%90%8DSHA1%E5%80%BC/9.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/04/%E8%8B%B9%E6%9E%9C%E7%94%9F%E6%88%90%E5%BC%80%E5%8F%91%E8%80%85%E8%AF%81%E4%B9%A6%E5%8F%8A%E8%8E%B7%E5%8F%96%E5%85%AC%E9%92%A5%E4%B8%8E%E7%AD%BE%E5%90%8DSHA1%E5%80%BC/10.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/04/%E8%8B%B9%E6%9E%9C%E7%94%9F%E6%88%90%E5%BC%80%E5%8F%91%E8%80%85%E8%AF%81%E4%B9%A6%E5%8F%8A%E8%8E%B7%E5%8F%96%E5%85%AC%E9%92%A5%E4%B8%8E%E7%AD%BE%E5%90%8DSHA1%E5%80%BC/11.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/04/%E8%8B%B9%E6%9E%9C%E7%94%9F%E6%88%90%E5%BC%80%E5%8F%91%E8%80%85%E8%AF%81%E4%B9%A6%E5%8F%8A%E8%8E%B7%E5%8F%96%E5%85%AC%E9%92%A5%E4%B8%8E%E7%AD%BE%E5%90%8DSHA1%E5%80%BC/12.png" class="" width="488"><p>&nbsp;</p><h4 id="5-查看公钥与签名SHA1值"><a href="#5-查看公钥与签名SHA1值" class="headerlink" title="5.查看公钥与签名SHA1值"></a>5.查看公钥与签名SHA1值</h4><img src="/2024/03/04/%E8%8B%B9%E6%9E%9C%E7%94%9F%E6%88%90%E5%BC%80%E5%8F%91%E8%80%85%E8%AF%81%E4%B9%A6%E5%8F%8A%E8%8E%B7%E5%8F%96%E5%85%AC%E9%92%A5%E4%B8%8E%E7%AD%BE%E5%90%8DSHA1%E5%80%BC/13.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/04/%E8%8B%B9%E6%9E%9C%E7%94%9F%E6%88%90%E5%BC%80%E5%8F%91%E8%80%85%E8%AF%81%E4%B9%A6%E5%8F%8A%E8%8E%B7%E5%8F%96%E5%85%AC%E9%92%A5%E4%B8%8E%E7%AD%BE%E5%90%8DSHA1%E5%80%BC/14.png" class="" width="488"><p>&nbsp;<br>&nbsp;</p><img src="/2024/03/04/%E8%8B%B9%E6%9E%9C%E7%94%9F%E6%88%90%E5%BC%80%E5%8F%91%E8%80%85%E8%AF%81%E4%B9%A6%E5%8F%8A%E8%8E%B7%E5%8F%96%E5%85%AC%E9%92%A5%E4%B8%8E%E7%AD%BE%E5%90%8DSHA1%E5%80%BC/15.png" class="" width="488"><p>&nbsp;</p><img src="/2024/03/04/%E8%8B%B9%E6%9E%9C%E7%94%9F%E6%88%90%E5%BC%80%E5%8F%91%E8%80%85%E8%AF%81%E4%B9%A6%E5%8F%8A%E8%8E%B7%E5%8F%96%E5%85%AC%E9%92%A5%E4%B8%8E%E7%AD%BE%E5%90%8DSHA1%E5%80%BC/16.png" class="" width="488"><p>&nbsp;</p>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
      <category>IOS开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>App备案</tag>
      
      <tag>IOS</tag>
      
      <tag>证书签名</tag>
      
      <tag>SHA-1</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2024年国内App,小程序及网站备案教程</title>
    <link href="/2024/03/04/2024%E5%B9%B4%E5%9B%BD%E5%86%85App-%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%8F%8A%E7%BD%91%E7%AB%99%E5%A4%87%E6%A1%88%E6%95%99%E7%A8%8B/"/>
    <url>/2024/03/04/2024%E5%B9%B4%E5%9B%BD%E5%86%85App-%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%8F%8A%E7%BD%91%E7%AB%99%E5%A4%87%E6%A1%88%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>2023年9月1日后，所有新增APP必须完成APP备案后才可申请上架，未备案的APP无法在上架；2023年9月1日前已上架的APP需要在2024年3月31日前完成APP备案。</p><h3 id="备案步骤"><a href="#备案步骤" class="headerlink" title="备案步骤"></a>备案步骤</h3><h4 id="1-主办者找好接入商，由接入商代为备案"><a href="#1-主办者找好接入商，由接入商代为备案" class="headerlink" title="1.主办者找好接入商，由接入商代为备案"></a>1.主办者找好接入商，由接入商代为备案</h4><p>阿里云：<a href="https://beian.aliyun.com/">https://beian.aliyun.com</a><br>华为云：<a href="https://beian.huaweicloud.com/">https://beian.huaweicloud.com</a><br>腾讯云：<a href="https://cloud.tencent.com/product/ba">https://cloud.tencent.com/product/ba</a><br>百度智能云：<a href="https://beian.bce.baidu.com/">https://beian.bce.baidu.com/</a></p><div class="note note-waring @title">            <p>国内一般使用的以上云服务商，可以到他们的平台里发起备案申请</p>          </div><div class="note note-info @title">            <p><a href="/2024/03/04/%E8%8B%B9%E6%9E%9C%E7%94%9F%E6%88%90%E5%BC%80%E5%8F%91%E8%80%85%E8%AF%81%E4%B9%A6%E5%8F%8A%E8%8E%B7%E5%8F%96%E5%85%AC%E9%92%A5%E4%B8%8E%E7%AD%BE%E5%90%8DSHA1%E5%80%BC/" title="苹果生成开发者证书及获取公钥与签名SHA1值">如何生成苹果开发者证书及获取公钥与签名SHA1值-点击查看</a></p>          </div><div class="note note-info @title">            <p><a href="https://beian.miit.gov.cn/#/Integrated/recordQuery">工业和信息化部政务服务平台 ICP&#x2F;IP地址&#x2F;域名信息备案管理系统-点击查看</a></p>          </div>]]></content>
    
    
    <categories>
      
      <category>技术教程</category>
      
      <category>视频教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>App备案</tag>
      
      <tag>小程序备案</tag>
      
      <tag>网站备案</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>不用验证手机号创建谷歌账号</title>
    <link href="/2024/03/02/%E4%B8%8D%E7%94%A8%E9%AA%8C%E8%AF%81%E6%89%8B%E6%9C%BA%E5%8F%B7%E5%88%9B%E5%BB%BA%E8%B0%B7%E6%AD%8C%E8%B4%A6%E5%8F%B7/"/>
    <url>/2024/03/02/%E4%B8%8D%E7%94%A8%E9%AA%8C%E8%AF%81%E6%89%8B%E6%9C%BA%E5%8F%B7%E5%88%9B%E5%BB%BA%E8%B0%B7%E6%AD%8C%E8%B4%A6%E5%8F%B7/</url>
    
    <content type="html"><![CDATA[<h3 id="环境及工具准备"><a href="#环境及工具准备" class="headerlink" title="环境及工具准备"></a>环境及工具准备</h3><h4 id="1-iphone手机"><a href="#1-iphone手机" class="headerlink" title="1.iphone手机"></a>1.iphone手机</h4><h4 id="2-开启代理，我用的是美国的节点"><a href="#2-开启代理，我用的是美国的节点" class="headerlink" title="2.开启代理，我用的是美国的节点"></a>2.开启代理，我用的是美国的节点</h4><h3 id="创建流程"><a href="#创建流程" class="headerlink" title="创建流程"></a>创建流程</h3><h4 id="1-打开iPhone手机自带的邮件App"><a href="#1-打开iPhone手机自带的邮件App" class="headerlink" title="1.打开iPhone手机自带的邮件App"></a>1.打开iPhone手机自带的邮件App</h4><img src="/2024/03/02/%E4%B8%8D%E7%94%A8%E9%AA%8C%E8%AF%81%E6%89%8B%E6%9C%BA%E5%8F%B7%E5%88%9B%E5%BB%BA%E8%B0%B7%E6%AD%8C%E8%B4%A6%E5%8F%B7/0.png" class="" width="488" title="打开应用"><h4 id="2-如果不是第一次通过这个App创建，可以跳过下面的2-3-4步骤，直接看第5步"><a href="#2-如果不是第一次通过这个App创建，可以跳过下面的2-3-4步骤，直接看第5步" class="headerlink" title="2.如果不是第一次通过这个App创建，可以跳过下面的2,3,4步骤，直接看第5步"></a>2.如果不是第一次通过这个App创建，可以跳过下面的2,3,4步骤，直接看第5步</h4><h4 id="3-点击设置-邮件-账户-删除账户。删除原来创建的账户"><a href="#3-点击设置-邮件-账户-删除账户。删除原来创建的账户" class="headerlink" title="3.点击设置-邮件-账户-删除账户。删除原来创建的账户"></a>3.点击设置-邮件-账户-删除账户。删除原来创建的账户</h4><img src="/2024/03/02/%E4%B8%8D%E7%94%A8%E9%AA%8C%E8%AF%81%E6%89%8B%E6%9C%BA%E5%8F%B7%E5%88%9B%E5%BB%BA%E8%B0%B7%E6%AD%8C%E8%B4%A6%E5%8F%B7/1.png" class=""><p>&nbsp;</p><img src="/2024/03/02/%E4%B8%8D%E7%94%A8%E9%AA%8C%E8%AF%81%E6%89%8B%E6%9C%BA%E5%8F%B7%E5%88%9B%E5%BB%BA%E8%B0%B7%E6%AD%8C%E8%B4%A6%E5%8F%B7/2.png" class=""><p>&nbsp;</p><img src="/2024/03/02/%E4%B8%8D%E7%94%A8%E9%AA%8C%E8%AF%81%E6%89%8B%E6%9C%BA%E5%8F%B7%E5%88%9B%E5%BB%BA%E8%B0%B7%E6%AD%8C%E8%B4%A6%E5%8F%B7/3.png" class=""><p>&nbsp;</p><h4 id="4-点击设置-邮件-账户-添加账户。"><a href="#4-点击设置-邮件-账户-添加账户。" class="headerlink" title="4.点击设置-邮件-账户-添加账户。"></a>4.点击设置-邮件-账户-添加账户。</h4><p>前面参考步骤看3<br>&nbsp;</p><img src="/2024/03/02/%E4%B8%8D%E7%94%A8%E9%AA%8C%E8%AF%81%E6%89%8B%E6%9C%BA%E5%8F%B7%E5%88%9B%E5%BB%BA%E8%B0%B7%E6%AD%8C%E8%B4%A6%E5%8F%B7/4.png" class=""><p>&nbsp;</p><h4 id="5-选择google-切换语言-Create-account"><a href="#5-选择google-切换语言-Create-account" class="headerlink" title="5.选择google-切换语言-Create account"></a>5.选择google-切换语言-Create account</h4><p>选择google</p><img src="/2024/03/02/%E4%B8%8D%E7%94%A8%E9%AA%8C%E8%AF%81%E6%89%8B%E6%9C%BA%E5%8F%B7%E5%88%9B%E5%BB%BA%E8%B0%B7%E6%AD%8C%E8%B4%A6%E5%8F%B7/0.png" class="" width="488" title="打开应用"><p>&nbsp;<br>更改语言为English(United States)</p><img src="/2024/03/02/%E4%B8%8D%E7%94%A8%E9%AA%8C%E8%AF%81%E6%89%8B%E6%9C%BA%E5%8F%B7%E5%88%9B%E5%BB%BA%E8%B0%B7%E6%AD%8C%E8%B4%A6%E5%8F%B7/5.png" class=""><p>&nbsp;</p><img src="/2024/03/02/%E4%B8%8D%E7%94%A8%E9%AA%8C%E8%AF%81%E6%89%8B%E6%9C%BA%E5%8F%B7%E5%88%9B%E5%BB%BA%E8%B0%B7%E6%AD%8C%E8%B4%A6%E5%8F%B7/6.png" class=""><p>&nbsp;</p><img src="/2024/03/02/%E4%B8%8D%E7%94%A8%E9%AA%8C%E8%AF%81%E6%89%8B%E6%9C%BA%E5%8F%B7%E5%88%9B%E5%BB%BA%E8%B0%B7%E6%AD%8C%E8%B4%A6%E5%8F%B7/12.png" class=""><p>&nbsp;<br>填写姓名</p><img src="/2024/03/02/%E4%B8%8D%E7%94%A8%E9%AA%8C%E8%AF%81%E6%89%8B%E6%9C%BA%E5%8F%B7%E5%88%9B%E5%BB%BA%E8%B0%B7%E6%AD%8C%E8%B4%A6%E5%8F%B7/7.png" class=""><p>&nbsp;<br>填写生日性别，年龄要大于18岁</p><img src="/2024/03/02/%E4%B8%8D%E7%94%A8%E9%AA%8C%E8%AF%81%E6%89%8B%E6%9C%BA%E5%8F%B7%E5%88%9B%E5%BB%BA%E8%B0%B7%E6%AD%8C%E8%B4%A6%E5%8F%B7/8.png" class=""><p>&nbsp;<br>选择或创建gmail账号</p><img src="/2024/03/02/%E4%B8%8D%E7%94%A8%E9%AA%8C%E8%AF%81%E6%89%8B%E6%9C%BA%E5%8F%B7%E5%88%9B%E5%BB%BA%E8%B0%B7%E6%AD%8C%E8%B4%A6%E5%8F%B7/9.png" class="" width="488"><p>&nbsp;<br>设置密码</p><img src="/2024/03/02/%E4%B8%8D%E7%94%A8%E9%AA%8C%E8%AF%81%E6%89%8B%E6%9C%BA%E5%8F%B7%E5%88%9B%E5%BB%BA%E8%B0%B7%E6%AD%8C%E8%B4%A6%E5%8F%B7/10.png" class="" width="488"><p>&nbsp;<br>设置辅助邮箱，可以填写或跳过。看到这个就表示创建成功，不需要验证手机号</p><img src="/2024/03/02/%E4%B8%8D%E7%94%A8%E9%AA%8C%E8%AF%81%E6%89%8B%E6%9C%BA%E5%8F%B7%E5%88%9B%E5%BB%BA%E8%B0%B7%E6%AD%8C%E8%B4%A6%E5%8F%B7/11.png" class="" width="488"><p>&nbsp;</p><h4 id="6-后面的流程按照提示输入即可，注意生日要设置年龄大于18岁，其他可以跳过的步骤都跳过就行。"><a href="#6-后面的流程按照提示输入即可，注意生日要设置年龄大于18岁，其他可以跳过的步骤都跳过就行。" class="headerlink" title="6.后面的流程按照提示输入即可，注意生日要设置年龄大于18岁，其他可以跳过的步骤都跳过就行。"></a>6.后面的流程按照提示输入即可，注意生日要设置年龄大于18岁，其他可以跳过的步骤都跳过就行。</h4><h4 id="如果不明白可以观看视频"><a href="#如果不明白可以观看视频" class="headerlink" title="如果不明白可以观看视频"></a>如果不明白可以观看视频</h4><iframe width="auto" height="auto" src="https://www.youtube.com/embed/WbA6Pl168Ug" title="2024最新创建谷歌账号的方式，无须特殊设置，跳过手机号验证！" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>]]></content>
    
    
    <categories>
      
      <category>视频教程</category>
      
      <category>技术分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>google账号</tag>
      
      <tag>技术教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>快速搭建ReactNative项目</title>
    <link href="/2024/02/28/%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BAReactNative%E9%A1%B9%E7%9B%AE/"/>
    <url>/2024/02/28/%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BAReactNative%E9%A1%B9%E7%9B%AE/</url>
    
    <content type="html"><![CDATA[<h3 id="1-创建项目"><a href="#1-创建项目" class="headerlink" title="1.创建项目"></a>1.创建项目</h3><pre><code class="hljs">react-native init DadiDriver --version react-native@0.68.2</code></pre><p>指定react-native的固定版本号0.68.2<br>DadiDriver 项目名称</p><h3 id="2-通过Beyond-Compare把将原来的项目相关的src，android文件夹及其他js文件同步到新的项目，保持新项目的名字不变"><a href="#2-通过Beyond-Compare把将原来的项目相关的src，android文件夹及其他js文件同步到新的项目，保持新项目的名字不变" class="headerlink" title="2.通过Beyond Compare把将原来的项目相关的src，android文件夹及其他js文件同步到新的项目，保持新项目的名字不变"></a>2.通过Beyond Compare把将原来的项目相关的src，android文件夹及其他js文件同步到新的项目，保持新项目的名字不变</h3><img src="/2024/02/28/%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BAReactNative%E9%A1%B9%E7%9B%AE/16.png" class="" title="同步代码"> <h3 id="3-项目根目录下执行yarn命令，安装项目依赖包"><a href="#3-项目根目录下执行yarn命令，安装项目依赖包" class="headerlink" title="3.项目根目录下执行yarn命令，安装项目依赖包"></a>3.项目根目录下执行yarn命令，安装项目依赖包</h3><pre><code class="hljs">yarn</code></pre><h3 id="4-更改android的包名，启动图，启动logo，签名"><a href="#4-更改android的包名，启动图，启动logo，签名" class="headerlink" title="4.更改android的包名，启动图，启动logo，签名"></a>4.更改android的包名，启动图，启动logo，签名</h3><h3 id="5-通过Beyond-Compare把Podfile文件通过到ios目录下。然后在ios目录下，执行pod-install"><a href="#5-通过Beyond-Compare把Podfile文件通过到ios目录下。然后在ios目录下，执行pod-install" class="headerlink" title="5.通过Beyond Compare把Podfile文件通过到ios目录下。然后在ios目录下，执行pod install"></a>5.通过Beyond Compare把Podfile文件通过到ios目录下。然后在ios目录下，执行pod install</h3><pre><code class="hljs">cd iospod install</code></pre><img src="/2024/02/28/%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BAReactNative%E9%A1%B9%E7%9B%AE/6.png" class="" title="同步代码"><div class="note note-warning @title">            <p>pod install执行时经常因为网络原因终端，需要多次执行这条命令，直到所有的依赖包下载完成</p>          </div><img src="/2024/02/28/%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BAReactNative%E9%A1%B9%E7%9B%AE/7.png" class="" title="同步代码"><p>pod install执行成功</p><img src="/2024/02/28/%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BAReactNative%E9%A1%B9%E7%9B%AE/8.png" class="" title="pod install执行成功">    <div class="fold">      <div class="fold-title fold-warning collapsed" data-toggle="collapse" href="#collapse-494eeaaf" role="button" aria-expanded="false" aria-controls="collapse-494eeaaf">        <div class="fold-arrow">▶</div>Tips：IOS同步代码及操作步骤注意事项      </div>      <div class="fold-collapse collapse" id="collapse-494eeaaf">        <div class="fold-content">          <p>ios先同步Podfile，同步的时候注意别把项目名覆盖了。<br>然后执行pod install<br>最后再用xcode打开项目，添加一个以项目名为名称的swift文件，再把img文件夹和MyModule文件夹拖入项目当中</p>        </div>      </div>    </div><p>双击双击DadiDriver.xcworkspace，用xcode打开项目</p><img src="/2024/02/28/%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BAReactNative%E9%A1%B9%E7%9B%AE/9.png" class="" title="用xcode打开项目"><p>新建DadiDriver.swfit文件</p><img src="/2024/02/28/%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BAReactNative%E9%A1%B9%E7%9B%AE/10.png" class="" title="新建DadiDriver.swfit文件"><img src="/2024/02/28/%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BAReactNative%E9%A1%B9%E7%9B%AE/11.png" class="" title="新建DadiDriver.swfit文件"><img src="/2024/02/28/%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BAReactNative%E9%A1%B9%E7%9B%AE/12.png" class="" title="新建DadiDriver.swfit文件"><img src="/2024/02/28/%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BAReactNative%E9%A1%B9%E7%9B%AE/13.png" class="" title="新建DadiDriver.swfit文件"><p>将原项目的img和MyMoudule文件夹拖入项目中</p><img src="/2024/02/28/%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BAReactNative%E9%A1%B9%E7%9B%AE/14.png" class="" title="将原项目的img和MyMoudule文件夹拖入项目中"><img src="/2024/02/28/%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BAReactNative%E9%A1%B9%E7%9B%AE/15.png" class="" title="将原项目的img和MyMoudule文件夹拖入项目中"><p>把字体库文件拖入到项目中<br>% asset_img 18.png  把字体库文件拖入到项目中 %}<br>% asset_img 19.png  把字体库文件拖入到项目中 %}</p><p>把project.pbxproj文件相应的代码通过到新的项目</p><img src="/2024/02/28/%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BAReactNative%E9%A1%B9%E7%9B%AE/17.png" class="" title="把project.pbxproj文件相应的代码通过到新的项目"><p>同步代码只同步设置，不要把项目的名字同步到新的项目</p><img src="/2024/02/28/%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BAReactNative%E9%A1%B9%E7%9B%AE/20.png" class="" title="把project.pbxproj文件相应的代码通过到新的项目"><h3 id="6-更改ios的启动图，启动logo，bundleId"><a href="#6-更改ios的启动图，启动logo，bundleId" class="headerlink" title="6.更改ios的启动图，启动logo，bundleId"></a>6.更改ios的启动图，启动logo，bundleId</h3><img src="/2024/02/28/%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BAReactNative%E9%A1%B9%E7%9B%AE/21.png" class="" title="更改项目的名称，bundleId，签名证书"><h3 id="7-用code-push命令创建项目"><a href="#7-用code-push命令创建项目" class="headerlink" title="7.用code-push命令创建项目"></a>7.用code-push命令创建项目</h3><h3 id="8-更改热更新服务器的地址，替换对应的key"><a href="#8-更改热更新服务器的地址，替换对应的key" class="headerlink" title="8.更改热更新服务器的地址，替换对应的key"></a>8.更改热更新服务器的地址，替换对应的key</h3><h3 id="一键生成启动图标"><a href="#一键生成启动图标" class="headerlink" title="一键生成启动图标"></a>一键生成启动图标</h3><blockquote><p>可以通过用户给的logo,用下面的网站一键生成android和ios的启动图标</p><footer><strong>一键生成</strong><cite><a href="https://icon.wuruihong.com/">启动图标(ios,android)</a></cite></footer></blockquote><img src="/2024/02/28/%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BAReactNative%E9%A1%B9%E7%9B%AE/1.png" class="" width="800" title="生成应用启动图标"><img src="/2024/02/28/%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BAReactNative%E9%A1%B9%E7%9B%AE/2.png" class="" title="下载生成的图标">]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
      <category>IOS开发</category>
      
      <category>Android</category>
      
      <category>ReactNative开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>react native</tag>
      
      <tag>项目搭建</tag>
      
      <tag>笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>adb常用命令及将android手机屏幕共享到电脑上</title>
    <link href="/2024/02/28/adb%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <url>/2024/02/28/adb%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><p> 1.在电脑上安装adb工具或者安装android sdk<br> 2.配置环境变量<br> 3.打开手机usb调试模式<br> 4.用线连接电脑和手机，输入命令 adb tcpip 5555<br> 5.确保手机和电脑用的连接同一个wifi或路由器</p><h4 id="第一次通过adb命令连接手机会弹出下面的授权提示-点击允许"><a href="#第一次通过adb命令连接手机会弹出下面的授权提示-点击允许" class="headerlink" title="第一次通过adb命令连接手机会弹出下面的授权提示,点击允许"></a>第一次通过adb命令连接手机会弹出下面的授权提示,点击允许</h4><img src="/2024/02/28/adb%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/2.jpg" class="" width="400" title="第一次通过adb命令连接手机会弹出下面的授权提示"><h3 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h3><h4 id="1-给设备设置监听端口（TCP-IP）"><a href="#1-给设备设置监听端口（TCP-IP）" class="headerlink" title="1.给设备设置监听端口（TCP&#x2F;IP）"></a>1.给设备设置监听端口（TCP&#x2F;IP）</h4><pre><code class="hljs">adb tcpip 5555</code></pre><h4 id="2-连接手机"><a href="#2-连接手机" class="headerlink" title="2.连接手机"></a>2.连接手机</h4><pre><code class="hljs">adb connect 192.168.3.9  </code></pre><p>192.168.3.9代表的是手机的局域网ip</p><h4 id="3-断开连接"><a href="#3-断开连接" class="headerlink" title="3.断开连接"></a>3.断开连接</h4><pre><code class="hljs">adb disconnect 192.168.3.9  </code></pre><p>192.168.3.9代表的是手机的局域网ip</p><h4 id="4-查看当前电脑连接的设备-手机"><a href="#4-查看当前电脑连接的设备-手机" class="headerlink" title="4.查看当前电脑连接的设备(手机)"></a>4.查看当前电脑连接的设备(手机)</h4><pre><code class="hljs">adb devices</code></pre><h4 id="5-adb命令安装apk"><a href="#5-adb命令安装apk" class="headerlink" title="5.adb命令安装apk"></a>5.adb命令安装apk</h4><pre><code class="hljs">adb install -r 文件目录/app.apkadb install -t 文件目录/app.apk</code></pre><p>-r 覆盖安装<br>-t 安装测试版，一般是程序员编译运行的代码，不是发布版本。需要用这个参数</p><h4 id="6-adb连接了多台设备，在执行adb命令时，需要指定设备-s-设备"><a href="#6-adb连接了多台设备，在执行adb命令时，需要指定设备-s-设备" class="headerlink" title="6.adb连接了多台设备，在执行adb命令时，需要指定设备 -s 设备"></a>6.adb连接了多台设备，在执行adb命令时，需要指定设备 -s 设备</h4><pre><code class="hljs">adb -s 192.168.3.9:5555 install -r 文件目录/app.apk </code></pre><h4 id="7-重置adb"><a href="#7-重置adb" class="headerlink" title="7.重置adb"></a>7.重置adb</h4><pre><code class="hljs">adb kill-server</code></pre><h4 id="8-复制文件到手机"><a href="#8-复制文件到手机" class="headerlink" title="8.复制文件到手机"></a>8.复制文件到手机</h4><pre><code class="hljs">adb push foo.txt /sdcard/foo.txt</code></pre><p>remote(手机):&#x2F;sdcard&#x2F;foo.txt<br>local(电脑):foo.txt</p><h4 id="9-从手机复制文件到电脑"><a href="#9-从手机复制文件到电脑" class="headerlink" title="9.从手机复制文件到电脑"></a>9.从手机复制文件到电脑</h4><pre><code class="hljs">adb pull /system/framework/framework.jar /Users/spatacuslee/Downloads</code></pre><p>remote(手机):&#x2F;system&#x2F;framework&#x2F;framework.jar<br>local(电脑):&#x2F;Users&#x2F;spatacuslee&#x2F;Downloads</p><p>192.168.3.9:5555可以通过adb devices查看到</p><img src="/2024/02/28/adb%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/1.png" class="" title="查看当前电脑连接的设备"><h3 id="将手机投屏到电脑"><a href="#将手机投屏到电脑" class="headerlink" title="将手机投屏到电脑"></a>将手机投屏到电脑</h3><p> 前提：要先用adb命令通过电脑连接手机</p><h4 id="电脑端安装：scrcpy"><a href="#电脑端安装：scrcpy" class="headerlink" title="电脑端安装：scrcpy"></a>电脑端安装：scrcpy</h4><h4 id="手机投屏电脑命令"><a href="#手机投屏电脑命令" class="headerlink" title="手机投屏电脑命令"></a>手机投屏电脑命令</h4><pre><code class="hljs">scrcpy --push-target /sdcard/脚本 --always-on-top --max-size 1080 --video-bit-rate 5M -s 192.168.3.73</code></pre><p> 5M表示带宽也就是传输速率，不是越大越好，也要看你的网络<br> 192.168.3.73 手机的局域网ip</p>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
      <category>Android</category>
      
    </categories>
    
    
    <tags>
      
      <tag>adb</tag>
      
      <tag>命令</tag>
      
      <tag>文章</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用Charles实现移动App接口数据抓包教程</title>
    <link href="/2023/12/23/%E4%BD%BF%E7%94%A8Charles%E5%AE%9E%E7%8E%B0%E7%A7%BB%E5%8A%A8App%E6%8E%A5%E5%8F%A3%E6%95%B0%E6%8D%AE%E6%8A%93%E5%8C%85%E6%95%99%E7%A8%8B/"/>
    <url>/2023/12/23/%E4%BD%BF%E7%94%A8Charles%E5%AE%9E%E7%8E%B0%E7%A7%BB%E5%8A%A8App%E6%8E%A5%E5%8F%A3%E6%95%B0%E6%8D%AE%E6%8A%93%E5%8C%85%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><h4 id="Charles-anroid手机-ios手机"><a href="#Charles-anroid手机-ios手机" class="headerlink" title="Charles,anroid手机&#x2F;ios手机"></a>Charles,anroid手机&#x2F;ios手机</h4><h4 id="Charles下载地址-官网下载"><a href="#Charles下载地址-官网下载" class="headerlink" title="Charles下载地址:官网下载"></a>Charles下载地址:<a href="https://www.charlesproxy.com/download/latest-release/">官网下载</a></h4><h4 id="电脑和手机要连接同一路由器-即同一局域网"><a href="#电脑和手机要连接同一路由器-即同一局域网" class="headerlink" title="电脑和手机要连接同一路由器(即同一局域网)"></a>电脑和手机要连接同一路由器(即同一局域网)</h4><div class="note note-warning @title">            <p>android系统版本号&lt;&#x3D;10,超过这个版本号的需要需要root，否则抓不了包</p>          </div><h3 id="一-配置Charles"><a href="#一-配置Charles" class="headerlink" title="一.配置Charles"></a>一.配置Charles</h3><h4 id="开启代理"><a href="#开启代理" class="headerlink" title="开启代理"></a>开启代理</h4><img src="/2023/12/23/%E4%BD%BF%E7%94%A8Charles%E5%AE%9E%E7%8E%B0%E7%A7%BB%E5%8A%A8App%E6%8E%A5%E5%8F%A3%E6%95%B0%E6%8D%AE%E6%8A%93%E5%8C%85%E6%95%99%E7%A8%8B/1.png" class="" width="488" title="开启代理"><p>&nbsp;</p><h4 id="设置代理"><a href="#设置代理" class="headerlink" title="设置代理"></a>设置代理</h4><img src="/2023/12/23/%E4%BD%BF%E7%94%A8Charles%E5%AE%9E%E7%8E%B0%E7%A7%BB%E5%8A%A8App%E6%8E%A5%E5%8F%A3%E6%95%B0%E6%8D%AE%E6%8A%93%E5%8C%85%E6%95%99%E7%A8%8B/2.png" class="" width="488" title="设置代理"><p>&nbsp;</p><img src="/2023/12/23/%E4%BD%BF%E7%94%A8Charles%E5%AE%9E%E7%8E%B0%E7%A7%BB%E5%8A%A8App%E6%8E%A5%E5%8F%A3%E6%95%B0%E6%8D%AE%E6%8A%93%E5%8C%85%E6%95%99%E7%A8%8B/3.png" class="" width="488" title="设置代理"><p>&nbsp;</p><img src="/2023/12/23/%E4%BD%BF%E7%94%A8Charles%E5%AE%9E%E7%8E%B0%E7%A7%BB%E5%8A%A8App%E6%8E%A5%E5%8F%A3%E6%95%B0%E6%8D%AE%E6%8A%93%E5%8C%85%E6%95%99%E7%A8%8B/4.png" class="" width="488" title="设置代理"><p>&nbsp;</p><h4 id="安装证书"><a href="#安装证书" class="headerlink" title="安装证书"></a>安装证书</h4><img src="/2023/12/23/%E4%BD%BF%E7%94%A8Charles%E5%AE%9E%E7%8E%B0%E7%A7%BB%E5%8A%A8App%E6%8E%A5%E5%8F%A3%E6%95%B0%E6%8D%AE%E6%8A%93%E5%8C%85%E6%95%99%E7%A8%8B/5.png" class="" width="488" title="安装证书"><p>&nbsp;</p><img src="/2023/12/23/%E4%BD%BF%E7%94%A8Charles%E5%AE%9E%E7%8E%B0%E7%A7%BB%E5%8A%A8App%E6%8E%A5%E5%8F%A3%E6%95%B0%E6%8D%AE%E6%8A%93%E5%8C%85%E6%95%99%E7%A8%8B/6.png" class="" width="488" title="安装证书"><p>&nbsp;</p><img src="/2023/12/23/%E4%BD%BF%E7%94%A8Charles%E5%AE%9E%E7%8E%B0%E7%A7%BB%E5%8A%A8App%E6%8E%A5%E5%8F%A3%E6%95%B0%E6%8D%AE%E6%8A%93%E5%8C%85%E6%95%99%E7%A8%8B/7.png" class="" width="488" title="安装证书"><p>&nbsp;</p><h3 id="二-iphone手机设置"><a href="#二-iphone手机设置" class="headerlink" title="二.iphone手机设置"></a>二.iphone手机设置</h3><h4 id="1-打开Charles安装证书"><a href="#1-打开Charles安装证书" class="headerlink" title="1.打开Charles安装证书"></a>1.打开Charles安装证书</h4><img src="/2023/12/23/%E4%BD%BF%E7%94%A8Charles%E5%AE%9E%E7%8E%B0%E7%A7%BB%E5%8A%A8App%E6%8E%A5%E5%8F%A3%E6%95%B0%E6%8D%AE%E6%8A%93%E5%8C%85%E6%95%99%E7%A8%8B/8.png" class="" width="488" title="打开Charles安装证书"><p>&nbsp;</p><img src="/2023/12/23/%E4%BD%BF%E7%94%A8Charles%E5%AE%9E%E7%8E%B0%E7%A7%BB%E5%8A%A8App%E6%8E%A5%E5%8F%A3%E6%95%B0%E6%8D%AE%E6%8A%93%E5%8C%85%E6%95%99%E7%A8%8B/9.png" class="" width="488" title="打开Charles安装证书"><p>&nbsp;</p><h4 id="2-开启手机代理"><a href="#2-开启手机代理" class="headerlink" title="2. 开启手机代理"></a>2. 开启手机代理</h4><div class="note note-warning @title">            <p>打开手机wifi设置，启用手动代理，并把地址和端口填写电脑的ip，即上面图中显示的地址和端口，注意你的ip可能和图片中的不同，不要写成和我的一模一样！</p>          </div><img src="/2023/12/23/%E4%BD%BF%E7%94%A8Charles%E5%AE%9E%E7%8E%B0%E7%A7%BB%E5%8A%A8App%E6%8E%A5%E5%8F%A3%E6%95%B0%E6%8D%AE%E6%8A%93%E5%8C%85%E6%95%99%E7%A8%8B/10.png" class="" width="488" title="配置手机代理"><p>&nbsp;</p><img src="/2023/12/23/%E4%BD%BF%E7%94%A8Charles%E5%AE%9E%E7%8E%B0%E7%A7%BB%E5%8A%A8App%E6%8E%A5%E5%8F%A3%E6%95%B0%E6%8D%AE%E6%8A%93%E5%8C%85%E6%95%99%E7%A8%8B/11.png" class="" width="488" title="配置手机代理"><p>&nbsp;</p><img src="/2023/12/23/%E4%BD%BF%E7%94%A8Charles%E5%AE%9E%E7%8E%B0%E7%A7%BB%E5%8A%A8App%E6%8E%A5%E5%8F%A3%E6%95%B0%E6%8D%AE%E6%8A%93%E5%8C%85%E6%95%99%E7%A8%8B/12.png" class="" width="488" title="配置手机代理"><p>&nbsp;</p><h4 id="3-安装手机Charles证书"><a href="#3-安装手机Charles证书" class="headerlink" title="3.安装手机Charles证书"></a>3.安装手机Charles证书</h4><div class="note note-warning @title">            <p>在safari浏览器中输入chls.pro&#x2F;ssl。按照提示下载安装证书</p>          </div><img src="/2023/12/23/%E4%BD%BF%E7%94%A8Charles%E5%AE%9E%E7%8E%B0%E7%A7%BB%E5%8A%A8App%E6%8E%A5%E5%8F%A3%E6%95%B0%E6%8D%AE%E6%8A%93%E5%8C%85%E6%95%99%E7%A8%8B/13.png" class="" width="488" title="安装证书"><p>&nbsp;</p><img src="/2023/12/23/%E4%BD%BF%E7%94%A8Charles%E5%AE%9E%E7%8E%B0%E7%A7%BB%E5%8A%A8App%E6%8E%A5%E5%8F%A3%E6%95%B0%E6%8D%AE%E6%8A%93%E5%8C%85%E6%95%99%E7%A8%8B/14.png" class="" width="488" title="安装证书"><p>&nbsp;</p><img src="/2023/12/23/%E4%BD%BF%E7%94%A8Charles%E5%AE%9E%E7%8E%B0%E7%A7%BB%E5%8A%A8App%E6%8E%A5%E5%8F%A3%E6%95%B0%E6%8D%AE%E6%8A%93%E5%8C%85%E6%95%99%E7%A8%8B/15.png" class="" width="488" title="安装证书"><p>&nbsp;</p><img src="/2023/12/23/%E4%BD%BF%E7%94%A8Charles%E5%AE%9E%E7%8E%B0%E7%A7%BB%E5%8A%A8App%E6%8E%A5%E5%8F%A3%E6%95%B0%E6%8D%AE%E6%8A%93%E5%8C%85%E6%95%99%E7%A8%8B/16.png" class="" width="488" title="安装证书"><p>&nbsp;</p><img src="/2023/12/23/%E4%BD%BF%E7%94%A8Charles%E5%AE%9E%E7%8E%B0%E7%A7%BB%E5%8A%A8App%E6%8E%A5%E5%8F%A3%E6%95%B0%E6%8D%AE%E6%8A%93%E5%8C%85%E6%95%99%E7%A8%8B/17.png" class="" width="488" title="安装证书"><p>&nbsp;</p><img src="/2023/12/23/%E4%BD%BF%E7%94%A8Charles%E5%AE%9E%E7%8E%B0%E7%A7%BB%E5%8A%A8App%E6%8E%A5%E5%8F%A3%E6%95%B0%E6%8D%AE%E6%8A%93%E5%8C%85%E6%95%99%E7%A8%8B/18.png" class="" width="488" title="安装证书"><p>&nbsp;<br>设置证书受信任</p><img src="/2023/12/23/%E4%BD%BF%E7%94%A8Charles%E5%AE%9E%E7%8E%B0%E7%A7%BB%E5%8A%A8App%E6%8E%A5%E5%8F%A3%E6%95%B0%E6%8D%AE%E6%8A%93%E5%8C%85%E6%95%99%E7%A8%8B/35.png" class="" width="488" title="安装证书"><p>&nbsp;</p><img src="/2023/12/23/%E4%BD%BF%E7%94%A8Charles%E5%AE%9E%E7%8E%B0%E7%A7%BB%E5%8A%A8App%E6%8E%A5%E5%8F%A3%E6%95%B0%E6%8D%AE%E6%8A%93%E5%8C%85%E6%95%99%E7%A8%8B/36.png" class="" width="488" title="安装证书"><p>&nbsp;</p><h3 id="三-android手机设置"><a href="#三-android手机设置" class="headerlink" title="三.android手机设置"></a>三.android手机设置</h3><h4 id="1-打开Charles安装证书-1"><a href="#1-打开Charles安装证书-1" class="headerlink" title="1.打开Charles安装证书"></a>1.打开Charles安装证书</h4><img src="/2023/12/23/%E4%BD%BF%E7%94%A8Charles%E5%AE%9E%E7%8E%B0%E7%A7%BB%E5%8A%A8App%E6%8E%A5%E5%8F%A3%E6%95%B0%E6%8D%AE%E6%8A%93%E5%8C%85%E6%95%99%E7%A8%8B/8.png" class="" width="488" title="打开Charles安装证书"><p>&nbsp;</p><img src="/2023/12/23/%E4%BD%BF%E7%94%A8Charles%E5%AE%9E%E7%8E%B0%E7%A7%BB%E5%8A%A8App%E6%8E%A5%E5%8F%A3%E6%95%B0%E6%8D%AE%E6%8A%93%E5%8C%85%E6%95%99%E7%A8%8B/9.png" class="" width="488" title="打开Charles安装证书"><p>&nbsp;</p><h4 id="2-开启手机代理-1"><a href="#2-开启手机代理-1" class="headerlink" title="2. 开启手机代理"></a>2. 开启手机代理</h4><div class="note note-warning @title">            <p>打开手机wifi设置，启用手动代理，并把地址和端口填写电脑的ip，即上面图中显示的地址和端口，注意你的ip可能和图片中的不同，不要写成和我的一模一样！</p>          </div><img src="/2023/12/23/%E4%BD%BF%E7%94%A8Charles%E5%AE%9E%E7%8E%B0%E7%A7%BB%E5%8A%A8App%E6%8E%A5%E5%8F%A3%E6%95%B0%E6%8D%AE%E6%8A%93%E5%8C%85%E6%95%99%E7%A8%8B/19.png" class="" width="488" title="配置手机代理"><p>&nbsp;</p><img src="/2023/12/23/%E4%BD%BF%E7%94%A8Charles%E5%AE%9E%E7%8E%B0%E7%A7%BB%E5%8A%A8App%E6%8E%A5%E5%8F%A3%E6%95%B0%E6%8D%AE%E6%8A%93%E5%8C%85%E6%95%99%E7%A8%8B/20.png" class="" width="488" title="配置手机代理"><p>&nbsp;</p><img src="/2023/12/23/%E4%BD%BF%E7%94%A8Charles%E5%AE%9E%E7%8E%B0%E7%A7%BB%E5%8A%A8App%E6%8E%A5%E5%8F%A3%E6%95%B0%E6%8D%AE%E6%8A%93%E5%8C%85%E6%95%99%E7%A8%8B/21.png" class="" width="488" title="配置手机代理"><p>&nbsp;</p><img src="/2023/12/23/%E4%BD%BF%E7%94%A8Charles%E5%AE%9E%E7%8E%B0%E7%A7%BB%E5%8A%A8App%E6%8E%A5%E5%8F%A3%E6%95%B0%E6%8D%AE%E6%8A%93%E5%8C%85%E6%95%99%E7%A8%8B/22.png" class="" width="488" title="配置手机代理"><p>&nbsp;</p><h4 id="3-安装手机Charles证书-1"><a href="#3-安装手机Charles证书-1" class="headerlink" title="3.安装手机Charles证书"></a>3.安装手机Charles证书</h4><div class="note note-warning @title">            <p>在手机浏览器中输入chls.pro&#x2F;ssl。按照提示下载安装证书</p>          </div><img src="/2023/12/23/%E4%BD%BF%E7%94%A8Charles%E5%AE%9E%E7%8E%B0%E7%A7%BB%E5%8A%A8App%E6%8E%A5%E5%8F%A3%E6%95%B0%E6%8D%AE%E6%8A%93%E5%8C%85%E6%95%99%E7%A8%8B/23.png" class="" width="488" title="安装证书"><p>&nbsp;</p><img src="/2023/12/23/%E4%BD%BF%E7%94%A8Charles%E5%AE%9E%E7%8E%B0%E7%A7%BB%E5%8A%A8App%E6%8E%A5%E5%8F%A3%E6%95%B0%E6%8D%AE%E6%8A%93%E5%8C%85%E6%95%99%E7%A8%8B/24.png" class="" width="488" title="安装证书"><p>&nbsp;</p><img src="/2023/12/23/%E4%BD%BF%E7%94%A8Charles%E5%AE%9E%E7%8E%B0%E7%A7%BB%E5%8A%A8App%E6%8E%A5%E5%8F%A3%E6%95%B0%E6%8D%AE%E6%8A%93%E5%8C%85%E6%95%99%E7%A8%8B/25.png" class="" width="488" title="安装证书"><p>&nbsp;</p><img src="/2023/12/23/%E4%BD%BF%E7%94%A8Charles%E5%AE%9E%E7%8E%B0%E7%A7%BB%E5%8A%A8App%E6%8E%A5%E5%8F%A3%E6%95%B0%E6%8D%AE%E6%8A%93%E5%8C%85%E6%95%99%E7%A8%8B/29.png" class="" width="488" title="安装证书"><div class="note note-warning @title">            <p>可以直接点击这个打开，选择用证书 安装器打开安装。如果没有这个证书安装器。就到设置的加密和凭据中于动安装</p>          </div><img src="/2023/12/23/%E4%BD%BF%E7%94%A8Charles%E5%AE%9E%E7%8E%B0%E7%A7%BB%E5%8A%A8App%E6%8E%A5%E5%8F%A3%E6%95%B0%E6%8D%AE%E6%8A%93%E5%8C%85%E6%95%99%E7%A8%8B/26.png" class="" width="488" title="安装证书"><p>&nbsp;</p><img src="/2023/12/23/%E4%BD%BF%E7%94%A8Charles%E5%AE%9E%E7%8E%B0%E7%A7%BB%E5%8A%A8App%E6%8E%A5%E5%8F%A3%E6%95%B0%E6%8D%AE%E6%8A%93%E5%8C%85%E6%95%99%E7%A8%8B/27.png" class="" width="488" title="安装证书"><p>&nbsp;</p><img src="/2023/12/23/%E4%BD%BF%E7%94%A8Charles%E5%AE%9E%E7%8E%B0%E7%A7%BB%E5%8A%A8App%E6%8E%A5%E5%8F%A3%E6%95%B0%E6%8D%AE%E6%8A%93%E5%8C%85%E6%95%99%E7%A8%8B/28.png" class="" width="488" title="安装证书"><p>&nbsp;</p><div class="note note-warning @title">            <p>安装证书</p>          </div><img src="/2023/12/23/%E4%BD%BF%E7%94%A8Charles%E5%AE%9E%E7%8E%B0%E7%A7%BB%E5%8A%A8App%E6%8E%A5%E5%8F%A3%E6%95%B0%E6%8D%AE%E6%8A%93%E5%8C%85%E6%95%99%E7%A8%8B/30.png" class="" width="488" title="安装证书"><p>&nbsp;</p><img src="/2023/12/23/%E4%BD%BF%E7%94%A8Charles%E5%AE%9E%E7%8E%B0%E7%A7%BB%E5%8A%A8App%E6%8E%A5%E5%8F%A3%E6%95%B0%E6%8D%AE%E6%8A%93%E5%8C%85%E6%95%99%E7%A8%8B/31.png" class="" width="488" title="安装证书"><p>&nbsp;</p><h3 id="四-配置Charles-只让指定的域名展示"><a href="#四-配置Charles-只让指定的域名展示" class="headerlink" title="四.配置Charles,只让指定的域名展示"></a>四.配置Charles,只让指定的域名展示</h3><p>&nbsp;</p><div class="note note-info @title">            <p>我们在使用的时候，通常只想要我们想要抓取的app或者网站请求的接口展示出来，其他的不显示</p>          </div><img src="/2023/12/23/%E4%BD%BF%E7%94%A8Charles%E5%AE%9E%E7%8E%B0%E7%A7%BB%E5%8A%A8App%E6%8E%A5%E5%8F%A3%E6%95%B0%E6%8D%AE%E6%8A%93%E5%8C%85%E6%95%99%E7%A8%8B/32.png" class="" width="488" title="配置Charles"><p>&nbsp;</p><img src="/2023/12/23/%E4%BD%BF%E7%94%A8Charles%E5%AE%9E%E7%8E%B0%E7%A7%BB%E5%8A%A8App%E6%8E%A5%E5%8F%A3%E6%95%B0%E6%8D%AE%E6%8A%93%E5%8C%85%E6%95%99%E7%A8%8B/33.png" class="" width="488" title="配置Charles"><p>&nbsp;</p><img src="/2023/12/23/%E4%BD%BF%E7%94%A8Charles%E5%AE%9E%E7%8E%B0%E7%A7%BB%E5%8A%A8App%E6%8E%A5%E5%8F%A3%E6%95%B0%E6%8D%AE%E6%8A%93%E5%8C%85%E6%95%99%E7%A8%8B/34.png" class="" width="488" title="配置Charles"><p>&nbsp;</p><h4 id="如果不明白可以观看视频"><a href="#如果不明白可以观看视频" class="headerlink" title="如果不明白可以观看视频"></a>如果不明白可以观看视频</h4><iframe width="auto" height="auto" src="https://www.youtube.com/embed/i1DahFfhqlc" title="iphone手机抓包|ios app 抓包|charles抓包|微信小程序抓包|微信小程序API接口抓包教程|android app抓包教程" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>]]></content>
    
    
    <categories>
      
      <category>工具分享</category>
      
      <category>视频教程</category>
      
      <category>技术分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Charles</tag>
      
      <tag>抓包</tag>
      
      <tag>App</tag>
      
      <tag>教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
